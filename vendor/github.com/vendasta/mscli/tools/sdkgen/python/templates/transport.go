package templates

//TransportTemplate is the template for generating the transport layer
var TransportTemplate = `"""
# Code generated by sdkgen
# DO NOT EDIT!.

Transport layer for communicating with an API by either http/json or gRPC depending on environment.
"""
from vax.transport.transport_client import TransportOverHttp, TransportOverGRPC
from vax.errors import TransportException
from vax.transport.instance_auth_cache import InstanceAuthCache
{{range .Services }}
from .._generated import {{.PyFileName}}
{{end}}
grpc = None
try:
    import grpc
except ImportError:
    pass


def _get_connection(host, scope, service_account, environment, cache=None):
    """ Gets a connection over grpc or http """
    cache = cache or InstanceAuthCache()
    if grpc is not None:
        return {{.GRPCServiceName}}(host, scope, service_account, environment, cache)
    return {{.HTTPServiceName}}(host, scope, service_account, environment, cache)


{{range .Services }}{{ $svc := . }}
class _{{.Name}}TransportOverHttp(TransportOverHttp):
    """ {{ .Name }} over HTTP """
    {{range .RPCS }}
    def {{.Name}}(self, request):
        response = {{$svc.PyFileName}}.{{.ResponseClassName}}()
        self._do_request("{{.Path}}", request, response)
        return response
{{end}}{{end}}
{{range .Services }}{{ $svc := . }}
class _{{.Name}}TransportOverGRPC(TransportOverGRPC):
    """ {{.Name}} over GRPC """
    def __init__(self, *args, **kwargs):
        super(_{{.Name}}TransportOverGRPC, self).__init__(*args, **kwargs)
        self._stub = {{$svc.PyFileName}}.{{.Name}}Stub(self._channel)
    {{range .RPCS }}
    def {{.Name}}(self, request):
        try:
            return self._stub.{{.Name}}(request)
        except grpc.RpcError as e:
            raise TransportException.from_grpc_error(e)
{{end}}{{end}}`
