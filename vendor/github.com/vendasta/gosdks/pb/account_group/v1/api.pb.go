// Code generated by protoc-gen-go. DO NOT EDIT.
// source: account_group/v1/api.proto

package accountgroup_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf2 "github.com/golang/protobuf/ptypes/empty"
import google_protobuf3 "github.com/golang/protobuf/ptypes/wrappers"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// The directions that a result set can be sorted in.
type SortDirection int32

const (
	SortDirection_Ascending  SortDirection = 0
	SortDirection_Descending SortDirection = 1
)

var SortDirection_name = map[int32]string{
	0: "Ascending",
	1: "Descending",
}
var SortDirection_value = map[string]int32{
	"Ascending":  0,
	"Descending": 1,
}

func (x SortDirection) String() string {
	return proto.EnumName(SortDirection_name, int32(x))
}
func (SortDirection) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// The field to sort a result set on.
type SortField int32

const (
	SortField_Modified    SortField = 0
	SortField_Created     SortField = 1
	SortField_CompanyName SortField = 2
)

var SortField_name = map[int32]string{
	0: "Modified",
	1: "Created",
	2: "CompanyName",
}
var SortField_value = map[string]int32{
	"Modified":    0,
	"Created":     1,
	"CompanyName": 2,
}

func (x SortField) String() string {
	return proto.EnumName(SortField_name, int32(x))
}
func (SortField) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type ListingSyncPro_ServiceProviders int32

const (
	ListingSyncPro_UBERALL ListingSyncPro_ServiceProviders = 0
	ListingSyncPro_YEXT    ListingSyncPro_ServiceProviders = 1
)

var ListingSyncPro_ServiceProviders_name = map[int32]string{
	0: "UBERALL",
	1: "YEXT",
}
var ListingSyncPro_ServiceProviders_value = map[string]int32{
	"UBERALL": 0,
	"YEXT":    1,
}

func (x ListingSyncPro_ServiceProviders) String() string {
	return proto.EnumName(ListingSyncPro_ServiceProviders_name, int32(x))
}
func (ListingSyncPro_ServiceProviders) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{3, 0}
}

type ListingSyncPro_BillingFrequency int32

const (
	ListingSyncPro_MONTHLY  ListingSyncPro_BillingFrequency = 0
	ListingSyncPro_YEARLY   ListingSyncPro_BillingFrequency = 1
	ListingSyncPro_ONE_TIME ListingSyncPro_BillingFrequency = 2
)

var ListingSyncPro_BillingFrequency_name = map[int32]string{
	0: "MONTHLY",
	1: "YEARLY",
	2: "ONE_TIME",
}
var ListingSyncPro_BillingFrequency_value = map[string]int32{
	"MONTHLY":  0,
	"YEARLY":   1,
	"ONE_TIME": 2,
}

func (x ListingSyncPro_BillingFrequency) String() string {
	return proto.EnumName(ListingSyncPro_BillingFrequency_name, int32(x))
}
func (ListingSyncPro_BillingFrequency) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{3, 1}
}

type HealthCareProfessionalInformation_Gender int32

const (
	HealthCareProfessionalInformation_NotSpecified HealthCareProfessionalInformation_Gender = 0
	HealthCareProfessionalInformation_Female       HealthCareProfessionalInformation_Gender = 1
	HealthCareProfessionalInformation_Male         HealthCareProfessionalInformation_Gender = 2
	HealthCareProfessionalInformation_Other        HealthCareProfessionalInformation_Gender = 3
)

var HealthCareProfessionalInformation_Gender_name = map[int32]string{
	0: "NotSpecified",
	1: "Female",
	2: "Male",
	3: "Other",
}
var HealthCareProfessionalInformation_Gender_value = map[string]int32{
	"NotSpecified": 0,
	"Female":       1,
	"Male":         2,
	"Other":        3,
}

func (x HealthCareProfessionalInformation_Gender) String() string {
	return proto.EnumName(HealthCareProfessionalInformation_Gender_name, int32(x))
}
func (HealthCareProfessionalInformation_Gender) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{11, 0}
}

type RichData_PaymentMethods int32

const (
	RichData_AMERICAN_EXPRESS RichData_PaymentMethods = 0
	RichData_ANDROID_PAY      RichData_PaymentMethods = 1
	RichData_APPLE_PAY        RichData_PaymentMethods = 2
	RichData_CASH             RichData_PaymentMethods = 3
	RichData_CHECK            RichData_PaymentMethods = 4
	RichData_DEBIT            RichData_PaymentMethods = 5
	RichData_DINERS_CLUB      RichData_PaymentMethods = 6
	RichData_DISCOVER         RichData_PaymentMethods = 7
	RichData_MASTERCARD       RichData_PaymentMethods = 8
	RichData_PAYPAL           RichData_PaymentMethods = 9
	RichData_SAMSUNG_PAY      RichData_PaymentMethods = 10
	RichData_STORE_CARD       RichData_PaymentMethods = 11
	RichData_TRAVELERS_CHECK  RichData_PaymentMethods = 12
	RichData_VISA             RichData_PaymentMethods = 13
)

var RichData_PaymentMethods_name = map[int32]string{
	0:  "AMERICAN_EXPRESS",
	1:  "ANDROID_PAY",
	2:  "APPLE_PAY",
	3:  "CASH",
	4:  "CHECK",
	5:  "DEBIT",
	6:  "DINERS_CLUB",
	7:  "DISCOVER",
	8:  "MASTERCARD",
	9:  "PAYPAL",
	10: "SAMSUNG_PAY",
	11: "STORE_CARD",
	12: "TRAVELERS_CHECK",
	13: "VISA",
}
var RichData_PaymentMethods_value = map[string]int32{
	"AMERICAN_EXPRESS": 0,
	"ANDROID_PAY":      1,
	"APPLE_PAY":        2,
	"CASH":             3,
	"CHECK":            4,
	"DEBIT":            5,
	"DINERS_CLUB":      6,
	"DISCOVER":         7,
	"MASTERCARD":       8,
	"PAYPAL":           9,
	"SAMSUNG_PAY":      10,
	"STORE_CARD":       11,
	"TRAVELERS_CHECK":  12,
	"VISA":             13,
}

func (x RichData_PaymentMethods) String() string {
	return proto.EnumName(RichData_PaymentMethods_name, int32(x))
}
func (RichData_PaymentMethods) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{12, 0} }

type LookupRequest_AccountStatus int32

const (
	LookupRequest_Enabled  LookupRequest_AccountStatus = 0
	LookupRequest_Disabled LookupRequest_AccountStatus = 1
	LookupRequest_Trial    LookupRequest_AccountStatus = 2
)

var LookupRequest_AccountStatus_name = map[int32]string{
	0: "Enabled",
	1: "Disabled",
	2: "Trial",
}
var LookupRequest_AccountStatus_value = map[string]int32{
	"Enabled":  0,
	"Disabled": 1,
	"Trial":    2,
}

func (x LookupRequest_AccountStatus) String() string {
	return proto.EnumName(LookupRequest_AccountStatus_name, int32(x))
}
func (LookupRequest_AccountStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{23, 0}
}

type LookupRequest_Presence int32

const (
	LookupRequest_Any     LookupRequest_Presence = 0
	LookupRequest_Present LookupRequest_Presence = 1
	LookupRequest_Absent  LookupRequest_Presence = 2
)

var LookupRequest_Presence_name = map[int32]string{
	0: "Any",
	1: "Present",
	2: "Absent",
}
var LookupRequest_Presence_value = map[string]int32{
	"Any":     0,
	"Present": 1,
	"Absent":  2,
}

func (x LookupRequest_Presence) String() string {
	return proto.EnumName(LookupRequest_Presence_name, int32(x))
}
func (LookupRequest_Presence) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{23, 1} }

// Represents a geo point location.
type Geo struct {
	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *Geo) Reset()                    { *m = Geo{} }
func (m *Geo) String() string            { return proto.CompactTextString(m) }
func (*Geo) ProtoMessage()               {}
func (*Geo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Geo) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Geo) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type Accounts struct {
	Accounts []*Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
}

func (m *Accounts) Reset()                    { *m = Accounts{} }
func (m *Accounts) String() string            { return proto.CompactTextString(m) }
func (*Accounts) ProtoMessage()               {}
func (*Accounts) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Accounts) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type ListingDistributionDetails struct {
	OrderId    string                      `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	PurchaseId string                      `protobuf:"bytes,2,opt,name=purchase_id,json=purchaseId" json:"purchase_id,omitempty"`
	FromDate   *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=from_date,json=fromDate" json:"from_date,omitempty"`
	ThruDate   *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=thru_date,json=thruDate" json:"thru_date,omitempty"`
	AutoRenew  bool                        `protobuf:"varint,5,opt,name=auto_renew,json=autoRenew" json:"auto_renew,omitempty"`
}

func (m *ListingDistributionDetails) Reset()                    { *m = ListingDistributionDetails{} }
func (m *ListingDistributionDetails) String() string            { return proto.CompactTextString(m) }
func (*ListingDistributionDetails) ProtoMessage()               {}
func (*ListingDistributionDetails) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *ListingDistributionDetails) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *ListingDistributionDetails) GetPurchaseId() string {
	if m != nil {
		return m.PurchaseId
	}
	return ""
}

func (m *ListingDistributionDetails) GetFromDate() *google_protobuf1.Timestamp {
	if m != nil {
		return m.FromDate
	}
	return nil
}

func (m *ListingDistributionDetails) GetThruDate() *google_protobuf1.Timestamp {
	if m != nil {
		return m.ThruDate
	}
	return nil
}

func (m *ListingDistributionDetails) GetAutoRenew() bool {
	if m != nil {
		return m.AutoRenew
	}
	return false
}

type ListingSyncPro struct {
	PurchaseDate     *google_protobuf1.Timestamp     `protobuf:"bytes,1,opt,name=purchase_date,json=purchaseDate" json:"purchase_date,omitempty"`
	BillingFrequency ListingSyncPro_BillingFrequency `protobuf:"varint,2,opt,name=billing_frequency,json=billingFrequency,enum=accountgroup.v1.ListingSyncPro_BillingFrequency" json:"billing_frequency,omitempty"`
	ExpiryDate       *google_protobuf1.Timestamp     `protobuf:"bytes,3,opt,name=expiry_date,json=expiryDate" json:"expiry_date,omitempty"`
	Country          string                          `protobuf:"bytes,4,opt,name=country" json:"country,omitempty"`
	DiscountFlag     bool                            `protobuf:"varint,5,opt,name=discount_flag,json=discountFlag" json:"discount_flag,omitempty"`
	ServiceProvider  ListingSyncPro_ServiceProviders `protobuf:"varint,6,opt,name=service_provider,json=serviceProvider,enum=accountgroup.v1.ListingSyncPro_ServiceProviders" json:"service_provider,omitempty"`
}

func (m *ListingSyncPro) Reset()                    { *m = ListingSyncPro{} }
func (m *ListingSyncPro) String() string            { return proto.CompactTextString(m) }
func (*ListingSyncPro) ProtoMessage()               {}
func (*ListingSyncPro) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *ListingSyncPro) GetPurchaseDate() *google_protobuf1.Timestamp {
	if m != nil {
		return m.PurchaseDate
	}
	return nil
}

func (m *ListingSyncPro) GetBillingFrequency() ListingSyncPro_BillingFrequency {
	if m != nil {
		return m.BillingFrequency
	}
	return ListingSyncPro_MONTHLY
}

func (m *ListingSyncPro) GetExpiryDate() *google_protobuf1.Timestamp {
	if m != nil {
		return m.ExpiryDate
	}
	return nil
}

func (m *ListingSyncPro) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *ListingSyncPro) GetDiscountFlag() bool {
	if m != nil {
		return m.DiscountFlag
	}
	return false
}

func (m *ListingSyncPro) GetServiceProvider() ListingSyncPro_ServiceProviders {
	if m != nil {
		return m.ServiceProvider
	}
	return ListingSyncPro_UBERALL
}

type AccountGroupExternalIdentifiers struct {
	Origin             string   `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
	JobId              []string `protobuf:"bytes,2,rep,name=job_id,json=jobId" json:"job_id,omitempty"`
	CustomerIdentifier string   `protobuf:"bytes,3,opt,name=customer_identifier,json=customerIdentifier" json:"customer_identifier,omitempty"`
	Tags               []string `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	ActionLists        []string `protobuf:"bytes,6,rep,name=action_lists,json=actionLists" json:"action_lists,omitempty"`
	SocialProfileId    string   `protobuf:"bytes,7,opt,name=social_profile_id,json=socialProfileId" json:"social_profile_id,omitempty"`
	PartnerId          string   `protobuf:"bytes,8,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	MarketId           string   `protobuf:"bytes,9,opt,name=market_id,json=marketId" json:"market_id,omitempty"`
	TaxIds             []string `protobuf:"bytes,10,rep,name=tax_ids,json=taxIds" json:"tax_ids,omitempty"`
	// Primary salesperson id
	SalesPersonId string `protobuf:"bytes,11,opt,name=sales_person_id,json=salesPersonId" json:"sales_person_id,omitempty"`
	// Additional salesperson ids assigned to an account group which is not the primary salesperson id
	AdditionalSalesPersonIds []string `protobuf:"bytes,12,rep,name=additional_sales_person_ids,json=additionalSalesPersonIds" json:"additional_sales_person_ids,omitempty"`
	// Used to link AccountGroups to a corresponding Salesforce Account Object
	SalesforceId string `protobuf:"bytes,13,opt,name=salesforce_id,json=salesforceId" json:"salesforce_id,omitempty"`
}

func (m *AccountGroupExternalIdentifiers) Reset()                    { *m = AccountGroupExternalIdentifiers{} }
func (m *AccountGroupExternalIdentifiers) String() string            { return proto.CompactTextString(m) }
func (*AccountGroupExternalIdentifiers) ProtoMessage()               {}
func (*AccountGroupExternalIdentifiers) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *AccountGroupExternalIdentifiers) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *AccountGroupExternalIdentifiers) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

func (m *AccountGroupExternalIdentifiers) GetCustomerIdentifier() string {
	if m != nil {
		return m.CustomerIdentifier
	}
	return ""
}

func (m *AccountGroupExternalIdentifiers) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *AccountGroupExternalIdentifiers) GetActionLists() []string {
	if m != nil {
		return m.ActionLists
	}
	return nil
}

func (m *AccountGroupExternalIdentifiers) GetSocialProfileId() string {
	if m != nil {
		return m.SocialProfileId
	}
	return ""
}

func (m *AccountGroupExternalIdentifiers) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *AccountGroupExternalIdentifiers) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *AccountGroupExternalIdentifiers) GetTaxIds() []string {
	if m != nil {
		return m.TaxIds
	}
	return nil
}

func (m *AccountGroupExternalIdentifiers) GetSalesPersonId() string {
	if m != nil {
		return m.SalesPersonId
	}
	return ""
}

func (m *AccountGroupExternalIdentifiers) GetAdditionalSalesPersonIds() []string {
	if m != nil {
		return m.AdditionalSalesPersonIds
	}
	return nil
}

func (m *AccountGroupExternalIdentifiers) GetSalesforceId() string {
	if m != nil {
		return m.SalesforceId
	}
	return ""
}

type SocialURLs struct {
	GoogleplusUrl string `protobuf:"bytes,1,opt,name=googleplus_url,json=googleplusUrl" json:"googleplus_url,omitempty"`
	LinkedinUrl   string `protobuf:"bytes,2,opt,name=linkedin_url,json=linkedinUrl" json:"linkedin_url,omitempty"`
	FoursquareUrl string `protobuf:"bytes,3,opt,name=foursquare_url,json=foursquareUrl" json:"foursquare_url,omitempty"`
	TwitterUrl    string `protobuf:"bytes,4,opt,name=twitter_url,json=twitterUrl" json:"twitter_url,omitempty"`
	FacebookUrl   string `protobuf:"bytes,5,opt,name=facebook_url,json=facebookUrl" json:"facebook_url,omitempty"`
	RssUrl        string `protobuf:"bytes,6,opt,name=rss_url,json=rssUrl" json:"rss_url,omitempty"`
	YoutubeUrl    string `protobuf:"bytes,7,opt,name=youtube_url,json=youtubeUrl" json:"youtube_url,omitempty"`
	InstagramUrl  string `protobuf:"bytes,8,opt,name=instagram_url,json=instagramUrl" json:"instagram_url,omitempty"`
	PinterestUrl  string `protobuf:"bytes,9,opt,name=pinterest_url,json=pinterestUrl" json:"pinterest_url,omitempty"`
}

func (m *SocialURLs) Reset()                    { *m = SocialURLs{} }
func (m *SocialURLs) String() string            { return proto.CompactTextString(m) }
func (*SocialURLs) ProtoMessage()               {}
func (*SocialURLs) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *SocialURLs) GetGoogleplusUrl() string {
	if m != nil {
		return m.GoogleplusUrl
	}
	return ""
}

func (m *SocialURLs) GetLinkedinUrl() string {
	if m != nil {
		return m.LinkedinUrl
	}
	return ""
}

func (m *SocialURLs) GetFoursquareUrl() string {
	if m != nil {
		return m.FoursquareUrl
	}
	return ""
}

func (m *SocialURLs) GetTwitterUrl() string {
	if m != nil {
		return m.TwitterUrl
	}
	return ""
}

func (m *SocialURLs) GetFacebookUrl() string {
	if m != nil {
		return m.FacebookUrl
	}
	return ""
}

func (m *SocialURLs) GetRssUrl() string {
	if m != nil {
		return m.RssUrl
	}
	return ""
}

func (m *SocialURLs) GetYoutubeUrl() string {
	if m != nil {
		return m.YoutubeUrl
	}
	return ""
}

func (m *SocialURLs) GetInstagramUrl() string {
	if m != nil {
		return m.InstagramUrl
	}
	return ""
}

func (m *SocialURLs) GetPinterestUrl() string {
	if m != nil {
		return m.PinterestUrl
	}
	return ""
}

type HoursOfOperation struct {
	HoursOfOperation []*HoursOfOperation_Span `protobuf:"bytes,1,rep,name=hours_of_operation,json=hoursOfOperation" json:"hours_of_operation,omitempty"`
}

func (m *HoursOfOperation) Reset()                    { *m = HoursOfOperation{} }
func (m *HoursOfOperation) String() string            { return proto.CompactTextString(m) }
func (*HoursOfOperation) ProtoMessage()               {}
func (*HoursOfOperation) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *HoursOfOperation) GetHoursOfOperation() []*HoursOfOperation_Span {
	if m != nil {
		return m.HoursOfOperation
	}
	return nil
}

type HoursOfOperation_Span struct {
	DayOfWeek   []string `protobuf:"bytes,1,rep,name=day_of_week,json=dayOfWeek" json:"day_of_week,omitempty"`
	Opens       string   `protobuf:"bytes,2,opt,name=opens" json:"opens,omitempty"`
	Closes      string   `protobuf:"bytes,3,opt,name=closes" json:"closes,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
}

func (m *HoursOfOperation_Span) Reset()                    { *m = HoursOfOperation_Span{} }
func (m *HoursOfOperation_Span) String() string            { return proto.CompactTextString(m) }
func (*HoursOfOperation_Span) ProtoMessage()               {}
func (*HoursOfOperation_Span) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6, 0} }

func (m *HoursOfOperation_Span) GetDayOfWeek() []string {
	if m != nil {
		return m.DayOfWeek
	}
	return nil
}

func (m *HoursOfOperation_Span) GetOpens() string {
	if m != nil {
		return m.Opens
	}
	return ""
}

func (m *HoursOfOperation_Span) GetCloses() string {
	if m != nil {
		return m.Closes
	}
	return ""
}

func (m *HoursOfOperation_Span) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type ContactDetails struct {
	FirstName   string `protobuf:"bytes,1,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName    string `protobuf:"bytes,2,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	Email       string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	PhoneNumber string `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber" json:"phone_number,omitempty"`
}

func (m *ContactDetails) Reset()                    { *m = ContactDetails{} }
func (m *ContactDetails) String() string            { return proto.CompactTextString(m) }
func (*ContactDetails) ProtoMessage()               {}
func (*ContactDetails) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *ContactDetails) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *ContactDetails) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *ContactDetails) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ContactDetails) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

type Snapshots struct {
	Snapshots []*Snapshots_Snapshot `protobuf:"bytes,1,rep,name=snapshots" json:"snapshots,omitempty"`
}

func (m *Snapshots) Reset()                    { *m = Snapshots{} }
func (m *Snapshots) String() string            { return proto.CompactTextString(m) }
func (*Snapshots) ProtoMessage()               {}
func (*Snapshots) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *Snapshots) GetSnapshots() []*Snapshots_Snapshot {
	if m != nil {
		return m.Snapshots
	}
	return nil
}

type Snapshots_Snapshot struct {
	SnapshotId string                      `protobuf:"bytes,1,opt,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`
	Created    *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=created" json:"created,omitempty"`
	Expiry     *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=expiry" json:"expiry,omitempty"`
}

func (m *Snapshots_Snapshot) Reset()                    { *m = Snapshots_Snapshot{} }
func (m *Snapshots_Snapshot) String() string            { return proto.CompactTextString(m) }
func (*Snapshots_Snapshot) ProtoMessage()               {}
func (*Snapshots_Snapshot) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8, 0} }

func (m *Snapshots_Snapshot) GetSnapshotId() string {
	if m != nil {
		return m.SnapshotId
	}
	return ""
}

func (m *Snapshots_Snapshot) GetCreated() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Snapshots_Snapshot) GetExpiry() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Expiry
	}
	return nil
}

type LegacyProductDetails struct {
	KeyPerson             []string `protobuf:"bytes,1,rep,name=key_person,json=keyPerson" json:"key_person,omitempty"`
	ShareOfVoiceService   []string `protobuf:"bytes,2,rep,name=share_of_voice_service,json=shareOfVoiceService" json:"share_of_voice_service,omitempty"`
	FaxNumber             string   `protobuf:"bytes,3,opt,name=fax_number,json=faxNumber" json:"fax_number,omitempty"`
	CommonName            []string `protobuf:"bytes,4,rep,name=common_name,json=commonName" json:"common_name,omitempty"`
	CellNumber            string   `protobuf:"bytes,5,opt,name=cell_number,json=cellNumber" json:"cell_number,omitempty"`
	Competitor            []string `protobuf:"bytes,6,rep,name=competitor" json:"competitor,omitempty"`
	AdminNotes            string   `protobuf:"bytes,7,opt,name=admin_notes,json=adminNotes" json:"admin_notes,omitempty"`
	SeoCategory           []string `protobuf:"bytes,8,rep,name=seo_category,json=seoCategory" json:"seo_category,omitempty"`
	Email                 string   `protobuf:"bytes,9,opt,name=email" json:"email,omitempty"`
	Place                 string   `protobuf:"bytes,10,opt,name=place" json:"place,omitempty"`
	Tagline               string   `protobuf:"bytes,11,opt,name=tagline" json:"tagline,omitempty"`
	SubscribedToCampaigns bool     `protobuf:"varint,12,opt,name=subscribed_to_campaigns,json=subscribedToCampaigns" json:"subscribed_to_campaigns,omitempty"`
}

func (m *LegacyProductDetails) Reset()                    { *m = LegacyProductDetails{} }
func (m *LegacyProductDetails) String() string            { return proto.CompactTextString(m) }
func (*LegacyProductDetails) ProtoMessage()               {}
func (*LegacyProductDetails) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *LegacyProductDetails) GetKeyPerson() []string {
	if m != nil {
		return m.KeyPerson
	}
	return nil
}

func (m *LegacyProductDetails) GetShareOfVoiceService() []string {
	if m != nil {
		return m.ShareOfVoiceService
	}
	return nil
}

func (m *LegacyProductDetails) GetFaxNumber() string {
	if m != nil {
		return m.FaxNumber
	}
	return ""
}

func (m *LegacyProductDetails) GetCommonName() []string {
	if m != nil {
		return m.CommonName
	}
	return nil
}

func (m *LegacyProductDetails) GetCellNumber() string {
	if m != nil {
		return m.CellNumber
	}
	return ""
}

func (m *LegacyProductDetails) GetCompetitor() []string {
	if m != nil {
		return m.Competitor
	}
	return nil
}

func (m *LegacyProductDetails) GetAdminNotes() string {
	if m != nil {
		return m.AdminNotes
	}
	return ""
}

func (m *LegacyProductDetails) GetSeoCategory() []string {
	if m != nil {
		return m.SeoCategory
	}
	return nil
}

func (m *LegacyProductDetails) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LegacyProductDetails) GetPlace() string {
	if m != nil {
		return m.Place
	}
	return ""
}

func (m *LegacyProductDetails) GetTagline() string {
	if m != nil {
		return m.Tagline
	}
	return ""
}

func (m *LegacyProductDetails) GetSubscribedToCampaigns() bool {
	if m != nil {
		return m.SubscribedToCampaigns
	}
	return false
}

type CustomField struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *CustomField) Reset()                    { *m = CustomField{} }
func (m *CustomField) String() string            { return proto.CompactTextString(m) }
func (*CustomField) ProtoMessage()               {}
func (*CustomField) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *CustomField) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CustomField) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type HealthCareProfessionalInformation struct {
	DateOfBirth                *google_protobuf1.Timestamp              `protobuf:"bytes,1,opt,name=date_of_birth,json=dateOfBirth" json:"date_of_birth,omitempty"`
	Email                      string                                   `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Fellowship                 []string                                 `protobuf:"bytes,3,rep,name=fellowship" json:"fellowship,omitempty"`
	FirstName                  string                                   `protobuf:"bytes,4,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	Gender                     HealthCareProfessionalInformation_Gender `protobuf:"varint,5,opt,name=gender,enum=accountgroup.v1.HealthCareProfessionalInformation_Gender" json:"gender,omitempty"`
	Initials                   string                                   `protobuf:"bytes,6,opt,name=initials" json:"initials,omitempty"`
	InsurancesAccepted         []string                                 `protobuf:"bytes,7,rep,name=insurances_accepted,json=insurancesAccepted" json:"insurances_accepted,omitempty"`
	LastName                   string                                   `protobuf:"bytes,9,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	MedicalLicenseNumber       string                                   `protobuf:"bytes,10,opt,name=medical_license_number,json=medicalLicenseNumber" json:"medical_license_number,omitempty"`
	NationalProviderIdentifier string                                   `protobuf:"bytes,11,opt,name=national_provider_identifier,json=nationalProviderIdentifier" json:"national_provider_identifier,omitempty"`
	Office                     string                                   `protobuf:"bytes,12,opt,name=office" json:"office,omitempty"`
	ProfessionalCredential     []string                                 `protobuf:"bytes,13,rep,name=professional_credential,json=professionalCredential" json:"professional_credential,omitempty"`
	Residency                  []string                                 `protobuf:"bytes,14,rep,name=residency" json:"residency,omitempty"`
	School                     []string                                 `protobuf:"bytes,15,rep,name=school" json:"school,omitempty"`
	Specialty                  []string                                 `protobuf:"bytes,16,rep,name=specialty" json:"specialty,omitempty"`
	StandardizedTitle          string                                   `protobuf:"bytes,17,opt,name=standardized_title,json=standardizedTitle" json:"standardized_title,omitempty"`
	StateLicense               string                                   `protobuf:"bytes,18,opt,name=state_license,json=stateLicense" json:"state_license,omitempty"`
	IsTakingPatients           *google_protobuf3.BoolValue              `protobuf:"bytes,19,opt,name=is_taking_patients,json=isTakingPatients" json:"is_taking_patients,omitempty"`
}

func (m *HealthCareProfessionalInformation) Reset()         { *m = HealthCareProfessionalInformation{} }
func (m *HealthCareProfessionalInformation) String() string { return proto.CompactTextString(m) }
func (*HealthCareProfessionalInformation) ProtoMessage()    {}
func (*HealthCareProfessionalInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{11}
}

func (m *HealthCareProfessionalInformation) GetDateOfBirth() *google_protobuf1.Timestamp {
	if m != nil {
		return m.DateOfBirth
	}
	return nil
}

func (m *HealthCareProfessionalInformation) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *HealthCareProfessionalInformation) GetFellowship() []string {
	if m != nil {
		return m.Fellowship
	}
	return nil
}

func (m *HealthCareProfessionalInformation) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *HealthCareProfessionalInformation) GetGender() HealthCareProfessionalInformation_Gender {
	if m != nil {
		return m.Gender
	}
	return HealthCareProfessionalInformation_NotSpecified
}

func (m *HealthCareProfessionalInformation) GetInitials() string {
	if m != nil {
		return m.Initials
	}
	return ""
}

func (m *HealthCareProfessionalInformation) GetInsurancesAccepted() []string {
	if m != nil {
		return m.InsurancesAccepted
	}
	return nil
}

func (m *HealthCareProfessionalInformation) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *HealthCareProfessionalInformation) GetMedicalLicenseNumber() string {
	if m != nil {
		return m.MedicalLicenseNumber
	}
	return ""
}

func (m *HealthCareProfessionalInformation) GetNationalProviderIdentifier() string {
	if m != nil {
		return m.NationalProviderIdentifier
	}
	return ""
}

func (m *HealthCareProfessionalInformation) GetOffice() string {
	if m != nil {
		return m.Office
	}
	return ""
}

func (m *HealthCareProfessionalInformation) GetProfessionalCredential() []string {
	if m != nil {
		return m.ProfessionalCredential
	}
	return nil
}

func (m *HealthCareProfessionalInformation) GetResidency() []string {
	if m != nil {
		return m.Residency
	}
	return nil
}

func (m *HealthCareProfessionalInformation) GetSchool() []string {
	if m != nil {
		return m.School
	}
	return nil
}

func (m *HealthCareProfessionalInformation) GetSpecialty() []string {
	if m != nil {
		return m.Specialty
	}
	return nil
}

func (m *HealthCareProfessionalInformation) GetStandardizedTitle() string {
	if m != nil {
		return m.StandardizedTitle
	}
	return ""
}

func (m *HealthCareProfessionalInformation) GetStateLicense() string {
	if m != nil {
		return m.StateLicense
	}
	return ""
}

func (m *HealthCareProfessionalInformation) GetIsTakingPatients() *google_protobuf3.BoolValue {
	if m != nil {
		return m.IsTakingPatients
	}
	return nil
}

type RichData struct {
	TollFreeNumber                    string                             `protobuf:"bytes,1,opt,name=toll_free_number,json=tollFreeNumber" json:"toll_free_number,omitempty"`
	Description                       string                             `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	ShortDescription                  string                             `protobuf:"bytes,3,opt,name=short_description,json=shortDescription" json:"short_description,omitempty"`
	ServicesOffered                   []string                           `protobuf:"bytes,4,rep,name=services_offered,json=servicesOffered" json:"services_offered,omitempty"`
	BrandsCarried                     []string                           `protobuf:"bytes,5,rep,name=brands_carried,json=brandsCarried" json:"brands_carried,omitempty"`
	Landmark                          string                             `protobuf:"bytes,6,opt,name=landmark" json:"landmark,omitempty"`
	PaymentMethods                    []RichData_PaymentMethods          `protobuf:"varint,7,rep,packed,name=payment_methods,json=paymentMethods,enum=accountgroup.v1.RichData_PaymentMethods" json:"payment_methods,omitempty"`
	CustomFields                      []*CustomField                     `protobuf:"bytes,8,rep,name=custom_fields,json=customFields" json:"custom_fields,omitempty"`
	HealthCareProfessionalInformation *HealthCareProfessionalInformation `protobuf:"bytes,9,opt,name=health_care_professional_information,json=healthCareProfessionalInformation" json:"health_care_professional_information,omitempty"`
	InferredAttributes                []string                           `protobuf:"bytes,10,rep,name=inferred_attributes,json=inferredAttributes" json:"inferred_attributes,omitempty"`
}

func (m *RichData) Reset()                    { *m = RichData{} }
func (m *RichData) String() string            { return proto.CompactTextString(m) }
func (*RichData) ProtoMessage()               {}
func (*RichData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *RichData) GetTollFreeNumber() string {
	if m != nil {
		return m.TollFreeNumber
	}
	return ""
}

func (m *RichData) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *RichData) GetShortDescription() string {
	if m != nil {
		return m.ShortDescription
	}
	return ""
}

func (m *RichData) GetServicesOffered() []string {
	if m != nil {
		return m.ServicesOffered
	}
	return nil
}

func (m *RichData) GetBrandsCarried() []string {
	if m != nil {
		return m.BrandsCarried
	}
	return nil
}

func (m *RichData) GetLandmark() string {
	if m != nil {
		return m.Landmark
	}
	return ""
}

func (m *RichData) GetPaymentMethods() []RichData_PaymentMethods {
	if m != nil {
		return m.PaymentMethods
	}
	return nil
}

func (m *RichData) GetCustomFields() []*CustomField {
	if m != nil {
		return m.CustomFields
	}
	return nil
}

func (m *RichData) GetHealthCareProfessionalInformation() *HealthCareProfessionalInformation {
	if m != nil {
		return m.HealthCareProfessionalInformation
	}
	return nil
}

func (m *RichData) GetInferredAttributes() []string {
	if m != nil {
		return m.InferredAttributes
	}
	return nil
}

type Status struct {
	Suspended bool `protobuf:"varint,1,opt,name=suspended" json:"suspended,omitempty"`
}

func (m *Status) Reset()                    { *m = Status{} }
func (m *Status) String() string            { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()               {}
func (*Status) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *Status) GetSuspended() bool {
	if m != nil {
		return m.Suspended
	}
	return false
}

type Association struct {
	Label           string `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	ProductId       string `protobuf:"bytes,2,opt,name=product_id,json=productId" json:"product_id,omitempty"`
	ProductUserId   string `protobuf:"bytes,3,opt,name=product_user_id,json=productUserId" json:"product_user_id,omitempty"`
	VbcUserId       string `protobuf:"bytes,4,opt,name=vbc_user_id,json=vbcUserId" json:"vbc_user_id,omitempty"`
	DefaultLocation bool   `protobuf:"varint,5,opt,name=default_location,json=defaultLocation" json:"default_location,omitempty"`
}

func (m *Association) Reset()                    { *m = Association{} }
func (m *Association) String() string            { return proto.CompactTextString(m) }
func (*Association) ProtoMessage()               {}
func (*Association) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *Association) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Association) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *Association) GetProductUserId() string {
	if m != nil {
		return m.ProductUserId
	}
	return ""
}

func (m *Association) GetVbcUserId() string {
	if m != nil {
		return m.VbcUserId
	}
	return ""
}

func (m *Association) GetDefaultLocation() bool {
	if m != nil {
		return m.DefaultLocation
	}
	return false
}

type ActionListAppend struct {
	ActionListName string `protobuf:"bytes,1,opt,name=action_list_name,json=actionListName" json:"action_list_name,omitempty"`
}

func (m *ActionListAppend) Reset()                    { *m = ActionListAppend{} }
func (m *ActionListAppend) String() string            { return proto.CompactTextString(m) }
func (*ActionListAppend) ProtoMessage()               {}
func (*ActionListAppend) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *ActionListAppend) GetActionListName() string {
	if m != nil {
		return m.ActionListName
	}
	return ""
}

// Represents an Account Group
type AccountGroup struct {
	AccountGroupId                  string                           `protobuf:"bytes,1,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	Deleted                         *google_protobuf1.Timestamp      `protobuf:"bytes,17,opt,name=deleted" json:"deleted,omitempty"`
	Created                         *google_protobuf1.Timestamp      `protobuf:"bytes,18,opt,name=created" json:"created,omitempty"`
	Updated                         *google_protobuf1.Timestamp      `protobuf:"bytes,19,opt,name=updated" json:"updated,omitempty"`
	Version                         int64                            `protobuf:"varint,24,opt,name=version" json:"version,omitempty"`
	Accounts                        *Accounts                        `protobuf:"bytes,30,opt,name=accounts" json:"accounts,omitempty"`
	ListingDistribution             *ListingDistributionDetails      `protobuf:"bytes,31,opt,name=listing_distribution,json=listingDistribution" json:"listing_distribution,omitempty"`
	ListingSyncPro                  *ListingSyncPro                  `protobuf:"bytes,32,opt,name=listing_sync_pro,json=listingSyncPro" json:"listing_sync_pro,omitempty"`
	Associations                    []*Association                   `protobuf:"bytes,33,rep,name=associations" json:"associations,omitempty"`
	AccountGroupExternalIdentifiers *AccountGroupExternalIdentifiers `protobuf:"bytes,35,opt,name=account_group_external_identifiers,json=accountGroupExternalIdentifiers" json:"account_group_external_identifiers,omitempty"`
	SocialUrls                      *SocialURLs                      `protobuf:"bytes,36,opt,name=social_urls,json=socialUrls" json:"social_urls,omitempty"`
	HoursOfOperation                *HoursOfOperation                `protobuf:"bytes,37,opt,name=hours_of_operation,json=hoursOfOperation" json:"hours_of_operation,omitempty"`
	ContactDetails                  *ContactDetails                  `protobuf:"bytes,38,opt,name=contact_details,json=contactDetails" json:"contact_details,omitempty"`
	SnapshotReports                 *Snapshots                       `protobuf:"bytes,39,opt,name=snapshot_reports,json=snapshotReports" json:"snapshot_reports,omitempty"`
	LegacyProductDetails            *LegacyProductDetails            `protobuf:"bytes,40,opt,name=legacy_product_details,json=legacyProductDetails" json:"legacy_product_details,omitempty"`
	RichData                        *RichData                        `protobuf:"bytes,41,opt,name=rich_data,json=richData" json:"rich_data,omitempty"`
	NapData                         *AccountGroupLocation            `protobuf:"bytes,42,opt,name=nap_data,json=napData" json:"nap_data,omitempty"`
	Status                          *Status                          `protobuf:"bytes,43,opt,name=status" json:"status,omitempty"`
}

func (m *AccountGroup) Reset()                    { *m = AccountGroup{} }
func (m *AccountGroup) String() string            { return proto.CompactTextString(m) }
func (*AccountGroup) ProtoMessage()               {}
func (*AccountGroup) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *AccountGroup) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *AccountGroup) GetDeleted() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Deleted
	}
	return nil
}

func (m *AccountGroup) GetCreated() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *AccountGroup) GetUpdated() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *AccountGroup) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *AccountGroup) GetAccounts() *Accounts {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *AccountGroup) GetListingDistribution() *ListingDistributionDetails {
	if m != nil {
		return m.ListingDistribution
	}
	return nil
}

func (m *AccountGroup) GetListingSyncPro() *ListingSyncPro {
	if m != nil {
		return m.ListingSyncPro
	}
	return nil
}

func (m *AccountGroup) GetAssociations() []*Association {
	if m != nil {
		return m.Associations
	}
	return nil
}

func (m *AccountGroup) GetAccountGroupExternalIdentifiers() *AccountGroupExternalIdentifiers {
	if m != nil {
		return m.AccountGroupExternalIdentifiers
	}
	return nil
}

func (m *AccountGroup) GetSocialUrls() *SocialURLs {
	if m != nil {
		return m.SocialUrls
	}
	return nil
}

func (m *AccountGroup) GetHoursOfOperation() *HoursOfOperation {
	if m != nil {
		return m.HoursOfOperation
	}
	return nil
}

func (m *AccountGroup) GetContactDetails() *ContactDetails {
	if m != nil {
		return m.ContactDetails
	}
	return nil
}

func (m *AccountGroup) GetSnapshotReports() *Snapshots {
	if m != nil {
		return m.SnapshotReports
	}
	return nil
}

func (m *AccountGroup) GetLegacyProductDetails() *LegacyProductDetails {
	if m != nil {
		return m.LegacyProductDetails
	}
	return nil
}

func (m *AccountGroup) GetRichData() *RichData {
	if m != nil {
		return m.RichData
	}
	return nil
}

func (m *AccountGroup) GetNapData() *AccountGroupLocation {
	if m != nil {
		return m.NapData
	}
	return nil
}

func (m *AccountGroup) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

// Request to retrieve an account group object
type ListAccountsRequest struct {
	// Account Group ID of the account group to retrieve
	AccountGroupId string `protobuf:"bytes,1,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	// cursor should be supplied from the last response or ""
	Cursor string `protobuf:"bytes,2,opt,name=cursor" json:"cursor,omitempty"`
	// the number of results to retrieve, max size is 10.
	PageSize int64 `protobuf:"varint,3,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *ListAccountsRequest) Reset()                    { *m = ListAccountsRequest{} }
func (m *ListAccountsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListAccountsRequest) ProtoMessage()               {}
func (*ListAccountsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *ListAccountsRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *ListAccountsRequest) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *ListAccountsRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// A representation of a single account on an Account Group
type Account struct {
	// Whether the account is a trial account or not
	IsTrial bool `protobuf:"varint,1,opt,name=is_trial,json=isTrial" json:"is_trial,omitempty"`
	// Tags on the account
	Tags []string `protobuf:"bytes,2,rep,name=tags" json:"tags,omitempty"`
	// The marketplace app id or the legacy product id the account belongs to
	MarketplaceAppId string `protobuf:"bytes,3,opt,name=marketplace_app_id,json=marketplaceAppId" json:"marketplace_app_id,omitempty"`
	// Account ID of this account
	AccountId string `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// The date on which the account expires
	Expiry *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=expiry" json:"expiry,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

func (m *Account) GetIsTrial() bool {
	if m != nil {
		return m.IsTrial
	}
	return false
}

func (m *Account) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Account) GetMarketplaceAppId() string {
	if m != nil {
		return m.MarketplaceAppId
	}
	return ""
}

func (m *Account) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Account) GetExpiry() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Expiry
	}
	return nil
}

// Response to a request to get the accounts for an account group
type ListAccountsResponse struct {
	// List of the accounts the account group has
	Accounts []*Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
}

func (m *ListAccountsResponse) Reset()                    { *m = ListAccountsResponse{} }
func (m *ListAccountsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListAccountsResponse) ProtoMessage()               {}
func (*ListAccountsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

func (m *ListAccountsResponse) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

// ProjectionFilter controls which sets of extended account group data is returned for each account group.
type ProjectionFilter struct {
	// Controls if accounts is returned on the account group
	Accounts bool `protobuf:"varint,1,opt,name=accounts" json:"accounts,omitempty"`
	// Controls if listing_distribution is returned on the account group
	ListingDistribution bool `protobuf:"varint,2,opt,name=listing_distribution,json=listingDistribution" json:"listing_distribution,omitempty"`
	// Controls if listing_sync_pro is returned on the account group
	ListingSyncPro bool `protobuf:"varint,3,opt,name=listing_sync_pro,json=listingSyncPro" json:"listing_sync_pro,omitempty"`
	// Controls if associations is returned on the account group
	Associations bool `protobuf:"varint,4,opt,name=associations" json:"associations,omitempty"`
	// Controls if account_group_external_identifiers is returned on the account group
	AccountGroupExternalIdentifiers bool `protobuf:"varint,5,opt,name=account_group_external_identifiers,json=accountGroupExternalIdentifiers" json:"account_group_external_identifiers,omitempty"`
	// Controls if social_urls is returned on the account group
	SocialUrls bool `protobuf:"varint,6,opt,name=social_urls,json=socialUrls" json:"social_urls,omitempty"`
	// Controls if hours_of_operation is returned on the account group
	HoursOfOperation bool `protobuf:"varint,7,opt,name=hours_of_operation,json=hoursOfOperation" json:"hours_of_operation,omitempty"`
	// Controls if contact_details is returned on the account group
	ContactDetails bool `protobuf:"varint,8,opt,name=contact_details,json=contactDetails" json:"contact_details,omitempty"`
	// Controls if snapshot_reports is returned on the account group
	SnapshotReports bool `protobuf:"varint,9,opt,name=snapshot_reports,json=snapshotReports" json:"snapshot_reports,omitempty"`
	// Controls if legacy_product_details is returned on the account group
	LegacyProductDetails bool `protobuf:"varint,10,opt,name=legacy_product_details,json=legacyProductDetails" json:"legacy_product_details,omitempty"`
	// Controls if rich_data is returned on the account group
	RichData bool `protobuf:"varint,11,opt,name=rich_data,json=richData" json:"rich_data,omitempty"`
	// Controls if status is returned on the account group
	Status bool `protobuf:"varint,12,opt,name=status" json:"status,omitempty"`
	// Controls if nap data is returned on the account group
	NapData bool `protobuf:"varint,13,opt,name=nap_data,json=napData" json:"nap_data,omitempty"`
}

func (m *ProjectionFilter) Reset()                    { *m = ProjectionFilter{} }
func (m *ProjectionFilter) String() string            { return proto.CompactTextString(m) }
func (*ProjectionFilter) ProtoMessage()               {}
func (*ProjectionFilter) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{20} }

func (m *ProjectionFilter) GetAccounts() bool {
	if m != nil {
		return m.Accounts
	}
	return false
}

func (m *ProjectionFilter) GetListingDistribution() bool {
	if m != nil {
		return m.ListingDistribution
	}
	return false
}

func (m *ProjectionFilter) GetListingSyncPro() bool {
	if m != nil {
		return m.ListingSyncPro
	}
	return false
}

func (m *ProjectionFilter) GetAssociations() bool {
	if m != nil {
		return m.Associations
	}
	return false
}

func (m *ProjectionFilter) GetAccountGroupExternalIdentifiers() bool {
	if m != nil {
		return m.AccountGroupExternalIdentifiers
	}
	return false
}

func (m *ProjectionFilter) GetSocialUrls() bool {
	if m != nil {
		return m.SocialUrls
	}
	return false
}

func (m *ProjectionFilter) GetHoursOfOperation() bool {
	if m != nil {
		return m.HoursOfOperation
	}
	return false
}

func (m *ProjectionFilter) GetContactDetails() bool {
	if m != nil {
		return m.ContactDetails
	}
	return false
}

func (m *ProjectionFilter) GetSnapshotReports() bool {
	if m != nil {
		return m.SnapshotReports
	}
	return false
}

func (m *ProjectionFilter) GetLegacyProductDetails() bool {
	if m != nil {
		return m.LegacyProductDetails
	}
	return false
}

func (m *ProjectionFilter) GetRichData() bool {
	if m != nil {
		return m.RichData
	}
	return false
}

func (m *ProjectionFilter) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *ProjectionFilter) GetNapData() bool {
	if m != nil {
		return m.NapData
	}
	return false
}

// ReadFilter can be used for filtering at the repository layer
type ReadFilter struct {
	// Whether or not to include deleted accounts on the read
	IncludeDeleted bool `protobuf:"varint,1,opt,name=include_deleted,json=includeDeleted" json:"include_deleted,omitempty"`
}

func (m *ReadFilter) Reset()                    { *m = ReadFilter{} }
func (m *ReadFilter) String() string            { return proto.CompactTextString(m) }
func (*ReadFilter) ProtoMessage()               {}
func (*ReadFilter) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{21} }

func (m *ReadFilter) GetIncludeDeleted() bool {
	if m != nil {
		return m.IncludeDeleted
	}
	return false
}

type GetMultiRequest struct {
	AccountGroupIds  []string          `protobuf:"bytes,1,rep,name=account_group_ids,json=accountGroupIds" json:"account_group_ids,omitempty"`
	ProjectionFilter *ProjectionFilter `protobuf:"bytes,2,opt,name=projection_filter,json=projectionFilter" json:"projection_filter,omitempty"`
	ReadFilter       *ReadFilter       `protobuf:"bytes,3,opt,name=read_filter,json=readFilter" json:"read_filter,omitempty"`
}

func (m *GetMultiRequest) Reset()                    { *m = GetMultiRequest{} }
func (m *GetMultiRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMultiRequest) ProtoMessage()               {}
func (*GetMultiRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{22} }

func (m *GetMultiRequest) GetAccountGroupIds() []string {
	if m != nil {
		return m.AccountGroupIds
	}
	return nil
}

func (m *GetMultiRequest) GetProjectionFilter() *ProjectionFilter {
	if m != nil {
		return m.ProjectionFilter
	}
	return nil
}

func (m *GetMultiRequest) GetReadFilter() *ReadFilter {
	if m != nil {
		return m.ReadFilter
	}
	return nil
}

type LookupRequest struct {
	ProjectionFilter *ProjectionFilter      `protobuf:"bytes,1,opt,name=projection_filter,json=projectionFilter" json:"projection_filter,omitempty"`
	Filters          *LookupRequest_Filters `protobuf:"bytes,2,opt,name=filters" json:"filters,omitempty"`
	Cursor           string                 `protobuf:"bytes,3,opt,name=cursor" json:"cursor,omitempty"`
	PageSize         int64                  `protobuf:"varint,4,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	SortOptions      *SortOptions           `protobuf:"bytes,5,opt,name=sort_options,json=sortOptions" json:"sort_options,omitempty"`
	// search_term is an arbitrary string to perform full text search across the account group's location data
	SearchTerm string `protobuf:"bytes,6,opt,name=search_term,json=searchTerm" json:"search_term,omitempty"`
}

func (m *LookupRequest) Reset()                    { *m = LookupRequest{} }
func (m *LookupRequest) String() string            { return proto.CompactTextString(m) }
func (*LookupRequest) ProtoMessage()               {}
func (*LookupRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23} }

func (m *LookupRequest) GetProjectionFilter() *ProjectionFilter {
	if m != nil {
		return m.ProjectionFilter
	}
	return nil
}

func (m *LookupRequest) GetFilters() *LookupRequest_Filters {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *LookupRequest) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *LookupRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *LookupRequest) GetSortOptions() *SortOptions {
	if m != nil {
		return m.SortOptions
	}
	return nil
}

func (m *LookupRequest) GetSearchTerm() string {
	if m != nil {
		return m.SearchTerm
	}
	return ""
}

type LookupRequest_AccountFilter struct {
	MarketplaceAppId string                      `protobuf:"bytes,1,opt,name=marketplace_app_id,json=marketplaceAppId" json:"marketplace_app_id,omitempty"`
	AccountStatus    LookupRequest_AccountStatus `protobuf:"varint,2,opt,name=account_status,json=accountStatus,enum=accountgroup.v1.LookupRequest_AccountStatus" json:"account_status,omitempty"`
}

func (m *LookupRequest_AccountFilter) Reset()                    { *m = LookupRequest_AccountFilter{} }
func (m *LookupRequest_AccountFilter) String() string            { return proto.CompactTextString(m) }
func (*LookupRequest_AccountFilter) ProtoMessage()               {}
func (*LookupRequest_AccountFilter) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23, 0} }

func (m *LookupRequest_AccountFilter) GetMarketplaceAppId() string {
	if m != nil {
		return m.MarketplaceAppId
	}
	return ""
}

func (m *LookupRequest_AccountFilter) GetAccountStatus() LookupRequest_AccountStatus {
	if m != nil {
		return m.AccountStatus
	}
	return LookupRequest_Enabled
}

type LookupRequest_ListingDistributionFilter struct {
	// Indicates if the result set should include accounts with active LD
	Active bool `protobuf:"varint,1,opt,name=active" json:"active,omitempty"`
	// Indicates if the result set should include accounts with inactive LD
	Inactive bool `protobuf:"varint,2,opt,name=inactive" json:"inactive,omitempty"`
	// Indicates the result set should include accounts with active LD in the next N days.
	ExpiresInDays int64 `protobuf:"varint,3,opt,name=expires_in_days,json=expiresInDays" json:"expires_in_days,omitempty"`
	// Indicates the result set should include accounts with LD that has expired in the last N days.
	ExpiredInDays int64 `protobuf:"varint,4,opt,name=expired_in_days,json=expiredInDays" json:"expired_in_days,omitempty"`
}

func (m *LookupRequest_ListingDistributionFilter) Reset() {
	*m = LookupRequest_ListingDistributionFilter{}
}
func (m *LookupRequest_ListingDistributionFilter) String() string { return proto.CompactTextString(m) }
func (*LookupRequest_ListingDistributionFilter) ProtoMessage()    {}
func (*LookupRequest_ListingDistributionFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{23, 1}
}

func (m *LookupRequest_ListingDistributionFilter) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *LookupRequest_ListingDistributionFilter) GetInactive() bool {
	if m != nil {
		return m.Inactive
	}
	return false
}

func (m *LookupRequest_ListingDistributionFilter) GetExpiresInDays() int64 {
	if m != nil {
		return m.ExpiresInDays
	}
	return 0
}

func (m *LookupRequest_ListingDistributionFilter) GetExpiredInDays() int64 {
	if m != nil {
		return m.ExpiredInDays
	}
	return 0
}

type LookupRequest_ListingSyncProFilter struct {
	Active            bool `protobuf:"varint,1,opt,name=active" json:"active,omitempty"`
	AutoRenew         bool `protobuf:"varint,2,opt,name=auto_renew,json=autoRenew" json:"auto_renew,omitempty"`
	AutoRenewDisabled bool `protobuf:"varint,3,opt,name=auto_renew_disabled,json=autoRenewDisabled" json:"auto_renew_disabled,omitempty"`
	Inactive          bool `protobuf:"varint,4,opt,name=inactive" json:"inactive,omitempty"`
	Expired           bool `protobuf:"varint,5,opt,name=expired" json:"expired,omitempty"`
}

func (m *LookupRequest_ListingSyncProFilter) Reset()         { *m = LookupRequest_ListingSyncProFilter{} }
func (m *LookupRequest_ListingSyncProFilter) String() string { return proto.CompactTextString(m) }
func (*LookupRequest_ListingSyncProFilter) ProtoMessage()    {}
func (*LookupRequest_ListingSyncProFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{23, 2}
}

func (m *LookupRequest_ListingSyncProFilter) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *LookupRequest_ListingSyncProFilter) GetAutoRenew() bool {
	if m != nil {
		return m.AutoRenew
	}
	return false
}

func (m *LookupRequest_ListingSyncProFilter) GetAutoRenewDisabled() bool {
	if m != nil {
		return m.AutoRenewDisabled
	}
	return false
}

func (m *LookupRequest_ListingSyncProFilter) GetInactive() bool {
	if m != nil {
		return m.Inactive
	}
	return false
}

func (m *LookupRequest_ListingSyncProFilter) GetExpired() bool {
	if m != nil {
		return m.Expired
	}
	return false
}

type LookupRequest_CreatedDateFilter struct {
	BeginRange *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=begin_range,json=beginRange" json:"begin_range,omitempty"`
	EndRange   *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=end_range,json=endRange" json:"end_range,omitempty"`
}

func (m *LookupRequest_CreatedDateFilter) Reset()         { *m = LookupRequest_CreatedDateFilter{} }
func (m *LookupRequest_CreatedDateFilter) String() string { return proto.CompactTextString(m) }
func (*LookupRequest_CreatedDateFilter) ProtoMessage()    {}
func (*LookupRequest_CreatedDateFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{23, 3}
}

func (m *LookupRequest_CreatedDateFilter) GetBeginRange() *google_protobuf1.Timestamp {
	if m != nil {
		return m.BeginRange
	}
	return nil
}

func (m *LookupRequest_CreatedDateFilter) GetEndRange() *google_protobuf1.Timestamp {
	if m != nil {
		return m.EndRange
	}
	return nil
}

type LookupRequest_TrialFilter struct {
	IsSuspended bool `protobuf:"varint,1,opt,name=is_suspended,json=isSuspended" json:"is_suspended,omitempty"`
}

func (m *LookupRequest_TrialFilter) Reset()                    { *m = LookupRequest_TrialFilter{} }
func (m *LookupRequest_TrialFilter) String() string            { return proto.CompactTextString(m) }
func (*LookupRequest_TrialFilter) ProtoMessage()               {}
func (*LookupRequest_TrialFilter) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23, 4} }

func (m *LookupRequest_TrialFilter) GetIsSuspended() bool {
	if m != nil {
		return m.IsSuspended
	}
	return false
}

type LookupRequest_PresenceFilter struct {
	Facebook   LookupRequest_Presence `protobuf:"varint,1,opt,name=facebook,enum=accountgroup.v1.LookupRequest_Presence" json:"facebook,omitempty"`
	Foursquare LookupRequest_Presence `protobuf:"varint,2,opt,name=foursquare,enum=accountgroup.v1.LookupRequest_Presence" json:"foursquare,omitempty"`
	Googleplus LookupRequest_Presence `protobuf:"varint,3,opt,name=googleplus,enum=accountgroup.v1.LookupRequest_Presence" json:"googleplus,omitempty"`
	Linkedin   LookupRequest_Presence `protobuf:"varint,4,opt,name=linkedin,enum=accountgroup.v1.LookupRequest_Presence" json:"linkedin,omitempty"`
	Twitter    LookupRequest_Presence `protobuf:"varint,5,opt,name=twitter,enum=accountgroup.v1.LookupRequest_Presence" json:"twitter,omitempty"`
	Pinterest  LookupRequest_Presence `protobuf:"varint,6,opt,name=pinterest,enum=accountgroup.v1.LookupRequest_Presence" json:"pinterest,omitempty"`
	Instagram  LookupRequest_Presence `protobuf:"varint,7,opt,name=instagram,enum=accountgroup.v1.LookupRequest_Presence" json:"instagram,omitempty"`
	Youtube    LookupRequest_Presence `protobuf:"varint,8,opt,name=youtube,enum=accountgroup.v1.LookupRequest_Presence" json:"youtube,omitempty"`
	Website    LookupRequest_Presence `protobuf:"varint,9,opt,name=website,enum=accountgroup.v1.LookupRequest_Presence" json:"website,omitempty"`
}

func (m *LookupRequest_PresenceFilter) Reset()         { *m = LookupRequest_PresenceFilter{} }
func (m *LookupRequest_PresenceFilter) String() string { return proto.CompactTextString(m) }
func (*LookupRequest_PresenceFilter) ProtoMessage()    {}
func (*LookupRequest_PresenceFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{23, 5}
}

func (m *LookupRequest_PresenceFilter) GetFacebook() LookupRequest_Presence {
	if m != nil {
		return m.Facebook
	}
	return LookupRequest_Any
}

func (m *LookupRequest_PresenceFilter) GetFoursquare() LookupRequest_Presence {
	if m != nil {
		return m.Foursquare
	}
	return LookupRequest_Any
}

func (m *LookupRequest_PresenceFilter) GetGoogleplus() LookupRequest_Presence {
	if m != nil {
		return m.Googleplus
	}
	return LookupRequest_Any
}

func (m *LookupRequest_PresenceFilter) GetLinkedin() LookupRequest_Presence {
	if m != nil {
		return m.Linkedin
	}
	return LookupRequest_Any
}

func (m *LookupRequest_PresenceFilter) GetTwitter() LookupRequest_Presence {
	if m != nil {
		return m.Twitter
	}
	return LookupRequest_Any
}

func (m *LookupRequest_PresenceFilter) GetPinterest() LookupRequest_Presence {
	if m != nil {
		return m.Pinterest
	}
	return LookupRequest_Any
}

func (m *LookupRequest_PresenceFilter) GetInstagram() LookupRequest_Presence {
	if m != nil {
		return m.Instagram
	}
	return LookupRequest_Any
}

func (m *LookupRequest_PresenceFilter) GetYoutube() LookupRequest_Presence {
	if m != nil {
		return m.Youtube
	}
	return LookupRequest_Any
}

func (m *LookupRequest_PresenceFilter) GetWebsite() LookupRequest_Presence {
	if m != nil {
		return m.Website
	}
	return LookupRequest_Any
}

type LookupRequest_LocationFilter struct {
	Country string `protobuf:"bytes,1,opt,name=country" json:"country,omitempty"`
	State   string `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
}

func (m *LookupRequest_LocationFilter) Reset()         { *m = LookupRequest_LocationFilter{} }
func (m *LookupRequest_LocationFilter) String() string { return proto.CompactTextString(m) }
func (*LookupRequest_LocationFilter) ProtoMessage()    {}
func (*LookupRequest_LocationFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{23, 6}
}

func (m *LookupRequest_LocationFilter) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *LookupRequest_LocationFilter) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type LookupRequest_Filters struct {
	PartnerId                 string                                   `protobuf:"bytes,1,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	MarketIds                 []string                                 `protobuf:"bytes,2,rep,name=market_ids,json=marketIds" json:"market_ids,omitempty"`
	SalesPersonId             string                                   `protobuf:"bytes,3,opt,name=sales_person_id,json=salesPersonId" json:"sales_person_id,omitempty"`
	CustomerId                string                                   `protobuf:"bytes,4,opt,name=customer_id,json=customerId" json:"customer_id,omitempty"`
	Tags                      []string                                 `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	AccountFilters            []*LookupRequest_AccountFilter           `protobuf:"bytes,6,rep,name=account_filters,json=accountFilters" json:"account_filters,omitempty"`
	ListingDistributionFilter *LookupRequest_ListingDistributionFilter `protobuf:"bytes,7,opt,name=listing_distribution_filter,json=listingDistributionFilter" json:"listing_distribution_filter,omitempty"`
	CreatedDateFilter         *LookupRequest_CreatedDateFilter         `protobuf:"bytes,8,opt,name=created_date_filter,json=createdDateFilter" json:"created_date_filter,omitempty"`
	ListingSyncProFilter      *LookupRequest_ListingSyncProFilter      `protobuf:"bytes,9,opt,name=listing_sync_pro_filter,json=listingSyncProFilter" json:"listing_sync_pro_filter,omitempty"`
	TrialFilter               *LookupRequest_TrialFilter               `protobuf:"bytes,10,opt,name=trial_filter,json=trialFilter" json:"trial_filter,omitempty"`
	TaxonomyIds               []string                                 `protobuf:"bytes,11,rep,name=taxonomy_ids,json=taxonomyIds" json:"taxonomy_ids,omitempty"`
	PresenceFilter            *LookupRequest_PresenceFilter            `protobuf:"bytes,12,opt,name=presence_filter,json=presenceFilter" json:"presence_filter,omitempty"`
	LocationFilter            *LookupRequest_LocationFilter            `protobuf:"bytes,13,opt,name=location_filter,json=locationFilter" json:"location_filter,omitempty"`
}

func (m *LookupRequest_Filters) Reset()                    { *m = LookupRequest_Filters{} }
func (m *LookupRequest_Filters) String() string            { return proto.CompactTextString(m) }
func (*LookupRequest_Filters) ProtoMessage()               {}
func (*LookupRequest_Filters) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23, 7} }

func (m *LookupRequest_Filters) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *LookupRequest_Filters) GetMarketIds() []string {
	if m != nil {
		return m.MarketIds
	}
	return nil
}

func (m *LookupRequest_Filters) GetSalesPersonId() string {
	if m != nil {
		return m.SalesPersonId
	}
	return ""
}

func (m *LookupRequest_Filters) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *LookupRequest_Filters) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *LookupRequest_Filters) GetAccountFilters() []*LookupRequest_AccountFilter {
	if m != nil {
		return m.AccountFilters
	}
	return nil
}

func (m *LookupRequest_Filters) GetListingDistributionFilter() *LookupRequest_ListingDistributionFilter {
	if m != nil {
		return m.ListingDistributionFilter
	}
	return nil
}

func (m *LookupRequest_Filters) GetCreatedDateFilter() *LookupRequest_CreatedDateFilter {
	if m != nil {
		return m.CreatedDateFilter
	}
	return nil
}

func (m *LookupRequest_Filters) GetListingSyncProFilter() *LookupRequest_ListingSyncProFilter {
	if m != nil {
		return m.ListingSyncProFilter
	}
	return nil
}

func (m *LookupRequest_Filters) GetTrialFilter() *LookupRequest_TrialFilter {
	if m != nil {
		return m.TrialFilter
	}
	return nil
}

func (m *LookupRequest_Filters) GetTaxonomyIds() []string {
	if m != nil {
		return m.TaxonomyIds
	}
	return nil
}

func (m *LookupRequest_Filters) GetPresenceFilter() *LookupRequest_PresenceFilter {
	if m != nil {
		return m.PresenceFilter
	}
	return nil
}

func (m *LookupRequest_Filters) GetLocationFilter() *LookupRequest_LocationFilter {
	if m != nil {
		return m.LocationFilter
	}
	return nil
}

// Options for controlling the order of query results
type SortOptions struct {
	// A direction to sort results in
	Direction SortDirection `protobuf:"varint,1,opt,name=direction,enum=accountgroup.v1.SortDirection" json:"direction,omitempty"`
	// Field to sort on
	Field SortField `protobuf:"varint,2,opt,name=field,enum=accountgroup.v1.SortField" json:"field,omitempty"`
}

func (m *SortOptions) Reset()                    { *m = SortOptions{} }
func (m *SortOptions) String() string            { return proto.CompactTextString(m) }
func (*SortOptions) ProtoMessage()               {}
func (*SortOptions) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{24} }

func (m *SortOptions) GetDirection() SortDirection {
	if m != nil {
		return m.Direction
	}
	return SortDirection_Ascending
}

func (m *SortOptions) GetField() SortField {
	if m != nil {
		return m.Field
	}
	return SortField_Modified
}

type PagedResponse struct {
	AccountGroups []*AccountGroup `protobuf:"bytes,1,rep,name=account_groups,json=accountGroups" json:"account_groups,omitempty"`
	// A cursor that can be provided to retrieve the next page of results
	NextCursor string `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor" json:"next_cursor,omitempty"`
	// Whether or not more results exist
	HasMore bool `protobuf:"varint,3,opt,name=has_more,json=hasMore" json:"has_more,omitempty"`
	// The total number of results for this query across all pages
	TotalResults int64 `protobuf:"varint,4,opt,name=total_results,json=totalResults" json:"total_results,omitempty"`
}

func (m *PagedResponse) Reset()                    { *m = PagedResponse{} }
func (m *PagedResponse) String() string            { return proto.CompactTextString(m) }
func (*PagedResponse) ProtoMessage()               {}
func (*PagedResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{25} }

func (m *PagedResponse) GetAccountGroups() []*AccountGroup {
	if m != nil {
		return m.AccountGroups
	}
	return nil
}

func (m *PagedResponse) GetNextCursor() string {
	if m != nil {
		return m.NextCursor
	}
	return ""
}

func (m *PagedResponse) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *PagedResponse) GetTotalResults() int64 {
	if m != nil {
		return m.TotalResults
	}
	return 0
}

type GetMultiResponse struct {
	AccountGroups []*GetMultiResponse_AccountGroupContainer `protobuf:"bytes,1,rep,name=account_groups,json=accountGroups" json:"account_groups,omitempty"`
}

func (m *GetMultiResponse) Reset()                    { *m = GetMultiResponse{} }
func (m *GetMultiResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMultiResponse) ProtoMessage()               {}
func (*GetMultiResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{26} }

func (m *GetMultiResponse) GetAccountGroups() []*GetMultiResponse_AccountGroupContainer {
	if m != nil {
		return m.AccountGroups
	}
	return nil
}

type GetMultiResponse_AccountGroupContainer struct {
	AccountGroup *AccountGroup `protobuf:"bytes,1,opt,name=account_group,json=accountGroup" json:"account_group,omitempty"`
}

func (m *GetMultiResponse_AccountGroupContainer) Reset() {
	*m = GetMultiResponse_AccountGroupContainer{}
}
func (m *GetMultiResponse_AccountGroupContainer) String() string { return proto.CompactTextString(m) }
func (*GetMultiResponse_AccountGroupContainer) ProtoMessage()    {}
func (*GetMultiResponse_AccountGroupContainer) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{26, 0}
}

func (m *GetMultiResponse_AccountGroupContainer) GetAccountGroup() *AccountGroup {
	if m != nil {
		return m.AccountGroup
	}
	return nil
}

type AccountGroupLocation struct {
	CompanyName        string   `protobuf:"bytes,4,opt,name=company_name,json=companyName" json:"company_name,omitempty"`
	Address            string   `protobuf:"bytes,5,opt,name=address" json:"address,omitempty"`
	City               string   `protobuf:"bytes,6,opt,name=city" json:"city,omitempty"`
	State              string   `protobuf:"bytes,7,opt,name=state" json:"state,omitempty"`
	Zip                string   `protobuf:"bytes,8,opt,name=zip" json:"zip,omitempty"`
	Country            string   `protobuf:"bytes,9,opt,name=country" json:"country,omitempty"`
	Website            string   `protobuf:"bytes,10,opt,name=website" json:"website,omitempty"`
	WorkNumber         []string `protobuf:"bytes,11,rep,name=work_number,json=workNumber" json:"work_number,omitempty"`
	CallTrackingNumber []string `protobuf:"bytes,12,rep,name=call_tracking_number,json=callTrackingNumber" json:"call_tracking_number,omitempty"`
	Location           *Geo     `protobuf:"bytes,13,opt,name=location" json:"location,omitempty"`
	Timezone           string   `protobuf:"bytes,14,opt,name=timezone" json:"timezone,omitempty"`
}

func (m *AccountGroupLocation) Reset()                    { *m = AccountGroupLocation{} }
func (m *AccountGroupLocation) String() string            { return proto.CompactTextString(m) }
func (*AccountGroupLocation) ProtoMessage()               {}
func (*AccountGroupLocation) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{27} }

func (m *AccountGroupLocation) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *AccountGroupLocation) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AccountGroupLocation) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *AccountGroupLocation) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *AccountGroupLocation) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *AccountGroupLocation) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *AccountGroupLocation) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *AccountGroupLocation) GetWorkNumber() []string {
	if m != nil {
		return m.WorkNumber
	}
	return nil
}

func (m *AccountGroupLocation) GetCallTrackingNumber() []string {
	if m != nil {
		return m.CallTrackingNumber
	}
	return nil
}

func (m *AccountGroupLocation) GetLocation() *Geo {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *AccountGroupLocation) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

type CreateAccountGroupRequest struct {
	AccountGroupNap *AccountGroupLocation `protobuf:"bytes,1,opt,name=account_group_nap,json=accountGroupNap" json:"account_group_nap,omitempty"`
	// ID of the partner's social profile group which the account will be associated with
	SocialProfileGroupId string `protobuf:"bytes,2,opt,name=social_profile_group_id,json=socialProfileGroupId" json:"social_profile_group_id,omitempty"`
	// The set of update operations to be done to the extended account group data after the create.
	UpdateOperations []*UpdateOperation `protobuf:"bytes,3,rep,name=update_operations,json=updateOperations" json:"update_operations,omitempty"`
}

func (m *CreateAccountGroupRequest) Reset()                    { *m = CreateAccountGroupRequest{} }
func (m *CreateAccountGroupRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAccountGroupRequest) ProtoMessage()               {}
func (*CreateAccountGroupRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{28} }

func (m *CreateAccountGroupRequest) GetAccountGroupNap() *AccountGroupLocation {
	if m != nil {
		return m.AccountGroupNap
	}
	return nil
}

func (m *CreateAccountGroupRequest) GetSocialProfileGroupId() string {
	if m != nil {
		return m.SocialProfileGroupId
	}
	return ""
}

func (m *CreateAccountGroupRequest) GetUpdateOperations() []*UpdateOperation {
	if m != nil {
		return m.UpdateOperations
	}
	return nil
}

type CreateAccountGroupResponse struct {
	AccountGroupId string `protobuf:"bytes,1,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
}

func (m *CreateAccountGroupResponse) Reset()                    { *m = CreateAccountGroupResponse{} }
func (m *CreateAccountGroupResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAccountGroupResponse) ProtoMessage()               {}
func (*CreateAccountGroupResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{29} }

func (m *CreateAccountGroupResponse) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

type DeleteAccountGroupRequest struct {
	AccountGroupId string `protobuf:"bytes,1,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
}

func (m *DeleteAccountGroupRequest) Reset()                    { *m = DeleteAccountGroupRequest{} }
func (m *DeleteAccountGroupRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAccountGroupRequest) ProtoMessage()               {}
func (*DeleteAccountGroupRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{30} }

func (m *DeleteAccountGroupRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

// BulkUpdateRequest allows updating all of the pieces of the account group and runs them in order.
type BulkUpdateRequest struct {
	AccountGroupId   string             `protobuf:"bytes,1,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	UpdateOperations []*UpdateOperation `protobuf:"bytes,2,rep,name=update_operations,json=updateOperations" json:"update_operations,omitempty"`
}

func (m *BulkUpdateRequest) Reset()                    { *m = BulkUpdateRequest{} }
func (m *BulkUpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*BulkUpdateRequest) ProtoMessage()               {}
func (*BulkUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{31} }

func (m *BulkUpdateRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *BulkUpdateRequest) GetUpdateOperations() []*UpdateOperation {
	if m != nil {
		return m.UpdateOperations
	}
	return nil
}

// Update operation allows updating a specific piece of the account gruop
type UpdateOperation struct {
	// Types that are valid to be assigned to Operation:
	//	*UpdateOperation_AccountGroupNap
	//	*UpdateOperation_ListingSyncProto
	//	*UpdateOperation_AccountGroupExternalIdentifiers
	//	*UpdateOperation_SocialUrls
	//	*UpdateOperation_HoursOfOperation
	//	*UpdateOperation_ContactDetails
	//	*UpdateOperation_Snapshots
	//	*UpdateOperation_LegacyProductDetails
	//	*UpdateOperation_RichData
	//	*UpdateOperation_Status
	//	*UpdateOperation_ActionListAppend
	Operation isUpdateOperation_Operation `protobuf_oneof:"operation"`
	FieldMask *FieldMask                  `protobuf:"bytes,20,opt,name=field_mask,json=fieldMask" json:"field_mask,omitempty"`
}

func (m *UpdateOperation) Reset()                    { *m = UpdateOperation{} }
func (m *UpdateOperation) String() string            { return proto.CompactTextString(m) }
func (*UpdateOperation) ProtoMessage()               {}
func (*UpdateOperation) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{32} }

type isUpdateOperation_Operation interface {
	isUpdateOperation_Operation()
}

type UpdateOperation_AccountGroupNap struct {
	AccountGroupNap *AccountGroupLocation `protobuf:"bytes,1,opt,name=account_group_nap,json=accountGroupNap,oneof"`
}
type UpdateOperation_ListingSyncProto struct {
	ListingSyncProto *ListingSyncPro `protobuf:"bytes,3,opt,name=listing_sync_proto,json=listingSyncProto,oneof"`
}
type UpdateOperation_AccountGroupExternalIdentifiers struct {
	AccountGroupExternalIdentifiers *AccountGroupExternalIdentifiers `protobuf:"bytes,4,opt,name=account_group_external_identifiers,json=accountGroupExternalIdentifiers,oneof"`
}
type UpdateOperation_SocialUrls struct {
	SocialUrls *SocialURLs `protobuf:"bytes,5,opt,name=social_urls,json=socialUrls,oneof"`
}
type UpdateOperation_HoursOfOperation struct {
	HoursOfOperation *HoursOfOperation `protobuf:"bytes,6,opt,name=hours_of_operation,json=hoursOfOperation,oneof"`
}
type UpdateOperation_ContactDetails struct {
	ContactDetails *ContactDetails `protobuf:"bytes,7,opt,name=contact_details,json=contactDetails,oneof"`
}
type UpdateOperation_Snapshots struct {
	Snapshots *Snapshots `protobuf:"bytes,8,opt,name=snapshots,oneof"`
}
type UpdateOperation_LegacyProductDetails struct {
	LegacyProductDetails *LegacyProductDetails `protobuf:"bytes,9,opt,name=legacy_product_details,json=legacyProductDetails,oneof"`
}
type UpdateOperation_RichData struct {
	RichData *RichData `protobuf:"bytes,10,opt,name=rich_data,json=richData,oneof"`
}
type UpdateOperation_Status struct {
	Status *Status `protobuf:"bytes,11,opt,name=status,oneof"`
}
type UpdateOperation_ActionListAppend struct {
	ActionListAppend *ActionListAppend `protobuf:"bytes,12,opt,name=action_list_append,json=actionListAppend,oneof"`
}

func (*UpdateOperation_AccountGroupNap) isUpdateOperation_Operation()                 {}
func (*UpdateOperation_ListingSyncProto) isUpdateOperation_Operation()                {}
func (*UpdateOperation_AccountGroupExternalIdentifiers) isUpdateOperation_Operation() {}
func (*UpdateOperation_SocialUrls) isUpdateOperation_Operation()                      {}
func (*UpdateOperation_HoursOfOperation) isUpdateOperation_Operation()                {}
func (*UpdateOperation_ContactDetails) isUpdateOperation_Operation()                  {}
func (*UpdateOperation_Snapshots) isUpdateOperation_Operation()                       {}
func (*UpdateOperation_LegacyProductDetails) isUpdateOperation_Operation()            {}
func (*UpdateOperation_RichData) isUpdateOperation_Operation()                        {}
func (*UpdateOperation_Status) isUpdateOperation_Operation()                          {}
func (*UpdateOperation_ActionListAppend) isUpdateOperation_Operation()                {}

func (m *UpdateOperation) GetOperation() isUpdateOperation_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *UpdateOperation) GetAccountGroupNap() *AccountGroupLocation {
	if x, ok := m.GetOperation().(*UpdateOperation_AccountGroupNap); ok {
		return x.AccountGroupNap
	}
	return nil
}

func (m *UpdateOperation) GetListingSyncProto() *ListingSyncPro {
	if x, ok := m.GetOperation().(*UpdateOperation_ListingSyncProto); ok {
		return x.ListingSyncProto
	}
	return nil
}

func (m *UpdateOperation) GetAccountGroupExternalIdentifiers() *AccountGroupExternalIdentifiers {
	if x, ok := m.GetOperation().(*UpdateOperation_AccountGroupExternalIdentifiers); ok {
		return x.AccountGroupExternalIdentifiers
	}
	return nil
}

func (m *UpdateOperation) GetSocialUrls() *SocialURLs {
	if x, ok := m.GetOperation().(*UpdateOperation_SocialUrls); ok {
		return x.SocialUrls
	}
	return nil
}

func (m *UpdateOperation) GetHoursOfOperation() *HoursOfOperation {
	if x, ok := m.GetOperation().(*UpdateOperation_HoursOfOperation); ok {
		return x.HoursOfOperation
	}
	return nil
}

func (m *UpdateOperation) GetContactDetails() *ContactDetails {
	if x, ok := m.GetOperation().(*UpdateOperation_ContactDetails); ok {
		return x.ContactDetails
	}
	return nil
}

func (m *UpdateOperation) GetSnapshots() *Snapshots {
	if x, ok := m.GetOperation().(*UpdateOperation_Snapshots); ok {
		return x.Snapshots
	}
	return nil
}

func (m *UpdateOperation) GetLegacyProductDetails() *LegacyProductDetails {
	if x, ok := m.GetOperation().(*UpdateOperation_LegacyProductDetails); ok {
		return x.LegacyProductDetails
	}
	return nil
}

func (m *UpdateOperation) GetRichData() *RichData {
	if x, ok := m.GetOperation().(*UpdateOperation_RichData); ok {
		return x.RichData
	}
	return nil
}

func (m *UpdateOperation) GetStatus() *Status {
	if x, ok := m.GetOperation().(*UpdateOperation_Status); ok {
		return x.Status
	}
	return nil
}

func (m *UpdateOperation) GetActionListAppend() *ActionListAppend {
	if x, ok := m.GetOperation().(*UpdateOperation_ActionListAppend); ok {
		return x.ActionListAppend
	}
	return nil
}

func (m *UpdateOperation) GetFieldMask() *FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UpdateOperation) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UpdateOperation_OneofMarshaler, _UpdateOperation_OneofUnmarshaler, _UpdateOperation_OneofSizer, []interface{}{
		(*UpdateOperation_AccountGroupNap)(nil),
		(*UpdateOperation_ListingSyncProto)(nil),
		(*UpdateOperation_AccountGroupExternalIdentifiers)(nil),
		(*UpdateOperation_SocialUrls)(nil),
		(*UpdateOperation_HoursOfOperation)(nil),
		(*UpdateOperation_ContactDetails)(nil),
		(*UpdateOperation_Snapshots)(nil),
		(*UpdateOperation_LegacyProductDetails)(nil),
		(*UpdateOperation_RichData)(nil),
		(*UpdateOperation_Status)(nil),
		(*UpdateOperation_ActionListAppend)(nil),
	}
}

func _UpdateOperation_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UpdateOperation)
	// operation
	switch x := m.Operation.(type) {
	case *UpdateOperation_AccountGroupNap:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AccountGroupNap); err != nil {
			return err
		}
	case *UpdateOperation_ListingSyncProto:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ListingSyncProto); err != nil {
			return err
		}
	case *UpdateOperation_AccountGroupExternalIdentifiers:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AccountGroupExternalIdentifiers); err != nil {
			return err
		}
	case *UpdateOperation_SocialUrls:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SocialUrls); err != nil {
			return err
		}
	case *UpdateOperation_HoursOfOperation:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HoursOfOperation); err != nil {
			return err
		}
	case *UpdateOperation_ContactDetails:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContactDetails); err != nil {
			return err
		}
	case *UpdateOperation_Snapshots:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Snapshots); err != nil {
			return err
		}
	case *UpdateOperation_LegacyProductDetails:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LegacyProductDetails); err != nil {
			return err
		}
	case *UpdateOperation_RichData:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RichData); err != nil {
			return err
		}
	case *UpdateOperation_Status:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Status); err != nil {
			return err
		}
	case *UpdateOperation_ActionListAppend:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActionListAppend); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UpdateOperation.Operation has unexpected type %T", x)
	}
	return nil
}

func _UpdateOperation_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UpdateOperation)
	switch tag {
	case 1: // operation.account_group_nap
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AccountGroupLocation)
		err := b.DecodeMessage(msg)
		m.Operation = &UpdateOperation_AccountGroupNap{msg}
		return true, err
	case 3: // operation.listing_sync_proto
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ListingSyncPro)
		err := b.DecodeMessage(msg)
		m.Operation = &UpdateOperation_ListingSyncProto{msg}
		return true, err
	case 4: // operation.account_group_external_identifiers
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AccountGroupExternalIdentifiers)
		err := b.DecodeMessage(msg)
		m.Operation = &UpdateOperation_AccountGroupExternalIdentifiers{msg}
		return true, err
	case 5: // operation.social_urls
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SocialURLs)
		err := b.DecodeMessage(msg)
		m.Operation = &UpdateOperation_SocialUrls{msg}
		return true, err
	case 6: // operation.hours_of_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HoursOfOperation)
		err := b.DecodeMessage(msg)
		m.Operation = &UpdateOperation_HoursOfOperation{msg}
		return true, err
	case 7: // operation.contact_details
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContactDetails)
		err := b.DecodeMessage(msg)
		m.Operation = &UpdateOperation_ContactDetails{msg}
		return true, err
	case 8: // operation.snapshots
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Snapshots)
		err := b.DecodeMessage(msg)
		m.Operation = &UpdateOperation_Snapshots{msg}
		return true, err
	case 9: // operation.legacy_product_details
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LegacyProductDetails)
		err := b.DecodeMessage(msg)
		m.Operation = &UpdateOperation_LegacyProductDetails{msg}
		return true, err
	case 10: // operation.rich_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RichData)
		err := b.DecodeMessage(msg)
		m.Operation = &UpdateOperation_RichData{msg}
		return true, err
	case 11: // operation.status
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Status)
		err := b.DecodeMessage(msg)
		m.Operation = &UpdateOperation_Status{msg}
		return true, err
	case 12: // operation.action_list_append
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ActionListAppend)
		err := b.DecodeMessage(msg)
		m.Operation = &UpdateOperation_ActionListAppend{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UpdateOperation_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UpdateOperation)
	// operation
	switch x := m.Operation.(type) {
	case *UpdateOperation_AccountGroupNap:
		s := proto.Size(x.AccountGroupNap)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateOperation_ListingSyncProto:
		s := proto.Size(x.ListingSyncProto)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateOperation_AccountGroupExternalIdentifiers:
		s := proto.Size(x.AccountGroupExternalIdentifiers)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateOperation_SocialUrls:
		s := proto.Size(x.SocialUrls)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateOperation_HoursOfOperation:
		s := proto.Size(x.HoursOfOperation)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateOperation_ContactDetails:
		s := proto.Size(x.ContactDetails)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateOperation_Snapshots:
		s := proto.Size(x.Snapshots)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateOperation_LegacyProductDetails:
		s := proto.Size(x.LegacyProductDetails)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateOperation_RichData:
		s := proto.Size(x.RichData)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateOperation_Status:
		s := proto.Size(x.Status)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateOperation_ActionListAppend:
		s := proto.Size(x.ActionListAppend)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Geo)(nil), "accountgroup.v1.Geo")
	proto.RegisterType((*Accounts)(nil), "accountgroup.v1.Accounts")
	proto.RegisterType((*ListingDistributionDetails)(nil), "accountgroup.v1.ListingDistributionDetails")
	proto.RegisterType((*ListingSyncPro)(nil), "accountgroup.v1.ListingSyncPro")
	proto.RegisterType((*AccountGroupExternalIdentifiers)(nil), "accountgroup.v1.AccountGroupExternalIdentifiers")
	proto.RegisterType((*SocialURLs)(nil), "accountgroup.v1.SocialURLs")
	proto.RegisterType((*HoursOfOperation)(nil), "accountgroup.v1.HoursOfOperation")
	proto.RegisterType((*HoursOfOperation_Span)(nil), "accountgroup.v1.HoursOfOperation.Span")
	proto.RegisterType((*ContactDetails)(nil), "accountgroup.v1.ContactDetails")
	proto.RegisterType((*Snapshots)(nil), "accountgroup.v1.Snapshots")
	proto.RegisterType((*Snapshots_Snapshot)(nil), "accountgroup.v1.Snapshots.Snapshot")
	proto.RegisterType((*LegacyProductDetails)(nil), "accountgroup.v1.LegacyProductDetails")
	proto.RegisterType((*CustomField)(nil), "accountgroup.v1.CustomField")
	proto.RegisterType((*HealthCareProfessionalInformation)(nil), "accountgroup.v1.HealthCareProfessionalInformation")
	proto.RegisterType((*RichData)(nil), "accountgroup.v1.RichData")
	proto.RegisterType((*Status)(nil), "accountgroup.v1.Status")
	proto.RegisterType((*Association)(nil), "accountgroup.v1.Association")
	proto.RegisterType((*ActionListAppend)(nil), "accountgroup.v1.ActionListAppend")
	proto.RegisterType((*AccountGroup)(nil), "accountgroup.v1.AccountGroup")
	proto.RegisterType((*ListAccountsRequest)(nil), "accountgroup.v1.ListAccountsRequest")
	proto.RegisterType((*Account)(nil), "accountgroup.v1.Account")
	proto.RegisterType((*ListAccountsResponse)(nil), "accountgroup.v1.ListAccountsResponse")
	proto.RegisterType((*ProjectionFilter)(nil), "accountgroup.v1.ProjectionFilter")
	proto.RegisterType((*ReadFilter)(nil), "accountgroup.v1.ReadFilter")
	proto.RegisterType((*GetMultiRequest)(nil), "accountgroup.v1.GetMultiRequest")
	proto.RegisterType((*LookupRequest)(nil), "accountgroup.v1.LookupRequest")
	proto.RegisterType((*LookupRequest_AccountFilter)(nil), "accountgroup.v1.LookupRequest.AccountFilter")
	proto.RegisterType((*LookupRequest_ListingDistributionFilter)(nil), "accountgroup.v1.LookupRequest.ListingDistributionFilter")
	proto.RegisterType((*LookupRequest_ListingSyncProFilter)(nil), "accountgroup.v1.LookupRequest.ListingSyncProFilter")
	proto.RegisterType((*LookupRequest_CreatedDateFilter)(nil), "accountgroup.v1.LookupRequest.CreatedDateFilter")
	proto.RegisterType((*LookupRequest_TrialFilter)(nil), "accountgroup.v1.LookupRequest.TrialFilter")
	proto.RegisterType((*LookupRequest_PresenceFilter)(nil), "accountgroup.v1.LookupRequest.PresenceFilter")
	proto.RegisterType((*LookupRequest_LocationFilter)(nil), "accountgroup.v1.LookupRequest.LocationFilter")
	proto.RegisterType((*LookupRequest_Filters)(nil), "accountgroup.v1.LookupRequest.Filters")
	proto.RegisterType((*SortOptions)(nil), "accountgroup.v1.SortOptions")
	proto.RegisterType((*PagedResponse)(nil), "accountgroup.v1.PagedResponse")
	proto.RegisterType((*GetMultiResponse)(nil), "accountgroup.v1.GetMultiResponse")
	proto.RegisterType((*GetMultiResponse_AccountGroupContainer)(nil), "accountgroup.v1.GetMultiResponse.AccountGroupContainer")
	proto.RegisterType((*AccountGroupLocation)(nil), "accountgroup.v1.AccountGroupLocation")
	proto.RegisterType((*CreateAccountGroupRequest)(nil), "accountgroup.v1.CreateAccountGroupRequest")
	proto.RegisterType((*CreateAccountGroupResponse)(nil), "accountgroup.v1.CreateAccountGroupResponse")
	proto.RegisterType((*DeleteAccountGroupRequest)(nil), "accountgroup.v1.DeleteAccountGroupRequest")
	proto.RegisterType((*BulkUpdateRequest)(nil), "accountgroup.v1.BulkUpdateRequest")
	proto.RegisterType((*UpdateOperation)(nil), "accountgroup.v1.UpdateOperation")
	proto.RegisterEnum("accountgroup.v1.SortDirection", SortDirection_name, SortDirection_value)
	proto.RegisterEnum("accountgroup.v1.SortField", SortField_name, SortField_value)
	proto.RegisterEnum("accountgroup.v1.ListingSyncPro_ServiceProviders", ListingSyncPro_ServiceProviders_name, ListingSyncPro_ServiceProviders_value)
	proto.RegisterEnum("accountgroup.v1.ListingSyncPro_BillingFrequency", ListingSyncPro_BillingFrequency_name, ListingSyncPro_BillingFrequency_value)
	proto.RegisterEnum("accountgroup.v1.HealthCareProfessionalInformation_Gender", HealthCareProfessionalInformation_Gender_name, HealthCareProfessionalInformation_Gender_value)
	proto.RegisterEnum("accountgroup.v1.RichData_PaymentMethods", RichData_PaymentMethods_name, RichData_PaymentMethods_value)
	proto.RegisterEnum("accountgroup.v1.LookupRequest_AccountStatus", LookupRequest_AccountStatus_name, LookupRequest_AccountStatus_value)
	proto.RegisterEnum("accountgroup.v1.LookupRequest_Presence", LookupRequest_Presence_name, LookupRequest_Presence_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AccountGroupService service

type AccountGroupServiceClient interface {
	GetMulti(ctx context.Context, in *GetMultiRequest, opts ...grpc.CallOption) (*GetMultiResponse, error)
	Lookup(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*PagedResponse, error)
	Create(ctx context.Context, in *CreateAccountGroupRequest, opts ...grpc.CallOption) (*CreateAccountGroupResponse, error)
	Delete(ctx context.Context, in *DeleteAccountGroupRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	BulkUpdate(ctx context.Context, in *BulkUpdateRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
}

type accountGroupServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccountGroupServiceClient(cc *grpc.ClientConn) AccountGroupServiceClient {
	return &accountGroupServiceClient{cc}
}

func (c *accountGroupServiceClient) GetMulti(ctx context.Context, in *GetMultiRequest, opts ...grpc.CallOption) (*GetMultiResponse, error) {
	out := new(GetMultiResponse)
	err := grpc.Invoke(ctx, "/accountgroup.v1.AccountGroupService/GetMulti", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountGroupServiceClient) Lookup(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*PagedResponse, error) {
	out := new(PagedResponse)
	err := grpc.Invoke(ctx, "/accountgroup.v1.AccountGroupService/Lookup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountGroupServiceClient) Create(ctx context.Context, in *CreateAccountGroupRequest, opts ...grpc.CallOption) (*CreateAccountGroupResponse, error) {
	out := new(CreateAccountGroupResponse)
	err := grpc.Invoke(ctx, "/accountgroup.v1.AccountGroupService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountGroupServiceClient) Delete(ctx context.Context, in *DeleteAccountGroupRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/accountgroup.v1.AccountGroupService/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountGroupServiceClient) BulkUpdate(ctx context.Context, in *BulkUpdateRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/accountgroup.v1.AccountGroupService/BulkUpdate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AccountGroupService service

type AccountGroupServiceServer interface {
	GetMulti(context.Context, *GetMultiRequest) (*GetMultiResponse, error)
	Lookup(context.Context, *LookupRequest) (*PagedResponse, error)
	Create(context.Context, *CreateAccountGroupRequest) (*CreateAccountGroupResponse, error)
	Delete(context.Context, *DeleteAccountGroupRequest) (*google_protobuf2.Empty, error)
	BulkUpdate(context.Context, *BulkUpdateRequest) (*google_protobuf2.Empty, error)
}

func RegisterAccountGroupServiceServer(s *grpc.Server, srv AccountGroupServiceServer) {
	s.RegisterService(&_AccountGroupService_serviceDesc, srv)
}

func _AccountGroupService_GetMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMultiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountGroupServiceServer).GetMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accountgroup.v1.AccountGroupService/GetMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountGroupServiceServer).GetMulti(ctx, req.(*GetMultiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountGroupService_Lookup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountGroupServiceServer).Lookup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accountgroup.v1.AccountGroupService/Lookup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountGroupServiceServer).Lookup(ctx, req.(*LookupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountGroupService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountGroupServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accountgroup.v1.AccountGroupService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountGroupServiceServer).Create(ctx, req.(*CreateAccountGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountGroupService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAccountGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountGroupServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accountgroup.v1.AccountGroupService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountGroupServiceServer).Delete(ctx, req.(*DeleteAccountGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountGroupService_BulkUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountGroupServiceServer).BulkUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accountgroup.v1.AccountGroupService/BulkUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountGroupServiceServer).BulkUpdate(ctx, req.(*BulkUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountGroupService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "accountgroup.v1.AccountGroupService",
	HandlerType: (*AccountGroupServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMulti",
			Handler:    _AccountGroupService_GetMulti_Handler,
		},
		{
			MethodName: "Lookup",
			Handler:    _AccountGroupService_Lookup_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _AccountGroupService_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _AccountGroupService_Delete_Handler,
		},
		{
			MethodName: "BulkUpdate",
			Handler:    _AccountGroupService_BulkUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "account_group/v1/api.proto",
}

func init() { proto.RegisterFile("account_group/v1/api.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 4546 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x7b, 0xc9, 0x8f, 0x1b, 0x57,
	0x7a, 0x78, 0xb3, 0x17, 0x2e, 0x1f, 0x9b, 0xec, 0xea, 0xa7, 0x1e, 0x89, 0xa2, 0xac, 0xad, 0x3c,
	0xb6, 0xdb, 0xb2, 0xdd, 0xb2, 0xdb, 0xf6, 0x68, 0xbc, 0xfc, 0xc6, 0xa2, 0xba, 0x29, 0x35, 0x67,
	0x7a, 0x73, 0xb1, 0xa5, 0xdf, 0x18, 0xc6, 0x4c, 0xe5, 0xb1, 0xea, 0x91, 0x5d, 0xee, 0x62, 0x55,
	0xb9, 0xde, 0x63, 0x4b, 0x34, 0x30, 0x08, 0x90, 0x41, 0x02, 0x04, 0xc8, 0x29, 0x41, 0xce, 0x01,
	0x02, 0xe4, 0x98, 0x53, 0x90, 0x00, 0xc9, 0x25, 0xa7, 0x39, 0xe5, 0x90, 0x43, 0xfe, 0x81, 0x04,
	0x98, 0x04, 0xc8, 0x21, 0xc8, 0x21, 0x39, 0xe4, 0x18, 0xbc, 0xad, 0xaa, 0xb8, 0x89, 0x94, 0x73,
	0xe3, 0xfb, 0x96, 0xb7, 0x7e, 0xfb, 0x57, 0x84, 0x3a, 0x76, 0x9c, 0x70, 0x10, 0x30, 0xbb, 0x17,
	0x87, 0x83, 0xe8, 0xfe, 0xe5, 0x07, 0xf7, 0x71, 0xe4, 0xed, 0x44, 0x71, 0xc8, 0x42, 0xb4, 0xa1,
	0x70, 0x02, 0xb5, 0x73, 0xf9, 0x41, 0xfd, 0xb5, 0x5e, 0x18, 0xf6, 0x7c, 0xc2, 0x49, 0xee, 0xe3,
	0x20, 0x08, 0x19, 0x66, 0x5e, 0x18, 0x50, 0x49, 0x5e, 0xbf, 0xad, 0xb0, 0x62, 0xd4, 0x19, 0x74,
	0xef, 0x33, 0xaf, 0x4f, 0x28, 0xc3, 0xfd, 0x48, 0x11, 0xdc, 0x18, 0x27, 0x20, 0xfd, 0x88, 0x0d,
	0x15, 0xf2, 0xd6, 0x38, 0xf2, 0x79, 0x8c, 0xa3, 0x88, 0xc4, 0x7a, 0xf6, 0xbb, 0x13, 0x1b, 0xed,
	0x7a, 0xc4, 0x77, 0xed, 0x3e, 0xa6, 0x17, 0x92, 0xc4, 0xfc, 0x02, 0x56, 0x9e, 0x90, 0x10, 0xd5,
	0xa1, 0xe8, 0x63, 0xe6, 0xb1, 0x81, 0x4b, 0x6a, 0xb9, 0x3b, 0xb9, 0xed, 0x9c, 0x95, 0x8c, 0xd1,
	0x6b, 0x50, 0xf2, 0xc3, 0xa0, 0x27, 0x91, 0xcb, 0x02, 0x99, 0x02, 0xcc, 0x87, 0x50, 0x6c, 0xc8,
	0x55, 0x28, 0xfa, 0x08, 0x8a, 0x6a, 0x45, 0x5a, 0xcb, 0xdd, 0x59, 0xd9, 0x2e, 0xef, 0xd6, 0x76,
	0xc6, 0xee, 0x63, 0x47, 0x11, 0x5b, 0x09, 0xa5, 0xf9, 0xef, 0x39, 0xa8, 0x1f, 0x7a, 0x94, 0x79,
	0x41, 0x6f, 0xdf, 0xa3, 0x2c, 0xf6, 0x3a, 0x03, 0x7e, 0x45, 0xfb, 0x84, 0x61, 0xcf, 0xa7, 0xe8,
	0x3a, 0x14, 0xc3, 0xd8, 0x25, 0xb1, 0xed, 0xb9, 0x62, 0x6b, 0x25, 0xab, 0x20, 0xc6, 0x2d, 0x17,
	0xdd, 0x86, 0x72, 0x34, 0x88, 0x9d, 0x73, 0x4c, 0x09, 0xc7, 0x2e, 0x0b, 0x2c, 0x68, 0x50, 0xcb,
	0x45, 0x0f, 0xa0, 0xd4, 0x8d, 0xc3, 0xbe, 0xed, 0x62, 0x46, 0x6a, 0x2b, 0x77, 0x72, 0xdb, 0xe5,
	0xdd, 0xfa, 0x8e, 0xbc, 0xb4, 0x1d, 0x7d, 0x69, 0x3b, 0x67, 0xfa, 0xca, 0xad, 0x22, 0x27, 0xde,
	0xc7, 0x8c, 0x70, 0x46, 0x76, 0x1e, 0x0f, 0x24, 0xe3, 0xea, 0x7c, 0x46, 0x4e, 0x2c, 0x18, 0x6f,
	0x02, 0xe0, 0x01, 0x0b, 0xed, 0x98, 0x04, 0xe4, 0x79, 0x6d, 0xed, 0x4e, 0x6e, 0xbb, 0x68, 0x95,
	0x38, 0xc4, 0xe2, 0x00, 0xf3, 0x3f, 0x57, 0xa0, 0xaa, 0xce, 0xda, 0x1e, 0x06, 0xce, 0x69, 0x1c,
	0xa2, 0x2f, 0xa0, 0x92, 0x1c, 0x42, 0x2c, 0x97, 0x9b, 0xbb, 0xdc, 0xba, 0x66, 0x10, 0x4b, 0xfe,
	0x02, 0x36, 0x3b, 0x9e, 0xef, 0x7b, 0x41, 0xcf, 0xee, 0xc6, 0xe4, 0xdb, 0x01, 0x09, 0x9c, 0xa1,
	0xb8, 0x8b, 0xea, 0xee, 0xfb, 0x13, 0xd7, 0x3f, 0xba, 0xf8, 0xce, 0x23, 0xc9, 0xf8, 0x58, 0xf3,
	0x59, 0x46, 0x67, 0x0c, 0x82, 0x3e, 0x83, 0x32, 0x79, 0x11, 0x79, 0xf1, 0x70, 0xd1, 0x5b, 0x04,
	0x49, 0x2e, 0xf6, 0x56, 0x83, 0x82, 0x58, 0x3f, 0x1e, 0x8a, 0x5b, 0x2c, 0x59, 0x7a, 0x88, 0x5e,
	0x87, 0x8a, 0xeb, 0x51, 0x29, 0x9e, 0x5d, 0x1f, 0xf7, 0xd4, 0x5d, 0xad, 0x6b, 0xe0, 0x63, 0x1f,
	0xf7, 0xd0, 0xd7, 0x60, 0x50, 0x12, 0x5f, 0x7a, 0x0e, 0xb1, 0xa3, 0x38, 0xbc, 0xf4, 0x5c, 0x12,
	0xd7, 0xf2, 0x8b, 0x9d, 0xac, 0x2d, 0xf9, 0x4e, 0x15, 0x1b, 0xb5, 0x36, 0xe8, 0x28, 0xc4, 0x7c,
	0x1b, 0x8c, 0x71, 0x22, 0x54, 0x86, 0xc2, 0xd3, 0x47, 0x4d, 0xab, 0x71, 0x78, 0x68, 0x2c, 0xa1,
	0x22, 0xac, 0x7e, 0xd5, 0xfc, 0xf9, 0x99, 0x91, 0x33, 0x3f, 0x01, 0x63, 0xfc, 0xa6, 0x38, 0xe9,
	0xd1, 0xc9, 0xf1, 0xd9, 0xc1, 0xe1, 0x57, 0xc6, 0x12, 0x02, 0xc8, 0x7f, 0xd5, 0x6c, 0x58, 0x87,
	0x5f, 0x19, 0x39, 0xb4, 0x0e, 0xc5, 0x93, 0xe3, 0xa6, 0x7d, 0xd6, 0x3a, 0x6a, 0x1a, 0xcb, 0xe6,
	0x6f, 0x56, 0xe0, 0xb6, 0x92, 0xf9, 0x27, 0x7c, 0xab, 0xcd, 0x17, 0x8c, 0xc4, 0x01, 0xf6, 0x5b,
	0x2e, 0x09, 0x98, 0xd7, 0xf5, 0xf8, 0xaa, 0x57, 0x21, 0x1f, 0xc6, 0x5e, 0xcf, 0x0b, 0x94, 0x80,
	0xab, 0x11, 0xfa, 0x01, 0xe4, 0xbf, 0x09, 0x3b, 0x52, 0xb4, 0x57, 0xb6, 0x4b, 0xd6, 0xda, 0x37,
	0x61, 0xa7, 0xe5, 0xa2, 0xfb, 0x70, 0xc5, 0x19, 0x50, 0x16, 0xf6, 0x85, 0x52, 0xe8, 0x69, 0xc4,
	0xcb, 0x94, 0x2c, 0xa4, 0x51, 0xe9, 0x02, 0x08, 0xc1, 0x2a, 0xc3, 0x3d, 0x5a, 0x5b, 0x13, 0xb3,
	0x88, 0xdf, 0xe8, 0x2e, 0xac, 0x63, 0x87, 0xeb, 0x99, 0xed, 0x7b, 0x94, 0xd1, 0x5a, 0x5e, 0xe0,
	0xca, 0x12, 0xc6, 0xef, 0x92, 0xa2, 0x7b, 0xb0, 0x49, 0x43, 0xc7, 0xc3, 0x3e, 0xbf, 0xfc, 0xae,
	0xe7, 0x0b, 0x25, 0x2b, 0x88, 0x55, 0x36, 0x24, 0xe2, 0x54, 0xc2, 0x5b, 0x2e, 0x97, 0xfb, 0x08,
	0xc7, 0x2c, 0x90, 0x7a, 0x5a, 0x14, 0x44, 0x25, 0x05, 0x69, 0xb9, 0xe8, 0x06, 0x94, 0xfa, 0x38,
	0xbe, 0x20, 0x8c, 0x63, 0x4b, 0x02, 0x5b, 0x94, 0x80, 0x96, 0x8b, 0xae, 0x41, 0x81, 0xe1, 0x17,
	0xb6, 0xe7, 0xd2, 0x1a, 0x88, 0x5d, 0xe4, 0x19, 0x7e, 0xd1, 0x72, 0x29, 0x7a, 0x13, 0x36, 0x28,
	0xf6, 0x09, 0xb5, 0xb9, 0x4d, 0x0b, 0x03, 0xce, 0x5b, 0x16, 0xbc, 0x15, 0x01, 0x3e, 0x15, 0xd0,
	0x96, 0x8b, 0xfe, 0x1f, 0xdc, 0xc0, 0xae, 0xeb, 0xf1, 0x9d, 0x63, 0xdf, 0x1e, 0x63, 0xa1, 0xb5,
	0x75, 0x31, 0x69, 0x2d, 0x25, 0x69, 0x67, 0xb9, 0x29, 0x17, 0x45, 0xc1, 0xd3, 0x0d, 0x63, 0x47,
	0x9c, 0xb1, 0x22, 0x16, 0x59, 0x4f, 0x81, 0x2d, 0xd7, 0xfc, 0xcd, 0x32, 0x40, 0x5b, 0x1c, 0xfa,
	0xa9, 0x75, 0x48, 0xd1, 0x1b, 0x50, 0x95, 0x1a, 0x10, 0xf9, 0x03, 0x6a, 0x0f, 0x62, 0x5f, 0x3d,
	0x5d, 0x25, 0x85, 0x3e, 0x8d, 0x7d, 0x7e, 0xcb, 0xbe, 0x17, 0x5c, 0x10, 0xd7, 0x0b, 0x04, 0x91,
	0x34, 0x51, 0x65, 0x0d, 0xe3, 0x24, 0x6f, 0x40, 0xb5, 0x1b, 0x0e, 0x62, 0xfa, 0xed, 0x00, 0xc7,
	0x44, 0x10, 0xc9, 0x87, 0xac, 0xa4, 0x50, 0x4e, 0x76, 0x1b, 0xca, 0xec, 0xb9, 0xc7, 0x18, 0x89,
	0x05, 0x8d, 0xd4, 0x26, 0x50, 0x20, 0xb5, 0x54, 0x17, 0x3b, 0xa4, 0x13, 0x86, 0x17, 0x82, 0x62,
	0x4d, 0x2e, 0xa5, 0x61, 0x9c, 0xe4, 0x1a, 0x14, 0x62, 0x2a, 0x77, 0x9b, 0x97, 0x82, 0x16, 0x53,
	0xaa, 0x26, 0x1f, 0x86, 0x03, 0x36, 0xe8, 0xc8, 0x0d, 0xc8, 0x37, 0x06, 0x05, 0xe2, 0x04, 0xaf,
	0x43, 0xc5, 0x0b, 0x28, 0xc3, 0xbd, 0x18, 0xf7, 0x05, 0x89, 0x7c, 0xe1, 0xf5, 0x04, 0xa8, 0x88,
	0x22, 0x2f, 0x60, 0x24, 0x26, 0x94, 0x09, 0x22, 0xf9, 0xd0, 0xeb, 0x09, 0xf0, 0x69, 0xec, 0x9b,
	0xff, 0x9c, 0x03, 0xe3, 0x80, 0x9f, 0xec, 0xa4, 0x7b, 0x12, 0x91, 0x58, 0x78, 0x43, 0x74, 0x06,
	0xe8, 0x9c, 0xc3, 0xec, 0xb0, 0x6b, 0x87, 0x1a, 0xaa, 0x5c, 0xc8, 0x9b, 0x13, 0x9a, 0x3e, 0xce,
	0xbe, 0xd3, 0x8e, 0x70, 0x60, 0x19, 0xe7, 0x63, 0xe0, 0xfa, 0x25, 0xac, 0x72, 0x0c, 0xba, 0x05,
	0x65, 0x17, 0x0f, 0xf9, 0xdc, 0xcf, 0x09, 0xb9, 0x10, 0xd3, 0x96, 0xac, 0x92, 0x8b, 0x87, 0x27,
	0xdd, 0xff, 0x4f, 0xc8, 0x05, 0xda, 0x82, 0xb5, 0x30, 0x22, 0x01, 0x55, 0xaf, 0x23, 0x07, 0x5c,
	0x29, 0x1d, 0x3f, 0xa4, 0x84, 0xaa, 0xf7, 0x50, 0x23, 0x74, 0x07, 0xca, 0x2e, 0xa1, 0x4e, 0xec,
	0x45, 0x62, 0x93, 0xf2, 0x21, 0xb2, 0x20, 0xf3, 0xf7, 0x73, 0x50, 0xdd, 0x0b, 0x03, 0x86, 0x1d,
	0xa6, 0x9d, 0xd8, 0x4d, 0x80, 0xae, 0x17, 0x53, 0x66, 0x07, 0xb8, 0x4f, 0x94, 0xa8, 0x94, 0x04,
	0xe4, 0x18, 0xf7, 0x09, 0x57, 0x0f, 0x1f, 0x6b, 0xac, 0xdc, 0x45, 0x91, 0x03, 0x04, 0x72, 0x0b,
	0xd6, 0x48, 0x1f, 0x7b, 0x5a, 0x2e, 0xe4, 0x80, 0x3f, 0x77, 0x74, 0x1e, 0x06, 0xc4, 0x0e, 0x06,
	0xfd, 0x0e, 0x89, 0xf5, 0x3e, 0x04, 0xec, 0x58, 0x80, 0xcc, 0x7f, 0xcb, 0x41, 0xa9, 0x1d, 0xe0,
	0x88, 0x9e, 0x87, 0x8c, 0xa2, 0x06, 0x94, 0xa8, 0x1e, 0xa8, 0xab, 0x7d, 0x7d, 0xe2, 0x6a, 0x13,
	0xf2, 0xe4, 0x97, 0x95, 0x72, 0xd5, 0xff, 0x34, 0x07, 0x45, 0x0d, 0xe7, 0x32, 0xa3, 0x31, 0xa9,
	0x6b, 0x06, 0x0d, 0x6a, 0xb9, 0xe8, 0x23, 0x28, 0x38, 0x31, 0xc1, 0x8c, 0x48, 0xcf, 0xfc, 0x72,
	0xa7, 0xa1, 0x49, 0xd1, 0x2e, 0xe4, 0xa5, 0xff, 0x58, 0xc0, 0xd3, 0x28, 0x4a, 0xf3, 0x2f, 0x57,
	0x60, 0xeb, 0x90, 0xf4, 0xb0, 0x33, 0x3c, 0x8d, 0x43, 0x77, 0x30, 0x72, 0xed, 0x17, 0x64, 0xa8,
	0x6c, 0x81, 0x7e, 0xf8, 0x0b, 0x32, 0x94, 0xba, 0x8f, 0x3e, 0x84, 0xab, 0xf4, 0x9c, 0x6b, 0x5d,
	0xd8, 0xb5, 0x2f, 0x43, 0xee, 0x65, 0x94, 0x8f, 0x50, 0xf6, 0xf6, 0x8a, 0xc0, 0x9e, 0x74, 0x9f,
	0x71, 0x9c, 0xf2, 0x15, 0xe2, 0x29, 0xf1, 0x0b, 0x7d, 0xed, 0x2b, 0xea, 0x29, 0xf1, 0x0b, 0x79,
	0xe9, 0xfc, 0x5a, 0x9c, 0xb0, 0xdf, 0x0f, 0x03, 0xf9, 0x98, 0xab, 0x62, 0x22, 0x90, 0x20, 0xf1,
	0x9c, 0x9c, 0x80, 0xf8, 0xbe, 0x9e, 0x40, 0xaa, 0x29, 0x70, 0x90, 0x9a, 0xe1, 0x16, 0x70, 0xf2,
	0x88, 0x30, 0x8f, 0x85, 0xb1, 0xb2, 0xcb, 0x19, 0x08, 0x9f, 0x00, 0xbb, 0x7d, 0x2f, 0xb0, 0x83,
	0x90, 0x11, 0xaa, 0x95, 0x55, 0x80, 0x8e, 0x39, 0x84, 0x8b, 0x06, 0x25, 0xa1, 0xed, 0x60, 0x46,
	0x7a, 0x61, 0x3c, 0xac, 0x15, 0xa5, 0x69, 0xa7, 0x24, 0xdc, 0x53, 0xa0, 0x54, 0xa6, 0x4a, 0x59,
	0x99, 0xda, 0x82, 0xb5, 0xc8, 0xc7, 0x0e, 0xa9, 0x81, 0x84, 0x8a, 0x01, 0xf7, 0xe1, 0x0c, 0xf7,
	0x7c, 0x2f, 0x20, 0xca, 0xfa, 0xea, 0x21, 0xfa, 0x11, 0x5c, 0xa3, 0x83, 0x0e, 0x17, 0xfc, 0x0e,
	0x71, 0x6d, 0xc6, 0x97, 0xec, 0x47, 0xd8, 0xeb, 0x05, 0xdc, 0xe6, 0x72, 0x6f, 0xfe, 0x83, 0x14,
	0x7d, 0x16, 0xee, 0x69, 0xa4, 0xf9, 0x00, 0xca, 0x7b, 0xc2, 0x4b, 0x3d, 0xe6, 0xe1, 0x28, 0x77,
	0x4f, 0x19, 0xb5, 0x10, 0xbf, 0xf9, 0x56, 0x2e, 0xb1, 0x3f, 0xd0, 0xda, 0x20, 0x07, 0xe6, 0x7f,
	0xe5, 0xe1, 0xee, 0x01, 0xc1, 0x3e, 0x3b, 0xdf, 0xc3, 0x31, 0x77, 0xdb, 0x5d, 0x42, 0xa9, 0x30,
	0xe9, 0xad, 0xa0, 0x1b, 0xc6, 0x7d, 0x69, 0x4d, 0x7e, 0x02, 0x15, 0x1e, 0xaa, 0xf0, 0x57, 0xed,
	0x78, 0x31, 0x3b, 0x5f, 0x20, 0xa2, 0x2a, 0x73, 0x86, 0x93, 0xee, 0x23, 0x4e, 0x9e, 0x5e, 0xce,
	0x72, 0xf6, 0x72, 0x6e, 0x01, 0x74, 0x89, 0xef, 0x87, 0xcf, 0xe9, 0xb9, 0x17, 0xd5, 0x56, 0xe4,
	0xb3, 0xa4, 0x90, 0x31, 0x15, 0x5f, 0x1d, 0x57, 0xf1, 0x2f, 0x21, 0xdf, 0x23, 0x81, 0xab, 0x5e,
	0xbc, 0xba, 0xfb, 0xc9, 0xa4, 0x59, 0x9b, 0x77, 0xb0, 0x9d, 0x27, 0x62, 0x02, 0x4b, 0x4d, 0xc4,
	0x83, 0x76, 0x2f, 0xf0, 0x98, 0x87, 0x7d, 0xaa, 0xec, 0x79, 0x32, 0xe6, 0x31, 0x82, 0x17, 0xd0,
	0x41, 0x8c, 0x03, 0x87, 0x50, 0x1b, 0x3b, 0x0e, 0x89, 0xb8, 0x22, 0x16, 0xc4, 0xb6, 0x51, 0x8a,
	0x6a, 0x28, 0xcc, 0xa8, 0x09, 0x2a, 0x8d, 0x99, 0xa0, 0x8f, 0xe0, 0x6a, 0x9f, 0xb8, 0x9e, 0x83,
	0x7d, 0xdb, 0xf7, 0x1c, 0x12, 0xd0, 0xc4, 0xec, 0x48, 0x49, 0xd9, 0x52, 0xd8, 0x43, 0x89, 0x54,
	0x82, 0xfc, 0x10, 0x5e, 0x0b, 0xb0, 0x72, 0xca, 0x3a, 0x7c, 0xcb, 0x06, 0x2c, 0x52, 0x9a, 0xea,
	0x9a, 0x46, 0x47, 0x61, 0x99, 0xc0, 0x85, 0x07, 0x46, 0xdd, 0x2e, 0x57, 0xc8, 0x75, 0x15, 0x18,
	0x89, 0x11, 0x7a, 0x00, 0xd7, 0xa2, 0xcc, 0x1d, 0xd9, 0x4e, 0x4c, 0x04, 0x13, 0xf6, 0x6b, 0x15,
	0x71, 0xc2, 0xab, 0x59, 0xf4, 0x5e, 0x82, 0xe5, 0xb9, 0x4c, 0x4c, 0x28, 0xdf, 0x83, 0x33, 0xac,
	0x55, 0xa5, 0x3d, 0x48, 0x00, 0x7c, 0x39, 0xea, 0x9c, 0x87, 0xa1, 0x5f, 0xdb, 0x90, 0x71, 0x88,
	0x1c, 0x71, 0x2e, 0x1a, 0x11, 0xee, 0xfb, 0xd9, 0xb0, 0x66, 0x48, 0xae, 0x04, 0x80, 0xde, 0x03,
	0x44, 0x19, 0x0e, 0x5c, 0x1c, 0xbb, 0xde, 0x77, 0x5c, 0x0f, 0x3c, 0xe6, 0x93, 0xda, 0xa6, 0xd8,
	0xf0, 0x66, 0x16, 0x73, 0xc6, 0x11, 0x22, 0xda, 0x60, 0x5c, 0x3c, 0xd5, 0x4d, 0xd6, 0x90, 0x8a,
	0x36, 0x38, 0x50, 0x5d, 0x20, 0x3a, 0x00, 0xe4, 0x51, 0x9b, 0xe1, 0x0b, 0x1e, 0xd5, 0x47, 0x98,
	0x79, 0x84, 0xe7, 0x54, 0x57, 0x66, 0xc8, 0xf1, 0xa3, 0x30, 0xf4, 0x9f, 0x71, 0x05, 0xb1, 0x0c,
	0x8f, 0x9e, 0x09, 0xa6, 0x53, 0xc5, 0x63, 0x7e, 0x06, 0x79, 0x29, 0x36, 0xc8, 0x80, 0xf5, 0xe3,
	0x90, 0xb5, 0xf9, 0xbe, 0xbb, 0x1e, 0x71, 0x65, 0xd4, 0xfa, 0x98, 0xf4, 0xb1, 0x4f, 0x8c, 0x1c,
	0x0f, 0x76, 0x8f, 0xf8, 0xaf, 0x65, 0x54, 0x82, 0xb5, 0x13, 0x76, 0x4e, 0x62, 0x63, 0xe5, 0xa7,
	0xab, 0xc5, 0xa2, 0x51, 0x32, 0xff, 0x3c, 0x0f, 0x45, 0xcb, 0x73, 0xce, 0xf7, 0x31, 0xc3, 0x68,
	0x1b, 0x0c, 0x16, 0xfa, 0x3e, 0x4f, 0x35, 0x12, 0x21, 0x90, 0x8a, 0x5b, 0xe5, 0xf0, 0xc7, 0x31,
	0xd1, 0xcf, 0x3f, 0xe6, 0x28, 0x97, 0x27, 0x1c, 0x25, 0x7a, 0x07, 0x36, 0xe9, 0x79, 0x18, 0x33,
	0x3b, 0x4b, 0x27, 0x2d, 0xaa, 0x21, 0x10, 0xfb, 0x19, 0xe2, 0xb7, 0x93, 0x5c, 0x80, 0x87, 0x09,
	0x5d, 0x12, 0x13, 0x57, 0x59, 0x57, 0x1d, 0xd9, 0xd3, 0x13, 0x09, 0xe6, 0x21, 0x55, 0x27, 0xc6,
	0x81, 0x4b, 0x6d, 0x07, 0xc7, 0xb1, 0x47, 0x5c, 0x15, 0xf9, 0x56, 0x24, 0x74, 0x4f, 0x02, 0x65,
	0xd2, 0x1b, 0xb8, 0x3c, 0x0e, 0xd5, 0xfa, 0xa3, 0xc7, 0xe8, 0x4b, 0xd8, 0x88, 0xf0, 0xb0, 0x4f,
	0x02, 0x66, 0xf7, 0x09, 0x3b, 0x0f, 0x5d, 0x2a, 0x74, 0xa7, 0xba, 0xbb, 0x3d, 0xa1, 0xb7, 0xfa,
	0x6a, 0x76, 0x4e, 0x25, 0xc3, 0x91, 0xa4, 0xb7, 0xaa, 0xd1, 0xc8, 0x18, 0x35, 0xa0, 0x22, 0x63,
	0x73, 0x5b, 0x64, 0xe1, 0x54, 0xd8, 0xe5, 0xf2, 0xee, 0x6b, 0x13, 0x13, 0x66, 0x6c, 0xa3, 0xb5,
	0xee, 0xa4, 0x03, 0x8a, 0x7e, 0x9d, 0x83, 0x1f, 0x9e, 0x0b, 0x33, 0xc1, 0x4f, 0x26, 0x92, 0xa2,
	0x54, 0x09, 0xbc, 0xd4, 0x52, 0x08, 0x05, 0x2e, 0xef, 0xee, 0xbe, 0xba, 0x8d, 0xb1, 0xee, 0x9e,
	0xcf, 0xb5, 0xaf, 0xc2, 0xb6, 0x74, 0x49, 0x1c, 0x13, 0xd7, 0xc6, 0x4c, 0x26, 0xec, 0x44, 0xc7,
	0xee, 0x48, 0xa3, 0x1a, 0x09, 0xc6, 0xfc, 0x97, 0x1c, 0x54, 0x47, 0x2f, 0x07, 0x6d, 0x81, 0xd1,
	0x38, 0x6a, 0x5a, 0xad, 0xbd, 0xc6, 0xb1, 0xdd, 0xfc, 0xf9, 0xa9, 0xd5, 0x6c, 0xb7, 0x8d, 0x25,
	0xb4, 0x01, 0xe5, 0xc6, 0xf1, 0xbe, 0x75, 0xd2, 0xda, 0xb7, 0x4f, 0x1b, 0x3c, 0x97, 0xaa, 0x40,
	0xa9, 0x71, 0x7a, 0x7a, 0xd8, 0x14, 0xc3, 0x65, 0x2e, 0xa4, 0x7b, 0x8d, 0xf6, 0x81, 0xb1, 0xc2,
	0x85, 0x74, 0xef, 0xa0, 0xb9, 0xf7, 0x33, 0x63, 0x95, 0xff, 0xdc, 0x6f, 0x3e, 0x6a, 0x9d, 0x19,
	0x6b, 0x9c, 0x7f, 0xbf, 0x75, 0xdc, 0xb4, 0xda, 0xf6, 0xde, 0xe1, 0xd3, 0x47, 0x46, 0x9e, 0xe7,
	0x62, 0xfb, 0xad, 0xf6, 0xde, 0xc9, 0xb3, 0xa6, 0x65, 0x14, 0x50, 0x15, 0xe0, 0xa8, 0xd1, 0x3e,
	0x6b, 0x5a, 0x7b, 0x0d, 0x6b, 0xdf, 0x28, 0x72, 0xf9, 0x3f, 0x6d, 0x7c, 0x75, 0xda, 0x38, 0x34,
	0x4a, 0x9c, 0xb5, 0xdd, 0x38, 0x6a, 0x3f, 0x3d, 0x7e, 0x22, 0xd6, 0x02, 0x4e, 0xdc, 0x3e, 0x3b,
	0xb1, 0x9a, 0xb6, 0x20, 0x2e, 0xa3, 0x2b, 0xb0, 0x71, 0x66, 0x35, 0x9e, 0x35, 0x0f, 0xc5, 0xf4,
	0x62, 0xed, 0x75, 0xbe, 0xa1, 0x67, 0xad, 0x76, 0xc3, 0xa8, 0x98, 0x6f, 0x42, 0xbe, 0xcd, 0x30,
	0x1b, 0x50, 0x61, 0x2d, 0x06, 0x34, 0xe2, 0x4a, 0x27, 0xc3, 0xa2, 0xa2, 0x95, 0x02, 0xcc, 0xbf,
	0xce, 0x41, 0xb9, 0x41, 0x45, 0xfa, 0x24, 0x2e, 0x73, 0x0b, 0xd6, 0x7c, 0xdc, 0x21, 0x3a, 0x7f,
	0x90, 0x03, 0x91, 0x4e, 0xc9, 0x50, 0x26, 0x2d, 0x6c, 0x94, 0x14, 0xa4, 0xe5, 0xf2, 0xc4, 0x48,
	0xa3, 0x07, 0x54, 0xa6, 0x5c, 0x2a, 0x69, 0x50, 0xe0, 0xa7, 0x54, 0xa4, 0x5d, 0xb7, 0xa0, 0x7c,
	0xd9, 0x71, 0x12, 0x1a, 0xe5, 0x94, 0x2e, 0x3b, 0x8e, 0xc2, 0xbf, 0x0d, 0x86, 0x4b, 0xba, 0x78,
	0xe0, 0x33, 0xdb, 0x0f, 0x1d, 0x29, 0x3a, 0x32, 0x0f, 0xdf, 0x50, 0xf0, 0x43, 0x05, 0x36, 0x3f,
	0x07, 0xa3, 0x91, 0xe4, 0x86, 0x8d, 0x88, 0x9f, 0x86, 0xdb, 0x82, 0x4c, 0x0e, 0x99, 0x8d, 0x6d,
	0xab, 0x69, 0x1e, 0xc9, 0x1d, 0x88, 0xf9, 0xf7, 0x25, 0x58, 0xcf, 0x66, 0xc1, 0x92, 0x35, 0x53,
	0x9c, 0x4a, 0x43, 0xc8, 0x2a, 0xce, 0xd0, 0xc9, 0x30, 0xd2, 0x25, 0x3e, 0xe1, 0xde, 0x6b, 0x73,
	0x7e, 0x18, 0xa9, 0x48, 0xb3, 0xc1, 0x27, 0x5a, 0x3c, 0xf8, 0xfc, 0x08, 0x0a, 0x83, 0xc8, 0x15,
	0x5c, 0x57, 0xe6, 0x73, 0x29, 0x52, 0x1e, 0x20, 0x5d, 0x92, 0x98, 0xeb, 0x49, 0xad, 0x76, 0x27,
	0xb7, 0xbd, 0x62, 0xe9, 0x21, 0xfa, 0x38, 0x53, 0x10, 0xbb, 0x25, 0x26, 0xbc, 0x3e, 0xab, 0x20,
	0x46, 0xd3, 0x8a, 0x18, 0xfa, 0x25, 0x6c, 0xf9, 0xb2, 0x9a, 0x61, 0xbb, 0x99, 0x8a, 0x58, 0xed,
	0xb6, 0x98, 0xe2, 0x9d, 0x59, 0xa5, 0x8f, 0x29, 0xd5, 0x33, 0xeb, 0x8a, 0x3f, 0x89, 0x43, 0x2d,
	0x30, 0xf4, 0xfc, 0x74, 0x18, 0x38, 0xdc, 0x8c, 0xd4, 0xee, 0x88, 0xb9, 0x6f, 0xcf, 0x29, 0xab,
	0x58, 0x55, 0x7f, 0xb4, 0x7a, 0xf5, 0x10, 0xd6, 0x71, 0x2a, 0xcd, 0xb4, 0x76, 0x77, 0x86, 0x4d,
	0xcb, 0x88, 0xbc, 0x35, 0xc2, 0x81, 0x7e, 0x05, 0xe6, 0xa8, 0x24, 0x10, 0x55, 0x21, 0xc9, 0x84,
	0x0a, 0xb4, 0xf6, 0xba, 0xd8, 0xde, 0xfb, 0xb3, 0x6e, 0x6f, 0x56, 0x69, 0xc5, 0xba, 0x8d, 0xe7,
	0xd4, 0x5e, 0x3e, 0x87, 0xb2, 0x2a, 0x72, 0x0c, 0x62, 0x9f, 0xd6, 0x7e, 0x28, 0xd6, 0xb9, 0x31,
	0x99, 0x18, 0x25, 0xa9, 0xbf, 0x05, 0x92, 0xfe, 0x69, 0xec, 0x53, 0x74, 0x32, 0x35, 0x71, 0x7d,
	0x43, 0x4c, 0x72, 0x77, 0x6e, 0xe2, 0x3a, 0x99, 0xb3, 0xa2, 0x03, 0xd8, 0x70, 0x64, 0xea, 0x68,
	0xbb, 0xf2, 0x09, 0x6b, 0x6f, 0xce, 0x78, 0x99, 0xd1, 0x14, 0xd3, 0xaa, 0x3a, 0xa3, 0x29, 0x67,
	0x13, 0x8c, 0x24, 0x3f, 0x8b, 0x49, 0x14, 0xc6, 0x8c, 0xd6, 0xde, 0x52, 0x42, 0x3d, 0x33, 0xed,
	0xb3, 0x36, 0x34, 0x8f, 0x25, 0x59, 0xd0, 0xd7, 0x70, 0xd5, 0x17, 0xa9, 0x95, 0xad, 0x2d, 0x8e,
	0xde, 0xd7, 0xb6, 0x98, 0xec, 0x8d, 0x49, 0x89, 0x99, 0x92, 0x89, 0x59, 0x5b, 0xfe, 0xb4, 0xfc,
	0xec, 0x47, 0x50, 0x8a, 0x3d, 0xe7, 0xdc, 0x76, 0x31, 0xc3, 0xb5, 0xb7, 0x67, 0x28, 0x88, 0xf6,
	0xaf, 0x56, 0x31, 0xd6, 0x41, 0xc8, 0x43, 0x28, 0x06, 0x38, 0x92, 0x6c, 0xf7, 0x66, 0x6c, 0x23,
	0x2b, 0x19, 0xda, 0x8a, 0x59, 0x85, 0x00, 0x47, 0x62, 0x86, 0xfb, 0x90, 0xa7, 0xc2, 0x5c, 0xd7,
	0xde, 0x11, 0xfc, 0xd7, 0x26, 0xef, 0x44, 0xa0, 0x2d, 0x45, 0x66, 0x32, 0xb8, 0x22, 0x2c, 0x9f,
	0xd6, 0x56, 0xf2, 0xed, 0x80, 0x50, 0xf6, 0x0a, 0x76, 0xec, 0x2a, 0xe4, 0x9d, 0x41, 0x4c, 0xc3,
	0x58, 0x99, 0x73, 0x35, 0xe2, 0x81, 0x77, 0x84, 0x7b, 0xc4, 0xa6, 0xde, 0x77, 0xb2, 0xba, 0xba,
	0x62, 0x15, 0x39, 0xa0, 0xed, 0x7d, 0x47, 0xcc, 0xbf, 0xcd, 0x41, 0x41, 0x2d, 0x89, 0xae, 0x43,
	0x91, 0xc7, 0x84, 0x31, 0x8f, 0x72, 0xa5, 0x5b, 0x29, 0x78, 0xf4, 0x8c, 0x0f, 0x93, 0x02, 0xdf,
	0x72, 0xa6, 0xc0, 0xf7, 0x2e, 0x20, 0x59, 0x61, 0x13, 0x59, 0x9c, 0x8d, 0xa3, 0x28, 0x75, 0x13,
	0x46, 0x06, 0xd3, 0x88, 0x22, 0x59, 0xbf, 0xd3, 0xe7, 0x48, 0x1d, 0x85, 0x82, 0xb4, 0xb2, 0x59,
	0xf9, 0xda, 0xc2, 0x59, 0xf9, 0x21, 0x6c, 0x8d, 0xde, 0x18, 0x8d, 0x42, 0x1e, 0xdb, 0x7e, 0xbf,
	0x2e, 0xc1, 0x5f, 0xac, 0x82, 0x71, 0x1a, 0x87, 0xdf, 0x10, 0xe1, 0x58, 0x1e, 0x7b, 0x3e, 0x93,
	0x19, 0x50, 0x66, 0x2a, 0x7e, 0x25, 0xa9, 0x11, 0xfd, 0x60, 0x86, 0x11, 0x5d, 0x16, 0x74, 0x53,
	0xed, 0xe2, 0xf6, 0x14, 0xbb, 0xb8, 0x22, 0xc8, 0xc7, 0xcd, 0x9e, 0x39, 0x66, 0xf6, 0x56, 0x65,
	0xf1, 0x7a, 0xc4, 0xb0, 0xfd, 0x6c, 0x21, 0xc3, 0x26, 0xdd, 0xed, 0x5c, 0x33, 0x75, 0x7b, 0xd4,
	0x4c, 0xe5, 0x05, 0x57, 0xd6, 0x12, 0xbd, 0x3b, 0xd5, 0x12, 0x15, 0x04, 0xdd, 0xa4, 0x99, 0x79,
	0x6b, 0xd2, 0xcc, 0x14, 0xe5, 0x41, 0xc7, 0xac, 0xc8, 0xdb, 0x53, 0xac, 0x48, 0x49, 0x46, 0x08,
	0xe3, 0x96, 0xe2, 0xa3, 0x99, 0x96, 0x02, 0x04, 0xc3, 0x74, 0x13, 0x70, 0x23, 0x6b, 0x02, 0xca,
	0xf2, 0x0d, 0x13, 0x3d, 0xbf, 0x9a, 0x68, 0xa9, 0xac, 0x27, 0xa8, 0x11, 0x57, 0x85, 0x44, 0xff,
	0x2b, 0x52, 0x15, 0x94, 0x62, 0x9b, 0x1f, 0x03, 0x58, 0x04, 0xbb, 0x4a, 0x40, 0xde, 0x82, 0x0d,
	0x2f, 0x70, 0xfc, 0x81, 0x4b, 0x6c, 0x1d, 0x44, 0x48, 0x39, 0xa9, 0x2a, 0xf0, 0xbe, 0x84, 0x9a,
	0xff, 0x90, 0x83, 0x8d, 0x27, 0x84, 0x1d, 0x0d, 0x7c, 0xe6, 0x69, 0xdd, 0xbe, 0x07, 0x9b, 0xe3,
	0xba, 0x4d, 0x55, 0x11, 0x69, 0x63, 0x54, 0xb9, 0x29, 0x3a, 0x86, 0xcd, 0x28, 0x91, 0x4e, 0xbb,
	0x2b, 0x56, 0x57, 0x65, 0xaf, 0x49, 0x3f, 0x30, 0x2e, 0xc7, 0x96, 0x11, 0x8d, 0x4b, 0xf6, 0xe7,
	0x50, 0x8e, 0x09, 0x76, 0xf5, 0x4c, 0x2b, 0x33, 0xdc, 0x52, 0x7a, 0x54, 0x0b, 0xe2, 0xe4, 0xb7,
	0xf9, 0x3f, 0x5b, 0x50, 0x39, 0x0c, 0xc3, 0x8b, 0x41, 0xa4, 0xcf, 0x32, 0x75, 0x7f, 0xb9, 0xef,
	0xbf, 0xbf, 0x87, 0x50, 0x90, 0x93, 0x50, 0x75, 0xca, 0xc9, 0x32, 0xed, 0xc8, 0x06, 0x76, 0x24,
	0x1f, 0xb5, 0x34, 0x5b, 0xc6, 0x1e, 0xae, 0xcc, 0xb6, 0x87, 0xab, 0xa3, 0xf6, 0x10, 0x7d, 0x01,
	0xeb, 0x94, 0x27, 0x8c, 0x61, 0x24, 0xf5, 0x4e, 0x5a, 0xa3, 0xd7, 0xa6, 0xb8, 0xeb, 0x98, 0x9d,
	0x48, 0x1a, 0xab, 0x4c, 0xd3, 0x81, 0xd0, 0x23, 0x82, 0x63, 0xe7, 0xdc, 0x66, 0x24, 0xee, 0xab,
	0xb4, 0x0f, 0x24, 0xe8, 0x8c, 0xc4, 0xfd, 0xfa, 0x1f, 0xe7, 0xa0, 0xa2, 0xac, 0x8f, 0x3a, 0xea,
	0x74, 0x43, 0x9a, 0x9b, 0x61, 0x48, 0xdb, 0xa0, 0x0d, 0xbf, 0xad, 0x44, 0x57, 0xb6, 0xe2, 0xde,
	0x9d, 0x73, 0x3f, 0x6a, 0x4d, 0xe5, 0x75, 0x2a, 0x38, 0x3b, 0xac, 0xff, 0x59, 0x0e, 0xae, 0x4f,
	0x09, 0xf2, 0xd4, 0x06, 0xaf, 0x42, 0x9e, 0x87, 0xdb, 0x97, 0x44, 0xc9, 0xb6, 0x1a, 0xc9, 0xfa,
	0x90, 0xc2, 0x48, 0xab, 0x97, 0x8c, 0x79, 0x06, 0x21, 0xcc, 0x34, 0xa1, 0xb6, 0x17, 0xd8, 0x2e,
	0x1e, 0x52, 0xe5, 0x7b, 0x2a, 0x0a, 0xdc, 0x0a, 0xf6, 0xf1, 0x90, 0xa6, 0x74, 0x6e, 0x42, 0xb7,
	0x9a, 0xa5, 0x73, 0x25, 0x5d, 0xfd, 0xaf, 0x72, 0xd2, 0xda, 0xa7, 0x36, 0x72, 0xce, 0xe6, 0x46,
	0x1b, 0xa5, 0xcb, 0x63, 0x8d, 0x52, 0xb4, 0x03, 0x57, 0x52, 0x34, 0x37, 0xe0, 0xb8, 0xe3, 0x13,
	0x57, 0x59, 0xe3, 0xcd, 0x84, 0x6e, 0x5f, 0x21, 0x46, 0xce, 0xba, 0x3a, 0x76, 0xd6, 0x1a, 0x14,
	0xd4, 0x66, 0x95, 0xb5, 0xd5, 0xc3, 0xfa, 0x1f, 0xe6, 0x60, 0x73, 0x4f, 0xc6, 0xfe, 0xfb, 0x98,
	0x11, 0xb5, 0xe5, 0xcf, 0xa0, 0xdc, 0x21, 0x3d, 0x2f, 0xb0, 0x63, 0x1c, 0xf4, 0x16, 0xe9, 0xc7,
	0x82, 0x20, 0xb7, 0x38, 0x35, 0x7a, 0x00, 0x25, 0x12, 0xb8, 0x8a, 0x75, 0x7e, 0xdd, 0xbb, 0x48,
	0x02, 0x57, 0x30, 0xd6, 0xdf, 0x87, 0xb2, 0x70, 0xe6, 0x6a, 0x13, 0x77, 0x61, 0xdd, 0xa3, 0xf6,
	0x78, 0x22, 0x59, 0xf6, 0x68, 0x5b, 0x83, 0xea, 0xbf, 0x5e, 0x83, 0xea, 0x69, 0x4c, 0x28, 0x09,
	0x1c, 0xbd, 0xf5, 0x3d, 0x28, 0xea, 0x86, 0x8f, 0xe0, 0xa8, 0xee, 0xbe, 0x35, 0x47, 0xee, 0xf4,
	0x04, 0x56, 0xc2, 0x88, 0x9e, 0x00, 0xa4, 0xbd, 0x27, 0x25, 0xbe, 0x0b, 0x4f, 0x93, 0x61, 0xe5,
	0x13, 0xa5, 0xed, 0x30, 0xf1, 0x76, 0xaf, 0x32, 0x51, 0xca, 0xca, 0x8f, 0xa5, 0x5b, 0x66, 0xe2,
	0x75, 0x5f, 0xe5, 0x58, 0x9a, 0x11, 0x35, 0xa0, 0xa0, 0xda, 0x65, 0xaa, 0x04, 0xbb, 0xf0, 0x1c,
	0x9a, 0x0f, 0x35, 0xa1, 0x94, 0x34, 0xb3, 0x54, 0x23, 0x7a, 0xe1, 0x49, 0x52, 0x4e, 0x3e, 0x4d,
	0xd2, 0x38, 0x13, 0x2e, 0xfa, 0x55, 0xa6, 0x49, 0x38, 0xf9, 0x81, 0x54, 0x8b, 0x4e, 0x38, 0xef,
	0x57, 0x39, 0x90, 0xe2, 0xe3, 0x53, 0x3c, 0x27, 0x1d, 0xea, 0x31, 0x59, 0xf3, 0x7d, 0x95, 0x29,
	0x14, 0x5f, 0xfd, 0x21, 0x54, 0x75, 0x78, 0xad, 0x84, 0x30, 0xd3, 0xf4, 0xcf, 0x8d, 0x36, 0xfd,
	0xb7, 0x60, 0x4d, 0x94, 0x39, 0x75, 0x65, 0x5d, 0x0c, 0xea, 0xff, 0x9a, 0x87, 0x82, 0x72, 0x0f,
	0x63, 0x7d, 0xe4, 0xdc, 0x78, 0x1f, 0xf9, 0x26, 0x40, 0xd2, 0x47, 0xd6, 0xe1, 0x6e, 0x49, 0x37,
	0x92, 0xa7, 0x36, 0x8c, 0x57, 0xa6, 0x35, 0x8c, 0x6f, 0x43, 0x39, 0xd3, 0x41, 0xd7, 0xcd, 0xd4,
	0xb4, 0x73, 0x3e, 0xb5, 0x63, 0xfe, 0x14, 0xb4, 0xd7, 0xb7, 0xb5, 0xeb, 0xcb, 0x8b, 0xf0, 0x75,
	0x41, 0xd3, 0xae, 0x7c, 0xa9, 0x76, 0x0f, 0xfa, 0xc4, 0x2f, 0xe0, 0xc6, 0xb4, 0x38, 0x55, 0xfb,
	0xe8, 0x82, 0x30, 0x21, 0x3f, 0x9e, 0xb3, 0xc4, 0x4c, 0xe7, 0x60, 0x5d, 0xf7, 0x67, 0xfa, 0x8d,
	0xdf, 0x81, 0x2b, 0xaa, 0xf0, 0x21, 0x3e, 0xed, 0xd0, 0x2b, 0x16, 0x67, 0xa4, 0xda, 0xa3, 0x2b,
	0x4e, 0x98, 0x4d, 0x6b, 0xd3, 0x99, 0xb0, 0xa4, 0xdf, 0xc0, 0xb5, 0xf1, 0x80, 0x5a, 0xaf, 0x22,
	0x2b, 0x94, 0x1f, 0x2e, 0x76, 0xae, 0x11, 0x97, 0x62, 0x6d, 0xf9, 0xd3, 0x1c, 0xcd, 0x11, 0xac,
	0x8b, 0xdc, 0x48, 0x2f, 0x00, 0x62, 0x81, 0x7b, 0x73, 0x16, 0xc8, 0x98, 0x5c, 0xab, 0xcc, 0x46,
	0xed, 0x2f, 0xc3, 0x2f, 0xc2, 0x20, 0xec, 0x0f, 0x85, 0xac, 0x95, 0x65, 0x13, 0x4d, 0xc3, 0xb8,
	0xb4, 0x3d, 0x83, 0x8d, 0x48, 0xa9, 0x83, 0x5e, 0x74, 0x5d, 0x2c, 0xfa, 0xde, 0x82, 0x4a, 0xa4,
	0x25, 0x22, 0x1a, 0x35, 0xe2, 0xcf, 0x60, 0x43, 0x57, 0xe3, 0xf4, 0xbc, 0x95, 0x85, 0xe6, 0x1d,
	0xd5, 0x43, 0xab, 0xea, 0x8f, 0x8c, 0xcd, 0x8f, 0x93, 0xc8, 0x46, 0x55, 0x2a, 0xcb, 0x50, 0x68,
	0x06, 0xc2, 0x7f, 0x1a, 0x4b, 0xa2, 0x54, 0xaa, 0xbc, 0xa9, 0x91, 0x43, 0x25, 0x58, 0x13, 0x57,
	0x63, 0x2c, 0x9b, 0xef, 0x42, 0x51, 0x6f, 0x18, 0x15, 0x60, 0xa5, 0x11, 0x0c, 0x8d, 0x25, 0xce,
	0x2a, 0x81, 0xcc, 0xc8, 0x21, 0x80, 0x7c, 0xa3, 0x23, 0x7e, 0x2f, 0x9b, 0xbf, 0x82, 0x72, 0x26,
	0xf8, 0x42, 0x9f, 0x43, 0xc9, 0xf5, 0x62, 0x19, 0x3a, 0x2a, 0x8f, 0x74, 0x6b, 0x6a, 0xb4, 0xb6,
	0xaf, 0xa9, 0xac, 0x94, 0x01, 0xbd, 0x0f, 0x6b, 0xa2, 0x56, 0xae, 0x9c, 0x50, 0x7d, 0x2a, 0xa7,
	0x2c, 0x94, 0x4b, 0x42, 0xf3, 0x6f, 0x72, 0x50, 0x39, 0xc5, 0x3d, 0xe2, 0x26, 0xe9, 0xe6, 0x7e,
	0x1a, 0x90, 0x09, 0x36, 0x9d, 0x74, 0xde, 0x7c, 0x69, 0xc5, 0x20, 0x89, 0xc0, 0xc4, 0x48, 0xc4,
	0x8d, 0x01, 0x79, 0xc1, 0xec, 0x91, 0x14, 0x1e, 0x38, 0x68, 0x4f, 0x86, 0xad, 0xd7, 0xa1, 0x78,
	0x8e, 0xa9, 0xdd, 0x0f, 0x63, 0xa2, 0xa2, 0x94, 0xc2, 0x39, 0xa6, 0x47, 0x61, 0x2c, 0x3a, 0x3e,
	0x2c, 0x64, 0xd8, 0xb7, 0x63, 0x42, 0x07, 0x3e, 0xd3, 0x11, 0xd4, 0xba, 0x00, 0x5a, 0x12, 0x66,
	0xfe, 0x63, 0x0e, 0x8c, 0x34, 0x01, 0x51, 0x7b, 0xff, 0xe5, 0x8c, 0xbd, 0x3f, 0x98, 0xd8, 0xfb,
	0x38, 0xeb, 0xc8, 0x61, 0x44, 0xa5, 0xc8, 0x0b, 0x48, 0x3c, 0x76, 0xaa, 0xfa, 0xd7, 0xf0, 0x83,
	0xa9, 0x74, 0xe8, 0x11, 0x54, 0x46, 0x16, 0x56, 0x41, 0xd0, 0x9c, 0x3b, 0x5b, 0xcf, 0xce, 0x6e,
	0xfe, 0x76, 0x19, 0xb6, 0xa6, 0x15, 0x61, 0xb8, 0x6a, 0x39, 0x61, 0x3f, 0xc2, 0xc1, 0x30, 0xdb,
	0x2b, 0x2d, 0x2b, 0x98, 0x68, 0x38, 0xd6, 0xa0, 0x80, 0x5d, 0x37, 0x26, 0x94, 0xaa, 0x06, 0xb9,
	0x1e, 0x72, 0xcb, 0xec, 0x78, 0x6c, 0xa8, 0x22, 0x77, 0xf1, 0x3b, 0x75, 0x2b, 0x85, 0x8c, 0x5b,
	0x41, 0x06, 0xac, 0x7c, 0xe7, 0x45, 0xea, 0x4b, 0x15, 0xfe, 0x33, 0xeb, 0x98, 0x4a, 0xa3, 0x8e,
	0xa9, 0x96, 0xfa, 0x41, 0xd9, 0xd1, 0xd4, 0x43, 0xfe, 0xf0, 0xcf, 0xc3, 0xf8, 0x42, 0xb7, 0xba,
	0xa4, 0x19, 0x00, 0x0e, 0x52, 0x6d, 0xae, 0xf7, 0x61, 0xcb, 0xc1, 0xbe, 0x6f, 0xb3, 0x18, 0x3b,
	0xa2, 0x5d, 0xa7, 0x28, 0xe5, 0x57, 0x47, 0x88, 0xe3, 0xce, 0x14, 0x2a, 0xe1, 0x28, 0x26, 0xd5,
	0x76, 0xa9, 0xd8, 0x5b, 0x53, 0xde, 0x33, 0xb4, 0x12, 0x2a, 0x1e, 0xdd, 0x32, 0xaf, 0x4f, 0xbe,
	0x0b, 0x03, 0x52, 0xab, 0xca, 0x4e, 0x95, 0x1e, 0x9b, 0xff, 0x9d, 0x83, 0xeb, 0xd2, 0x18, 0x8f,
	0xbc, 0x85, 0xca, 0xfb, 0xbe, 0x1c, 0xcf, 0x61, 0x03, 0xac, 0x1f, 0x73, 0xc1, 0x92, 0xd9, 0x48,
	0xaa, 0x7b, 0x8c, 0x23, 0xf4, 0x31, 0x5c, 0x1b, 0xfb, 0x2c, 0x2c, 0xa9, 0x7c, 0x49, 0xb5, 0xd8,
	0x1a, 0xf9, 0x38, 0x4c, 0xd7, 0xbf, 0x8e, 0x60, 0x53, 0x16, 0xcc, 0xd3, 0xf2, 0x04, 0x15, 0x6d,
	0xf4, 0xf2, 0xee, 0x9d, 0x89, 0x9d, 0x3c, 0x15, 0x94, 0x99, 0x42, 0xe9, 0x60, 0x14, 0x40, 0xcd,
	0xc7, 0x50, 0x9f, 0x76, 0x6a, 0xa5, 0x38, 0x0b, 0x97, 0xe5, 0xcc, 0x26, 0x5c, 0x97, 0x35, 0x80,
	0x69, 0xb7, 0xb7, 0xf8, 0x34, 0x7f, 0x94, 0x83, 0xcd, 0x47, 0x03, 0xff, 0x42, 0x6e, 0xfc, 0xd5,
	0xab, 0x83, 0x53, 0x6f, 0x67, 0xf9, 0x7b, 0xdf, 0xce, 0xdf, 0x15, 0x60, 0x63, 0x8c, 0x0a, 0xb5,
	0xff, 0xaf, 0xa2, 0x70, 0xb0, 0x34, 0x29, 0x0c, 0x27, 0x80, 0xc6, 0x3d, 0x3c, 0x0b, 0x55, 0xb9,
	0x62, 0x5e, 0x33, 0xe1, 0x60, 0xc9, 0x32, 0x46, 0x5d, 0x39, 0x0b, 0xd1, 0xef, 0x2e, 0x54, 0x35,
	0x5b, 0xfd, 0x7e, 0xed, 0x80, 0x83, 0xa5, 0xf9, 0x95, 0xb6, 0x9f, 0x8c, 0x56, 0xda, 0xd6, 0xe6,
	0x36, 0x04, 0x0e, 0x96, 0x46, 0x0a, 0x71, 0x5f, 0x4e, 0x2d, 0xc4, 0xe5, 0x17, 0x6c, 0x09, 0xf0,
	0x3b, 0x99, 0xa8, 0xd6, 0xfd, 0x74, 0xb2, 0x5a, 0x57, 0x58, 0xa8, 0x29, 0x70, 0xb0, 0x34, 0x51,
	0xd0, 0xfb, 0x34, 0xfb, 0x19, 0x58, 0x71, 0x5e, 0x3f, 0xe0, 0x60, 0x29, 0xf3, 0xfd, 0x17, 0xfa,
	0xc5, 0xcc, 0x0a, 0x5f, 0xe9, 0x15, 0x7a, 0x01, 0x07, 0x4b, 0x33, 0x4a, 0x81, 0x3f, 0xce, 0x96,
	0x02, 0x61, 0x4e, 0x37, 0xe0, 0x60, 0x29, 0x53, 0x27, 0xfc, 0x20, 0xa9, 0x13, 0x96, 0x5f, 0x5a,
	0xcd, 0x3f, 0x58, 0x4a, 0x4a, 0x88, 0x5f, 0x02, 0xca, 0xf6, 0x2e, 0xb1, 0xe8, 0x68, 0xaa, 0xf8,
	0xed, 0xee, 0x14, 0xb9, 0x1a, 0x6d, 0x7d, 0xf2, 0x67, 0xc2, 0xe3, 0xed, 0xd0, 0x4f, 0x00, 0xd2,
	0xef, 0xeb, 0x6b, 0x5b, 0x33, 0xee, 0x56, 0x84, 0x2b, 0x47, 0x98, 0x5e, 0x58, 0xa5, 0xae, 0xfe,
	0xf9, 0xa8, 0x0c, 0xa5, 0x44, 0x56, 0xee, 0xed, 0x40, 0x65, 0x24, 0x22, 0x12, 0x5d, 0x70, 0xea,
	0x90, 0xc0, 0xf5, 0x82, 0x9e, 0xb1, 0x84, 0xaa, 0x00, 0xfb, 0x24, 0x19, 0xe7, 0xee, 0x3d, 0x80,
	0x52, 0x12, 0x07, 0xf1, 0x30, 0xee, 0x28, 0x74, 0xf5, 0x17, 0x1e, 0x65, 0x28, 0xa8, 0x40, 0xdd,
	0xc8, 0xa1, 0x0d, 0x28, 0xef, 0xa5, 0x3e, 0xd6, 0x58, 0xde, 0xfd, 0x8f, 0x55, 0xb8, 0x92, 0xd5,
	0x18, 0xfd, 0x89, 0xdb, 0x73, 0x28, 0xea, 0x78, 0x02, 0xdd, 0x79, 0x49, 0xa8, 0x21, 0x8c, 0x5c,
	0xfd, 0xee, 0xdc, 0x60, 0xc4, 0x7c, 0xf3, 0xf7, 0xfe, 0xe9, 0xb7, 0x7f, 0xb2, 0x7c, 0xc7, 0xbc,
	0x21, 0xfe, 0x2c, 0x21, 0xa9, 0xdf, 0x93, 0x7f, 0x4a, 0xe8, 0x11, 0xf6, 0x5e, 0x9f, 0x13, 0x7f,
	0x9a, 0xbb, 0x87, 0xfa, 0x90, 0x97, 0x11, 0x2d, 0xba, 0xf5, 0xf2, 0x50, 0xb7, 0x3e, 0x89, 0x1f,
	0x89, 0xfa, 0xcc, 0xd7, 0xc5, 0x8a, 0x37, 0xcd, 0xda, 0xe4, 0x8a, 0xbe, 0x98, 0x88, 0x2f, 0xf7,
	0x07, 0x39, 0xc8, 0xcb, 0xeb, 0x41, 0x93, 0x79, 0xc2, 0x4c, 0x9f, 0x5a, 0x7f, 0x67, 0x21, 0xda,
	0xf9, 0x1b, 0x91, 0xf9, 0x12, 0xdf, 0xc8, 0xb7, 0x90, 0x97, 0x4e, 0x68, 0xca, 0x3e, 0x66, 0x7a,
	0xa7, 0xfa, 0xd5, 0x89, 0xba, 0x52, 0xb3, 0x1f, 0xb1, 0xe1, 0xcb, 0x96, 0x94, 0x45, 0x70, 0xbe,
	0x64, 0x0c, 0x90, 0xfa, 0x2b, 0x64, 0x4e, 0x2c, 0x3b, 0xe1, 0xcc, 0x66, 0x2e, 0xb7, 0x2d, 0x96,
	0x33, 0xcd, 0x9b, 0x93, 0xcb, 0x75, 0x06, 0xfe, 0xc5, 0x7b, 0xd2, 0x39, 0x7d, 0x9a, 0xbb, 0xd7,
	0xc9, 0x0b, 0xce, 0x0f, 0xff, 0x37, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x18, 0xed, 0x76, 0x41, 0x33,
	0x00, 0x00,
}
