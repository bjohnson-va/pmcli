syntax = "proto3";

package iamresources.v1;

//ValueList is a holder for multiple string values in order to be compatible with map declarations
message ValueList {
    repeated string values = 1;
}

//GetResourceRequest allows IAM to ask a ResourceOwner for the attribute-based representation of a single resource entity.
message GetResourceRequest {
    //resource_id is the resource type that the subject wants to access
    string resource_id = 1;

    //resource_identifier is a set of parameters that a resource owner needs to identify a resource.
    map<string, ValueList> resource_identifier = 2;
}

//GetResourceResponse includes the expression of a resource as a map of attributes. Only attributes relevant to access control and used by
//policies defined by this resource need to be includes in this map.
message GetResourceResponse {
    map<string, ValueList> attributes = 1;
}

//GetResourcesResponse includes the expression of a resource as a map of attributes. Only attributes relevant to access control and used by
//policies defined by the set of resources need to be includes in this map.
message GetResourcesResponse {
    repeated Identifiers attributes = 1;
}

//Identifiers is a set of identifiers for retreiving resources and identifying resource data.
message Identifiers {
    // identifiers is a set of parameters that a resource owner needs to identify a resource.
    map<string, ValueList> identifiers = 1;
}

//GetResourceRequest allows IAM to ask a ResourceOwner for the attribute-based representation of multiple resource entities.
message GetResourcesRequest {

    repeated Identifiers resource_identifiers = 1;

    //resource_id is the resource type that the subject wants to access
    string resource_id = 2;
}

//ResourceOwner is a grpc service that must be implemented by any application that wants to be a ResourceOwner. Satisfying this
//service interface allows IAM to ask the ResourceOwner for resource entity representations and thus evaluate policies associated
//with the ResourceOwner's registered resources against subject that want to obtain access to those resources.
service ResourceOwner {

    //deprecated: Use GetResources
    //GetResource allows IAM to ask for the attribute-based representation of a single resource entity.
    rpc GetResource (GetResourceRequest) returns (GetResourceResponse){
    };

    //GetResources allows IAM to ask for the attribute-based representation of multiple resource entities.
    rpc GetResources (GetResourcesRequest) returns (GetResourcesResponse){
    };
}
