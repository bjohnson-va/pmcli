// Code generated by protoc-gen-go. DO NOT EDIT.
// source: contacts/v1/api.proto

/*
Package contacts_v1 is a generated protocol buffer package.

It is generated from these files:
	contacts/v1/api.proto
	contacts/v1/contacts.proto

It has these top-level messages:
	SortOptions
	Filters
	Contact
	CreateContactRequest
	CreateContactResponse
	DeleteContactRequest
	ListContactsRequest
	ListContactsResponse
	ListOriginsRequest
	WhiteLabeledOrigin
	ListOriginsResponse
	AssociateIDRequest
*/
package contacts_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Contacts service

type ContactsClient interface {
	// Creates a contact
	Create(ctx context.Context, in *CreateContactRequest, opts ...grpc.CallOption) (*CreateContactResponse, error)
	// Marks a contact as deleted
	Delete(ctx context.Context, in *DeleteContactRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// Returns a list of contacts for an account group
	List(ctx context.Context, in *ListContactsRequest, opts ...grpc.CallOption) (*ListContactsResponse, error)
	// Returns the app id and the whitelabeled name for all contacts origins for an account group
	ListOrigins(ctx context.Context, in *ListOriginsRequest, opts ...grpc.CallOption) (*ListOriginsResponse, error)
	// Creates a mapping in contacts between the vendasta Contact ID and the vendor's ID
	AssociateID(ctx context.Context, in *AssociateIDRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
}

type contactsClient struct {
	cc *grpc.ClientConn
}

func NewContactsClient(cc *grpc.ClientConn) ContactsClient {
	return &contactsClient{cc}
}

func (c *contactsClient) Create(ctx context.Context, in *CreateContactRequest, opts ...grpc.CallOption) (*CreateContactResponse, error) {
	out := new(CreateContactResponse)
	err := grpc.Invoke(ctx, "/contacts.v1.Contacts/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactsClient) Delete(ctx context.Context, in *DeleteContactRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/contacts.v1.Contacts/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactsClient) List(ctx context.Context, in *ListContactsRequest, opts ...grpc.CallOption) (*ListContactsResponse, error) {
	out := new(ListContactsResponse)
	err := grpc.Invoke(ctx, "/contacts.v1.Contacts/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactsClient) ListOrigins(ctx context.Context, in *ListOriginsRequest, opts ...grpc.CallOption) (*ListOriginsResponse, error) {
	out := new(ListOriginsResponse)
	err := grpc.Invoke(ctx, "/contacts.v1.Contacts/ListOrigins", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactsClient) AssociateID(ctx context.Context, in *AssociateIDRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/contacts.v1.Contacts/AssociateID", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Contacts service

type ContactsServer interface {
	// Creates a contact
	Create(context.Context, *CreateContactRequest) (*CreateContactResponse, error)
	// Marks a contact as deleted
	Delete(context.Context, *DeleteContactRequest) (*google_protobuf1.Empty, error)
	// Returns a list of contacts for an account group
	List(context.Context, *ListContactsRequest) (*ListContactsResponse, error)
	// Returns the app id and the whitelabeled name for all contacts origins for an account group
	ListOrigins(context.Context, *ListOriginsRequest) (*ListOriginsResponse, error)
	// Creates a mapping in contacts between the vendasta Contact ID and the vendor's ID
	AssociateID(context.Context, *AssociateIDRequest) (*google_protobuf1.Empty, error)
}

func RegisterContactsServer(s *grpc.Server, srv ContactsServer) {
	s.RegisterService(&_Contacts_serviceDesc, srv)
}

func _Contacts_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateContactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contacts.v1.Contacts/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactsServer).Create(ctx, req.(*CreateContactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Contacts_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteContactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contacts.v1.Contacts/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactsServer).Delete(ctx, req.(*DeleteContactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Contacts_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListContactsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contacts.v1.Contacts/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactsServer).List(ctx, req.(*ListContactsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Contacts_ListOrigins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOriginsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactsServer).ListOrigins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contacts.v1.Contacts/ListOrigins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactsServer).ListOrigins(ctx, req.(*ListOriginsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Contacts_AssociateID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssociateIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactsServer).AssociateID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contacts.v1.Contacts/AssociateID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactsServer).AssociateID(ctx, req.(*AssociateIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Contacts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "contacts.v1.Contacts",
	HandlerType: (*ContactsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Contacts_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Contacts_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Contacts_List_Handler,
		},
		{
			MethodName: "ListOrigins",
			Handler:    _Contacts_ListOrigins_Handler,
		},
		{
			MethodName: "AssociateID",
			Handler:    _Contacts_AssociateID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "contacts/v1/api.proto",
}

func init() { proto.RegisterFile("contacts/v1/api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x8f, 0x51, 0x4a, 0xc4, 0x30,
	0x14, 0x45, 0x07, 0x94, 0x22, 0xe9, 0x5f, 0x40, 0x3f, 0xe2, 0x87, 0x33, 0x5d, 0x40, 0xc2, 0xe8,
	0x0a, 0x64, 0x66, 0x40, 0x41, 0x11, 0xbb, 0x83, 0xb4, 0x3c, 0x4b, 0xa0, 0x36, 0xb1, 0xef, 0xb5,
	0xe0, 0x32, 0xdc, 0xb1, 0xb4, 0x69, 0x4a, 0x6d, 0xb1, 0xf3, 0x99, 0x7b, 0x4f, 0x0e, 0xf7, 0xb1,
	0xeb, 0xdc, 0x56, 0xa4, 0x73, 0x42, 0xd5, 0xee, 0x95, 0x76, 0x46, 0xba, 0xda, 0x92, 0xe5, 0x71,
	0x88, 0x65, 0xbb, 0x17, 0x62, 0xca, 0x8c, 0x45, 0x0f, 0x8a, 0xdb, 0xc2, 0xda, 0xa2, 0x04, 0xd5,
	0xbf, 0xb2, 0xe6, 0x43, 0xc1, 0xa7, 0xa3, 0x6f, 0x5f, 0xde, 0xff, 0x5c, 0xb0, 0xab, 0xc3, 0xc0,
	0xf3, 0x77, 0x16, 0x1d, 0x6a, 0xd0, 0x04, 0x7c, 0x27, 0x27, 0x76, 0xe9, 0xc3, 0x01, 0x4b, 0xe1,
	0xab, 0x01, 0x24, 0x91, 0xac, 0x21, 0xe8, 0x6c, 0x85, 0x90, 0x6c, 0xf8, 0x89, 0x45, 0x47, 0x28,
	0x61, 0xa1, 0xf4, 0xe1, 0x4c, 0x79, 0x23, 0xfd, 0x54, 0x19, 0xa6, 0xca, 0x53, 0x37, 0x35, 0xd9,
	0xf0, 0x57, 0x76, 0xf9, 0x62, 0x90, 0xf8, 0xf6, 0x8f, 0xa4, 0x8b, 0xc2, 0xf8, 0xe0, 0xd8, 0xad,
	0x10, 0xe3, 0xaa, 0x94, 0xc5, 0x5d, 0xf3, 0x56, 0x9b, 0xc2, 0x54, 0xc8, 0xef, 0x16, 0x7f, 0x86,
	0x26, 0x48, 0xb7, 0xff, 0x03, 0xa3, 0xf3, 0x89, 0xc5, 0x8f, 0x88, 0x36, 0x37, 0x9a, 0xe0, 0xf9,
	0x38, 0x73, 0x4e, 0x9a, 0xb3, 0xc7, 0x66, 0x51, 0x9f, 0x3c, 0xfc, 0x06, 0x00, 0x00, 0xff, 0xff,
	0x38, 0x9c, 0xf2, 0x3d, 0xf9, 0x01, 0x00, 0x00,
}
