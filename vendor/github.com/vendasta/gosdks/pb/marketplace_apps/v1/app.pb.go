// Code generated by protoc-gen-go. DO NOT EDIT.
// source: marketplace_apps/v1/app.proto

package marketplaceapps_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MarketplaceApp_Product_ProductCategories int32

const (
	MarketplaceApp_Product_NOT_SET      MarketplaceApp_Product_ProductCategories = 0
	MarketplaceApp_Product_DIGITAL      MarketplaceApp_Product_ProductCategories = 1
	MarketplaceApp_Product_WEBSITE      MarketplaceApp_Product_ProductCategories = 2
	MarketplaceApp_Product_PRINT        MarketplaceApp_Product_ProductCategories = 3
	MarketplaceApp_Product_YELLOW_PAGES MarketplaceApp_Product_ProductCategories = 4
	MarketplaceApp_Product_RADIO        MarketplaceApp_Product_ProductCategories = 5
	MarketplaceApp_Product_TELEVISION   MarketplaceApp_Product_ProductCategories = 6
	MarketplaceApp_Product_SEM          MarketplaceApp_Product_ProductCategories = 7
	MarketplaceApp_Product_SEO          MarketplaceApp_Product_ProductCategories = 8
	MarketplaceApp_Product_COMBINATION  MarketplaceApp_Product_ProductCategories = 9
	MarketplaceApp_Product_SOCIAL       MarketplaceApp_Product_ProductCategories = 10
	MarketplaceApp_Product_VENDASTA_APP MarketplaceApp_Product_ProductCategories = 11
	MarketplaceApp_Product_OTHER        MarketplaceApp_Product_ProductCategories = 12
	MarketplaceApp_Product_VENDOR_APP   MarketplaceApp_Product_ProductCategories = 13
)

var MarketplaceApp_Product_ProductCategories_name = map[int32]string{
	0:  "NOT_SET",
	1:  "DIGITAL",
	2:  "WEBSITE",
	3:  "PRINT",
	4:  "YELLOW_PAGES",
	5:  "RADIO",
	6:  "TELEVISION",
	7:  "SEM",
	8:  "SEO",
	9:  "COMBINATION",
	10: "SOCIAL",
	11: "VENDASTA_APP",
	12: "OTHER",
	13: "VENDOR_APP",
}
var MarketplaceApp_Product_ProductCategories_value = map[string]int32{
	"NOT_SET":      0,
	"DIGITAL":      1,
	"WEBSITE":      2,
	"PRINT":        3,
	"YELLOW_PAGES": 4,
	"RADIO":        5,
	"TELEVISION":   6,
	"SEM":          7,
	"SEO":          8,
	"COMBINATION":  9,
	"SOCIAL":       10,
	"VENDASTA_APP": 11,
	"OTHER":        12,
	"VENDOR_APP":   13,
}

func (x MarketplaceApp_Product_ProductCategories) String() string {
	return proto.EnumName(MarketplaceApp_Product_ProductCategories_name, int32(x))
}
func (MarketplaceApp_Product_ProductCategories) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{4, 0, 0}
}

type MarketplaceApp_Lmi_LmiCategories int32

const (
	MarketplaceApp_Lmi_NOT_SET                MarketplaceApp_Lmi_LmiCategories = 0
	MarketplaceApp_Lmi_WEBSITE                MarketplaceApp_Lmi_LmiCategories = 1
	MarketplaceApp_Lmi_CONTENT_AND_EXPERIENCE MarketplaceApp_Lmi_LmiCategories = 2
	MarketplaceApp_Lmi_LISTINGS               MarketplaceApp_Lmi_LmiCategories = 3
	MarketplaceApp_Lmi_REPUTATION             MarketplaceApp_Lmi_LmiCategories = 4
	MarketplaceApp_Lmi_SEO                    MarketplaceApp_Lmi_LmiCategories = 5
	MarketplaceApp_Lmi_SOCIAL                 MarketplaceApp_Lmi_LmiCategories = 6
	MarketplaceApp_Lmi_ADVERTISING            MarketplaceApp_Lmi_LmiCategories = 7
)

var MarketplaceApp_Lmi_LmiCategories_name = map[int32]string{
	0: "NOT_SET",
	1: "WEBSITE",
	2: "CONTENT_AND_EXPERIENCE",
	3: "LISTINGS",
	4: "REPUTATION",
	5: "SEO",
	6: "SOCIAL",
	7: "ADVERTISING",
}
var MarketplaceApp_Lmi_LmiCategories_value = map[string]int32{
	"NOT_SET":                0,
	"WEBSITE":                1,
	"CONTENT_AND_EXPERIENCE": 2,
	"LISTINGS":               3,
	"REPUTATION":             4,
	"SEO":                    5,
	"SOCIAL":                 6,
	"ADVERTISING":            7,
}

func (x MarketplaceApp_Lmi_LmiCategories) String() string {
	return proto.EnumName(MarketplaceApp_Lmi_LmiCategories_name, int32(x))
}
func (MarketplaceApp_Lmi_LmiCategories) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{4, 1, 0}
}

// IdentifiedPublicKey The identified public keys are considered "identified" because they have an id/key
// associated with them that identifies a user or purpose for using that particular key instead of the default one,
// for being  able to identify the callers of the API. It could be a backend service, a particular user or admin
// for an app, etc.
type IdentifiedPublicKey struct {
	PublicKeyId string `protobuf:"bytes,1,opt,name=public_key_id,json=publicKeyId" json:"public_key_id,omitempty"`
	PublicKey   string `protobuf:"bytes,2,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
}

func (m *IdentifiedPublicKey) Reset()                    { *m = IdentifiedPublicKey{} }
func (m *IdentifiedPublicKey) String() string            { return proto.CompactTextString(m) }
func (*IdentifiedPublicKey) ProtoMessage()               {}
func (*IdentifiedPublicKey) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *IdentifiedPublicKey) GetPublicKeyId() string {
	if m != nil {
		return m.PublicKeyId
	}
	return ""
}

func (m *IdentifiedPublicKey) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

// Frequently asked questions
type FrequentlyAskedQuestions struct {
	Question string `protobuf:"bytes,1,opt,name=question" json:"question,omitempty"`
	Answer   string `protobuf:"bytes,2,opt,name=answer" json:"answer,omitempty"`
}

func (m *FrequentlyAskedQuestions) Reset()                    { *m = FrequentlyAskedQuestions{} }
func (m *FrequentlyAskedQuestions) String() string            { return proto.CompactTextString(m) }
func (*FrequentlyAskedQuestions) ProtoMessage()               {}
func (*FrequentlyAskedQuestions) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *FrequentlyAskedQuestions) GetQuestion() string {
	if m != nil {
		return m.Question
	}
	return ""
}

func (m *FrequentlyAskedQuestions) GetAnswer() string {
	if m != nil {
		return m.Answer
	}
	return ""
}

// Integration with vendor center
type Integration struct {
	// The public key of the app
	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
	// A list of identified public keys
	IdentifiedPublicKeys []*IdentifiedPublicKey `protobuf:"bytes,2,rep,name=identified_public_keys,json=identifiedPublicKeys" json:"identified_public_keys,omitempty"`
	// Email of contact for app
	ContactEmail string `protobuf:"bytes,3,opt,name=contact_email,json=contactEmail" json:"contact_email,omitempty"`
	// The status of the application
	Approved bool `protobuf:"varint,4,opt,name=approved" json:"approved,omitempty"`
	// The name of the vendor
	Vendor string `protobuf:"bytes,5,opt,name=vendor" json:"vendor,omitempty"`
	// A list of the users in the application
	UserIds []string `protobuf:"bytes,6,rep,name=user_ids,json=userIds" json:"user_ids,omitempty"`
	// Webhook url: purchase_url
	PurchaseWebhookUrl string `protobuf:"bytes,7,opt,name=purchase_webhook_url,json=purchaseWebhookUrl" json:"purchase_webhook_url,omitempty"`
	// Webhook url: addon_purchase_url
	AddonPurchaseWebhookUrl string `protobuf:"bytes,8,opt,name=addon_purchase_webhook_url,json=addonPurchaseWebhookUrl" json:"addon_purchase_webhook_url,omitempty"`
	// Webhook url: user_mod_url
	UserModWebhookUrl string `protobuf:"bytes,9,opt,name=user_mod_webhook_url,json=userModWebhookUrl" json:"user_mod_webhook_url,omitempty"`
	// Webhook url: salestool_url
	SalestoolWebhookUrl string `protobuf:"bytes,10,opt,name=salestool_webhook_url,json=salestoolWebhookUrl" json:"salestool_webhook_url,omitempty"`
	// Webhook url: account_mod_url
	AccountModWebhookUrl string `protobuf:"bytes,11,opt,name=account_mod_webhook_url,json=accountModWebhookUrl" json:"account_mod_webhook_url,omitempty"`
	// Webhook url: logout url
	LogoutWebhookUrl string `protobuf:"bytes,12,opt,name=logout_webhook_url,json=logoutWebhookUrl" json:"logout_webhook_url,omitempty"`
	// Email notifications for fulfillment
	FulfillmentEmail []string `protobuf:"bytes,13,rep,name=fulfillment_email,json=fulfillmentEmail" json:"fulfillment_email,omitempty"`
	// SSO url: Entry point for the application
	EntryUrl string `protobuf:"bytes,14,opt,name=entry_url,json=entryUrl" json:"entry_url,omitempty"`
	// SSO url: Session code generation url
	SessionUrl string `protobuf:"bytes,15,opt,name=session_url,json=sessionUrl" json:"session_url,omitempty"`
	// Service url: get current settings/schema, post updated data
	SettingsUrl string `protobuf:"bytes,16,opt,name=settings_url,json=settingsUrl" json:"settings_url,omitempty"`
	// Reserve Url: for calling out to applications to let them know an activation is coming, but not guaranteed yet
	ReserveIdUrl string `protobuf:"bytes,17,opt,name=reserve_id_url,json=reserveIdUrl" json:"reserve_id_url,omitempty"`
	// Contact Url: webhook url for creating/editing a contact
	ContactWebhookUrl string `protobuf:"bytes,18,opt,name=contact_webhook_url,json=contactWebhookUrl" json:"contact_webhook_url,omitempty"`
}

func (m *Integration) Reset()                    { *m = Integration{} }
func (m *Integration) String() string            { return proto.CompactTextString(m) }
func (*Integration) ProtoMessage()               {}
func (*Integration) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *Integration) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *Integration) GetIdentifiedPublicKeys() []*IdentifiedPublicKey {
	if m != nil {
		return m.IdentifiedPublicKeys
	}
	return nil
}

func (m *Integration) GetContactEmail() string {
	if m != nil {
		return m.ContactEmail
	}
	return ""
}

func (m *Integration) GetApproved() bool {
	if m != nil {
		return m.Approved
	}
	return false
}

func (m *Integration) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *Integration) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

func (m *Integration) GetPurchaseWebhookUrl() string {
	if m != nil {
		return m.PurchaseWebhookUrl
	}
	return ""
}

func (m *Integration) GetAddonPurchaseWebhookUrl() string {
	if m != nil {
		return m.AddonPurchaseWebhookUrl
	}
	return ""
}

func (m *Integration) GetUserModWebhookUrl() string {
	if m != nil {
		return m.UserModWebhookUrl
	}
	return ""
}

func (m *Integration) GetSalestoolWebhookUrl() string {
	if m != nil {
		return m.SalestoolWebhookUrl
	}
	return ""
}

func (m *Integration) GetAccountModWebhookUrl() string {
	if m != nil {
		return m.AccountModWebhookUrl
	}
	return ""
}

func (m *Integration) GetLogoutWebhookUrl() string {
	if m != nil {
		return m.LogoutWebhookUrl
	}
	return ""
}

func (m *Integration) GetFulfillmentEmail() []string {
	if m != nil {
		return m.FulfillmentEmail
	}
	return nil
}

func (m *Integration) GetEntryUrl() string {
	if m != nil {
		return m.EntryUrl
	}
	return ""
}

func (m *Integration) GetSessionUrl() string {
	if m != nil {
		return m.SessionUrl
	}
	return ""
}

func (m *Integration) GetSettingsUrl() string {
	if m != nil {
		return m.SettingsUrl
	}
	return ""
}

func (m *Integration) GetReserveIdUrl() string {
	if m != nil {
		return m.ReserveIdUrl
	}
	return ""
}

func (m *Integration) GetContactWebhookUrl() string {
	if m != nil {
		return m.ContactWebhookUrl
	}
	return ""
}

// Reseller marketing information
type MarketingInformation struct {
	// Reseller marketing information: description
	Description string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	// Reseller marketing information: key selling points
	KeySellingPoints []string `protobuf:"bytes,2,rep,name=key_selling_points,json=keySellingPoints" json:"key_selling_points,omitempty"`
	// Reseller marketing information: faqs
	Faqs []*FrequentlyAskedQuestions `protobuf:"bytes,3,rep,name=faqs" json:"faqs,omitempty"`
	// Reseller marketing information: pdf upload
	Files []string `protobuf:"bytes,4,rep,name=files" json:"files,omitempty"`
}

func (m *MarketingInformation) Reset()                    { *m = MarketingInformation{} }
func (m *MarketingInformation) String() string            { return proto.CompactTextString(m) }
func (*MarketingInformation) ProtoMessage()               {}
func (*MarketingInformation) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *MarketingInformation) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MarketingInformation) GetKeySellingPoints() []string {
	if m != nil {
		return m.KeySellingPoints
	}
	return nil
}

func (m *MarketingInformation) GetFaqs() []*FrequentlyAskedQuestions {
	if m != nil {
		return m.Faqs
	}
	return nil
}

func (m *MarketingInformation) GetFiles() []string {
	if m != nil {
		return m.Files
	}
	return nil
}

// MarketplaceApp is an item that represents a vendor application in the marketplace
type MarketplaceApp struct {
	// The id of the app
	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// The version of the app
	Version int64 `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
	// The name of the app
	Name string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	// Icon for the product
	Icon string `protobuf:"bytes,4,opt,name=icon" json:"icon,omitempty"`
	// Allow white labelling
	AllowWhitelabel bool `protobuf:"varint,5,opt,name=allow_whitelabel,json=allowWhitelabel" json:"allow_whitelabel,omitempty"`
	// The app is currently in development
	InDevelopment bool `protobuf:"varint,6,opt,name=in_development,json=inDevelopment" json:"in_development,omitempty"`
	// Supports a trial state of the application
	TrialSupport bool `protobuf:"varint,7,opt,name=trial_support,json=trialSupport" json:"trial_support,omitempty"`
	// Order form: the product uses order form
	UsesOrderForm bool `protobuf:"varint,8,opt,name=uses_order_form,json=usesOrderForm" json:"uses_order_form,omitempty"`
	// Product information: tagline
	Tagline string `protobuf:"bytes,9,opt,name=tagline" json:"tagline,omitempty"`
	// Product information: sign_in_url
	SignInUrl string `protobuf:"bytes,10,opt,name=sign_in_url,json=signInUrl" json:"sign_in_url,omitempty"`
	// Product information: currency
	Currency string `protobuf:"bytes,11,opt,name=currency" json:"currency,omitempty"`
	// Product information: price stored as cents
	Price int64 `protobuf:"varint,12,opt,name=price" json:"price,omitempty"`
	// Product information: billing_frequency
	BillingFrequency string `protobuf:"bytes,13,opt,name=billing_frequency,json=billingFrequency" json:"billing_frequency,omitempty"`
	// Product information: service_model
	ServiceModel []string `protobuf:"bytes,14,rep,name=service_model,json=serviceModel" json:"service_model,omitempty"`
	// Product information: screenshot
	Screenshot []string `protobuf:"bytes,16,rep,name=screenshot" json:"screenshot,omitempty"`
	// Product information: website_url
	WebsiteUrl string `protobuf:"bytes,17,opt,name=website_url,json=websiteUrl" json:"website_url,omitempty"`
	// Product information: header_image
	HeaderImage string `protobuf:"bytes,18,opt,name=header_image,json=headerImage" json:"header_image,omitempty"`
	// Category of the app
	ProductCategory MarketplaceApp_Product_ProductCategories `protobuf:"varint,19,opt,name=product_category,json=productCategory,enum=marketplaceapps.v1.MarketplaceApp_Product_ProductCategories" json:"product_category,omitempty"`
	// Local marketing index category of the app
	LmiCategories []MarketplaceApp_Lmi_LmiCategories `protobuf:"varint,20,rep,packed,name=lmi_categories,json=lmiCategories,enum=marketplaceapps.v1.MarketplaceApp_Lmi_LmiCategories" json:"lmi_categories,omitempty"`
	// Integration with vendor center
	Integration *Integration `protobuf:"bytes,21,opt,name=integration" json:"integration,omitempty"`
	// Order form fields
	OrderForm *OrderForm `protobuf:"bytes,22,opt,name=order_form,json=orderForm" json:"order_form,omitempty"`
	// Reseller marketing information
	ResellerMarketing *MarketingInformation `protobuf:"bytes,23,opt,name=reseller_marketing,json=resellerMarketing" json:"reseller_marketing,omitempty"`
	// End user marketing information
	EndUserMarketing *MarketingInformation `protobuf:"bytes,24,opt,name=end_user_marketing,json=endUserMarketing" json:"end_user_marketing,omitempty"`
	// A timestamp of when the app was created
	Created *google_protobuf.Timestamp `protobuf:"bytes,25,opt,name=created" json:"created,omitempty"`
	// A timestamp of when the app was last updated
	Updated *google_protobuf.Timestamp `protobuf:"bytes,26,opt,name=updated" json:"updated,omitempty"`
	// Whether or not a partner can negotiate the price of the app
	AllowPriceNegotiation bool `protobuf:"varint,27,opt,name=allow_price_negotiation,json=allowPriceNegotiation" json:"allow_price_negotiation,omitempty"`
	// List of restrictions for the app
	Restrictions *Restrictions `protobuf:"bytes,28,opt,name=restrictions" json:"restrictions,omitempty"`
}

func (m *MarketplaceApp) Reset()                    { *m = MarketplaceApp{} }
func (m *MarketplaceApp) String() string            { return proto.CompactTextString(m) }
func (*MarketplaceApp) ProtoMessage()               {}
func (*MarketplaceApp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *MarketplaceApp) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *MarketplaceApp) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *MarketplaceApp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MarketplaceApp) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *MarketplaceApp) GetAllowWhitelabel() bool {
	if m != nil {
		return m.AllowWhitelabel
	}
	return false
}

func (m *MarketplaceApp) GetInDevelopment() bool {
	if m != nil {
		return m.InDevelopment
	}
	return false
}

func (m *MarketplaceApp) GetTrialSupport() bool {
	if m != nil {
		return m.TrialSupport
	}
	return false
}

func (m *MarketplaceApp) GetUsesOrderForm() bool {
	if m != nil {
		return m.UsesOrderForm
	}
	return false
}

func (m *MarketplaceApp) GetTagline() string {
	if m != nil {
		return m.Tagline
	}
	return ""
}

func (m *MarketplaceApp) GetSignInUrl() string {
	if m != nil {
		return m.SignInUrl
	}
	return ""
}

func (m *MarketplaceApp) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *MarketplaceApp) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MarketplaceApp) GetBillingFrequency() string {
	if m != nil {
		return m.BillingFrequency
	}
	return ""
}

func (m *MarketplaceApp) GetServiceModel() []string {
	if m != nil {
		return m.ServiceModel
	}
	return nil
}

func (m *MarketplaceApp) GetScreenshot() []string {
	if m != nil {
		return m.Screenshot
	}
	return nil
}

func (m *MarketplaceApp) GetWebsiteUrl() string {
	if m != nil {
		return m.WebsiteUrl
	}
	return ""
}

func (m *MarketplaceApp) GetHeaderImage() string {
	if m != nil {
		return m.HeaderImage
	}
	return ""
}

func (m *MarketplaceApp) GetProductCategory() MarketplaceApp_Product_ProductCategories {
	if m != nil {
		return m.ProductCategory
	}
	return MarketplaceApp_Product_NOT_SET
}

func (m *MarketplaceApp) GetLmiCategories() []MarketplaceApp_Lmi_LmiCategories {
	if m != nil {
		return m.LmiCategories
	}
	return nil
}

func (m *MarketplaceApp) GetIntegration() *Integration {
	if m != nil {
		return m.Integration
	}
	return nil
}

func (m *MarketplaceApp) GetOrderForm() *OrderForm {
	if m != nil {
		return m.OrderForm
	}
	return nil
}

func (m *MarketplaceApp) GetResellerMarketing() *MarketingInformation {
	if m != nil {
		return m.ResellerMarketing
	}
	return nil
}

func (m *MarketplaceApp) GetEndUserMarketing() *MarketingInformation {
	if m != nil {
		return m.EndUserMarketing
	}
	return nil
}

func (m *MarketplaceApp) GetCreated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *MarketplaceApp) GetUpdated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *MarketplaceApp) GetAllowPriceNegotiation() bool {
	if m != nil {
		return m.AllowPriceNegotiation
	}
	return false
}

func (m *MarketplaceApp) GetRestrictions() *Restrictions {
	if m != nil {
		return m.Restrictions
	}
	return nil
}

// Product categories [deprecated]
type MarketplaceApp_Product struct {
}

func (m *MarketplaceApp_Product) Reset()                    { *m = MarketplaceApp_Product{} }
func (m *MarketplaceApp_Product) String() string            { return proto.CompactTextString(m) }
func (*MarketplaceApp_Product) ProtoMessage()               {}
func (*MarketplaceApp_Product) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4, 0} }

// Local marketing index categories
type MarketplaceApp_Lmi struct {
}

func (m *MarketplaceApp_Lmi) Reset()                    { *m = MarketplaceApp_Lmi{} }
func (m *MarketplaceApp_Lmi) String() string            { return proto.CompactTextString(m) }
func (*MarketplaceApp_Lmi) ProtoMessage()               {}
func (*MarketplaceApp_Lmi) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4, 1} }

func init() {
	proto.RegisterType((*IdentifiedPublicKey)(nil), "marketplaceapps.v1.IdentifiedPublicKey")
	proto.RegisterType((*FrequentlyAskedQuestions)(nil), "marketplaceapps.v1.FrequentlyAskedQuestions")
	proto.RegisterType((*Integration)(nil), "marketplaceapps.v1.Integration")
	proto.RegisterType((*MarketingInformation)(nil), "marketplaceapps.v1.MarketingInformation")
	proto.RegisterType((*MarketplaceApp)(nil), "marketplaceapps.v1.MarketplaceApp")
	proto.RegisterType((*MarketplaceApp_Product)(nil), "marketplaceapps.v1.MarketplaceApp.Product")
	proto.RegisterType((*MarketplaceApp_Lmi)(nil), "marketplaceapps.v1.MarketplaceApp.Lmi")
	proto.RegisterEnum("marketplaceapps.v1.MarketplaceApp_Product_ProductCategories", MarketplaceApp_Product_ProductCategories_name, MarketplaceApp_Product_ProductCategories_value)
	proto.RegisterEnum("marketplaceapps.v1.MarketplaceApp_Lmi_LmiCategories", MarketplaceApp_Lmi_LmiCategories_name, MarketplaceApp_Lmi_LmiCategories_value)
}

func init() { proto.RegisterFile("marketplace_apps/v1/app.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 1418 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x56, 0xdd, 0x72, 0xdb, 0xc6,
	0x15, 0x2e, 0x4d, 0x89, 0x3f, 0x87, 0x3f, 0x82, 0x56, 0x7f, 0x30, 0x5d, 0xdb, 0x2c, 0xeb, 0xba,
	0xec, 0xd4, 0x43, 0xd5, 0xaa, 0xdb, 0x9b, 0xfa, 0xa2, 0xb4, 0x04, 0xab, 0x98, 0x52, 0x24, 0x03,
	0xd2, 0x92, 0x33, 0x99, 0x0c, 0x06, 0x02, 0x0e, 0xa9, 0x1d, 0x81, 0x58, 0x78, 0x17, 0x94, 0x86,
	0x8f, 0x90, 0xcb, 0xdc, 0xe7, 0x59, 0xf2, 0x08, 0x79, 0x80, 0xbc, 0x4b, 0x66, 0x32, 0xbb, 0x00,
	0x48, 0x30, 0xa2, 0x27, 0xc9, 0x85, 0x46, 0x3c, 0xdf, 0xf7, 0x9d, 0xb3, 0x38, 0xbb, 0xe7, 0x5b,
	0x00, 0x9e, 0xce, 0x1c, 0x7e, 0x8b, 0x51, 0xe8, 0x3b, 0x2e, 0xda, 0x4e, 0x18, 0x8a, 0xe3, 0xbb,
	0xd7, 0xc7, 0x4e, 0x18, 0x76, 0x42, 0xce, 0x22, 0x46, 0x48, 0x86, 0x96, 0x6c, 0xe7, 0xee, 0x75,
	0xe3, 0xf9, 0x94, 0xb1, 0xa9, 0x8f, 0xc7, 0x4a, 0x71, 0x3d, 0x9f, 0x1c, 0x47, 0x74, 0x86, 0x22,
	0x72, 0x66, 0x49, 0x52, 0xe3, 0xc5, 0xa6, 0x9a, 0x8c, 0x7b, 0xc8, 0xed, 0x09, 0xe3, 0xb3, 0x44,
	0xf5, 0x72, 0x93, 0x8a, 0xa3, 0x88, 0x38, 0x75, 0x23, 0xca, 0x02, 0x11, 0xeb, 0x5a, 0x1f, 0x61,
	0xcf, 0xf4, 0x30, 0x88, 0xe8, 0x84, 0xa2, 0x37, 0x9c, 0x5f, 0xfb, 0xd4, 0xfd, 0x3f, 0x2e, 0x48,
	0x0b, 0x6a, 0xa1, 0x0a, 0xec, 0x5b, 0x5c, 0xd8, 0xd4, 0xd3, 0x73, 0xcd, 0x5c, 0xbb, 0x6c, 0x55,
	0xc2, 0x54, 0x61, 0x7a, 0xe4, 0x29, 0xc0, 0x4a, 0xa3, 0x3f, 0x52, 0x82, 0xf2, 0x52, 0xd0, 0xea,
	0x83, 0xfe, 0x9e, 0xe3, 0xa7, 0x39, 0x06, 0x91, 0xbf, 0xe8, 0x8a, 0x5b, 0xf4, 0xbe, 0x98, 0xa3,
	0x50, 0x6b, 0x93, 0x06, 0x94, 0x3e, 0x25, 0x41, 0x52, 0x79, 0x19, 0x93, 0x43, 0x28, 0x38, 0x81,
	0xb8, 0x47, 0x9e, 0x94, 0x4c, 0xa2, 0xd6, 0x77, 0x05, 0xa8, 0x98, 0x41, 0x84, 0x53, 0xee, 0x28,
	0xdd, 0xfa, 0xf2, 0xb9, 0x5f, 0x2c, 0x4f, 0xbe, 0x86, 0x43, 0xba, 0x6c, 0xcc, 0x5e, 0x29, 0x85,
	0xfe, 0xa8, 0x99, 0x6f, 0x57, 0x4e, 0xfe, 0xda, 0x79, 0xb8, 0xf9, 0x9d, 0x0d, 0x5b, 0x61, 0xed,
	0xd3, 0x87, 0xa0, 0x20, 0x7f, 0x86, 0x9a, 0xcb, 0x82, 0xc8, 0x71, 0x23, 0x1b, 0x67, 0x0e, 0xf5,
	0xf5, 0xbc, 0x7a, 0x80, 0x6a, 0x02, 0x1a, 0x12, 0x93, 0x6d, 0x3a, 0x61, 0xc8, 0xd9, 0x1d, 0x7a,
	0xfa, 0x56, 0x33, 0xd7, 0x2e, 0x59, 0xcb, 0x58, 0xb6, 0x79, 0x87, 0x81, 0xc7, 0xb8, 0xbe, 0x1d,
	0xb7, 0x19, 0x47, 0xe4, 0x31, 0x94, 0xe6, 0x02, 0xb9, 0x4d, 0x3d, 0xa1, 0x17, 0x9a, 0xf9, 0x76,
	0xd9, 0x2a, 0xca, 0xd8, 0xf4, 0x04, 0xf9, 0x07, 0xec, 0x87, 0x73, 0xee, 0xde, 0x38, 0x02, 0xed,
	0x7b, 0xbc, 0xbe, 0x61, 0xec, 0xd6, 0x9e, 0x73, 0x5f, 0x2f, 0xaa, 0x02, 0x24, 0xe5, 0xae, 0x62,
	0xea, 0x03, 0xf7, 0xc9, 0x7f, 0xa0, 0xe1, 0x78, 0x1e, 0x0b, 0xec, 0x8d, 0x79, 0x25, 0x95, 0x77,
	0xa4, 0x14, 0xc3, 0x87, 0xc9, 0xc7, 0xb0, 0xaf, 0x9e, 0x64, 0xc6, 0xbc, 0xb5, 0xb4, 0xb2, 0x4a,
	0xdb, 0x95, 0xdc, 0x05, 0xf3, 0x32, 0x09, 0x27, 0x70, 0x20, 0x1c, 0x1f, 0x45, 0xc4, 0x98, 0xbf,
	0x96, 0x01, 0x2a, 0x63, 0x6f, 0x49, 0x66, 0x72, 0xfe, 0x05, 0x47, 0x8e, 0xeb, 0xb2, 0x79, 0x10,
	0x3d, 0x58, 0xa7, 0xa2, 0xb2, 0xf6, 0x13, 0x7a, 0x7d, 0xa9, 0x57, 0x40, 0x7c, 0x36, 0x65, 0xf3,
	0x68, 0x2d, 0xa3, 0xaa, 0x32, 0xb4, 0x98, 0xc9, 0xa8, 0xff, 0x0e, 0xbb, 0x93, 0xb9, 0x3f, 0xa1,
	0xbe, 0x3f, 0xc3, 0x20, 0x3d, 0xb0, 0x9a, 0xda, 0x5c, 0x2d, 0x43, 0xc4, 0x87, 0xf6, 0x04, 0xca,
	0x18, 0x44, 0x7c, 0xa1, 0x2a, 0xd6, 0xe3, 0xe1, 0x54, 0x80, 0xac, 0xf4, 0x1c, 0x2a, 0x02, 0x85,
	0xa0, 0x2c, 0x50, 0xf4, 0x8e, 0xa2, 0x21, 0x81, 0xa4, 0xe0, 0x4f, 0x50, 0x15, 0x18, 0x45, 0x34,
	0x98, 0x0a, 0xa5, 0xd0, 0x62, 0xdf, 0xa4, 0x98, 0x94, 0xbc, 0x80, 0x3a, 0x47, 0x81, 0xfc, 0x0e,
	0x6d, 0xea, 0x29, 0xd1, 0x6e, 0x3c, 0x3b, 0x09, 0x6a, 0x7a, 0x52, 0xd5, 0x81, 0xbd, 0x74, 0xc0,
	0xb2, 0x2d, 0x92, 0x78, 0xf3, 0x13, 0x6a, 0xd5, 0x63, 0xeb, 0xfb, 0x1c, 0xec, 0x5f, 0xa8, 0x89,
	0xa6, 0xc1, 0xd4, 0x0c, 0xe4, 0x55, 0x10, 0xfb, 0xa4, 0x09, 0x15, 0x0f, 0x85, 0xcb, 0x69, 0x98,
	0xb1, 0x5b, 0x16, 0x92, 0x9b, 0x29, 0x5d, 0x2e, 0xd0, 0xf7, 0x69, 0x30, 0xb5, 0x43, 0x46, 0x83,
	0x28, 0xb6, 0x49, 0xd9, 0xd2, 0x6e, 0x71, 0x31, 0x8a, 0x89, 0xa1, 0xc2, 0xc9, 0x7f, 0x61, 0x6b,
	0xe2, 0x7c, 0x12, 0x7a, 0x5e, 0xd9, 0xe8, 0xd5, 0x26, 0x1b, 0x7d, 0xce, 0xf7, 0x96, 0xca, 0x24,
	0xfb, 0xb0, 0x3d, 0xa1, 0x3e, 0x0a, 0x7d, 0x4b, 0x2d, 0x11, 0x07, 0xad, 0x9f, 0xaa, 0x50, 0xbf,
	0x58, 0xd5, 0xea, 0x86, 0x21, 0x39, 0x80, 0x82, 0x13, 0x86, 0xab, 0xeb, 0x67, 0xdb, 0x09, 0x43,
	0xd3, 0x23, 0x3a, 0x14, 0xef, 0x90, 0xcb, 0x1d, 0x57, 0x57, 0x44, 0xde, 0x4a, 0x43, 0x42, 0x60,
	0x2b, 0x70, 0x66, 0x98, 0x98, 0x51, 0xfd, 0x96, 0x18, 0x75, 0x59, 0xa0, 0x0c, 0x58, 0xb6, 0xd4,
	0x6f, 0xf2, 0x37, 0xd0, 0x1c, 0xdf, 0x67, 0xf7, 0xf6, 0xfd, 0x0d, 0x8d, 0xd0, 0x77, 0xae, 0xd1,
	0x57, 0x36, 0x2c, 0x59, 0x3b, 0x0a, 0xbf, 0x5a, 0xc2, 0xe4, 0x2f, 0x50, 0xa7, 0x81, 0xed, 0xe1,
	0x1d, 0xfa, 0x2c, 0x94, 0x53, 0xa2, 0x17, 0x94, 0xb0, 0x46, 0x83, 0xb3, 0x15, 0x28, 0xef, 0x83,
	0x88, 0x53, 0xc7, 0xb7, 0xc5, 0x3c, 0x0c, 0x19, 0x8f, 0x94, 0x29, 0x4b, 0x56, 0x55, 0x81, 0xa3,
	0x18, 0x23, 0x2f, 0x61, 0x67, 0x2e, 0x50, 0xd8, 0xab, 0xdb, 0x5a, 0x79, 0xb0, 0x64, 0xd5, 0x24,
	0x3c, 0x90, 0xe8, 0x7b, 0xc6, 0x67, 0xb2, 0xc1, 0xc8, 0x99, 0xfa, 0x34, 0xc0, 0xc4, 0x6c, 0x69,
	0x48, 0x9e, 0x41, 0x45, 0xd0, 0x69, 0x60, 0xd3, 0x20, 0x63, 0xac, 0xb2, 0x84, 0x4c, 0x35, 0x7e,
	0x0d, 0x28, 0xb9, 0x73, 0xce, 0x31, 0x70, 0x17, 0x89, 0x7f, 0x96, 0xb1, 0xdc, 0xf6, 0x90, 0x53,
	0x17, 0x95, 0x4d, 0xf2, 0x56, 0x1c, 0x48, 0x6f, 0x5c, 0xd3, 0xf8, 0xe0, 0x27, 0xf1, 0xb1, 0xb9,
	0x0b, 0xbd, 0x16, 0x1b, 0x29, 0x21, 0xde, 0xa7, 0xb8, 0xec, 0x52, 0x8e, 0x28, 0x75, 0x51, 0xba,
	0x15, 0xa5, 0x3f, 0xe4, 0x09, 0x56, 0x13, 0xf0, 0x42, 0x62, 0xe4, 0x19, 0x80, 0x70, 0x39, 0x62,
	0x20, 0x6e, 0x58, 0xa4, 0x6b, 0x4a, 0x91, 0x41, 0xa4, 0x87, 0xee, 0xf1, 0x5a, 0xd0, 0x08, 0x33,
	0xc3, 0x0f, 0x09, 0x94, 0x78, 0xe8, 0x06, 0x1d, 0xb9, 0x45, 0x74, 0xe6, 0x4c, 0x31, 0x99, 0xf9,
	0x4a, 0x8c, 0x99, 0x12, 0x22, 0x53, 0xd0, 0x42, 0xce, 0xbc, 0xb9, 0x1b, 0xd9, 0xae, 0x13, 0xe1,
	0x94, 0xf1, 0x85, 0xbe, 0xd7, 0xcc, 0xb5, 0xeb, 0x27, 0x6f, 0x37, 0x0d, 0xe4, 0xfa, 0x5c, 0x75,
	0x86, 0x71, 0x6a, 0xfa, 0xff, 0x34, 0xae, 0x40, 0x51, 0x58, 0x3b, 0xe1, 0x1a, 0xb4, 0x20, 0x5f,
	0x41, 0xdd, 0x9f, 0xd1, 0x74, 0x11, 0x8a, 0x42, 0xdf, 0x6f, 0xe6, 0xdb, 0xf5, 0x93, 0x37, 0xbf,
	0x61, 0x99, 0xde, 0x8c, 0xca, 0xbf, 0x4c, 0xf9, 0x9a, 0x9f, 0x0d, 0x49, 0x17, 0x2a, 0x74, 0xf5,
	0x46, 0xd3, 0x0f, 0x9a, 0xb9, 0x76, 0xe5, 0xe4, 0xf9, 0xc6, 0x17, 0xd3, 0x4a, 0x66, 0x65, 0x73,
	0xc8, 0x5b, 0x80, 0xcc, 0x34, 0x1d, 0xaa, 0x0a, 0x4f, 0x37, 0x55, 0x58, 0x4e, 0x97, 0x55, 0x66,
	0xcb, 0x41, 0xbb, 0x02, 0x22, 0x2f, 0x1d, 0xdf, 0x97, 0xd7, 0x7c, 0x7a, 0x79, 0xe8, 0x47, 0xaa,
	0x4a, 0xfb, 0xf3, 0x1d, 0xae, 0xdf, 0x30, 0xd6, 0x6e, 0x5a, 0x63, 0xc9, 0x92, 0x4b, 0x20, 0x18,
	0x78, 0x76, 0xfc, 0xfe, 0x58, 0x16, 0xd6, 0x7f, 0x67, 0x61, 0x0d, 0x03, 0xef, 0x83, 0xc8, 0xd6,
	0x7d, 0x03, 0x45, 0x97, 0xa3, 0x13, 0xa1, 0xa7, 0x3f, 0x56, 0xc5, 0x1a, 0x9d, 0xf8, 0x7b, 0xa9,
	0x93, 0x7e, 0x2f, 0x75, 0xc6, 0xe9, 0xf7, 0x92, 0x95, 0x4a, 0x65, 0xd6, 0x3c, 0xf4, 0x54, 0x56,
	0xe3, 0xd7, 0xb3, 0x12, 0x29, 0xf9, 0x37, 0x1c, 0xc5, 0x97, 0x84, 0x32, 0x8a, 0x1d, 0xe0, 0x94,
	0x45, 0x34, 0x3e, 0xa9, 0x27, 0xca, 0xb5, 0x07, 0x8a, 0x1e, 0x4a, 0xb6, 0xbf, 0x22, 0xc9, 0x19,
	0x54, 0xb3, 0x1f, 0x5a, 0xfa, 0x1f, 0xd5, 0x92, 0xcd, 0x4d, 0x5d, 0x5b, 0x19, 0x9d, 0xb5, 0x96,
	0xd5, 0xf8, 0x31, 0x07, 0xc5, 0x64, 0x3e, 0x5b, 0x3f, 0xe4, 0x60, 0xf7, 0xc1, 0xac, 0x92, 0x0a,
	0x14, 0xfb, 0x83, 0xb1, 0x3d, 0x32, 0xc6, 0xda, 0x1f, 0x64, 0x70, 0x66, 0x9e, 0x9b, 0xe3, 0x6e,
	0x4f, 0xcb, 0xc9, 0xe0, 0xca, 0x78, 0x37, 0x32, 0xc7, 0x86, 0xf6, 0x88, 0x94, 0x61, 0x7b, 0x68,
	0x99, 0xfd, 0xb1, 0x96, 0x27, 0x1a, 0x54, 0xbf, 0x34, 0x7a, 0xbd, 0xc1, 0x95, 0x3d, 0xec, 0x9e,
	0x1b, 0x23, 0x6d, 0x4b, 0x92, 0x56, 0xf7, 0xcc, 0x1c, 0x68, 0xdb, 0xa4, 0x0e, 0x30, 0x36, 0x7a,
	0xc6, 0xa5, 0x39, 0x32, 0x07, 0x7d, 0xad, 0x40, 0x8a, 0x90, 0x1f, 0x19, 0x17, 0x5a, 0x31, 0xfe,
	0x31, 0xd0, 0x4a, 0x64, 0x07, 0x2a, 0xa7, 0x83, 0x8b, 0x77, 0x66, 0xbf, 0x3b, 0x96, 0x92, 0x32,
	0x01, 0x28, 0x8c, 0x06, 0xa7, 0x66, 0xb7, 0xa7, 0x81, 0xac, 0x7d, 0x69, 0xf4, 0xcf, 0xba, 0xa3,
	0x71, 0xd7, 0xee, 0x0e, 0x87, 0x5a, 0x45, 0xd6, 0x1e, 0x8c, 0xff, 0x67, 0x58, 0x5a, 0x55, 0xd6,
	0x96, 0xe4, 0xc0, 0x52, 0x54, 0xad, 0xf1, 0x6d, 0x0e, 0xf2, 0xbd, 0x19, 0x6d, 0x7d, 0x93, 0x83,
	0xda, 0x9a, 0x43, 0x1e, 0x34, 0x95, 0xf6, 0x91, 0x23, 0x0d, 0x38, 0x3c, 0x1d, 0xf4, 0xc7, 0x46,
	0x7f, 0x6c, 0x77, 0xfb, 0x67, 0xb6, 0xf1, 0x71, 0x68, 0x58, 0xa6, 0xd1, 0x3f, 0x95, 0x3d, 0x56,
	0xa1, 0xd4, 0x33, 0x47, 0x63, 0xb3, 0x7f, 0x3e, 0xd2, 0xf2, 0x72, 0x35, 0xcb, 0x18, 0x7e, 0x18,
	0xc7, 0x8f, 0xb9, 0x95, 0x36, 0xb0, 0x9d, 0x79, 0xde, 0x82, 0x6c, 0xa6, 0x7b, 0x76, 0x69, 0x58,
	0x63, 0x73, 0x64, 0xf6, 0xcf, 0xb5, 0xe2, 0x75, 0x41, 0xcd, 0xc2, 0x3f, 0x7f, 0x0e, 0x00, 0x00,
	0xff, 0xff, 0x90, 0x2e, 0x24, 0xe4, 0xb4, 0x0b, 0x00, 0x00,
}
