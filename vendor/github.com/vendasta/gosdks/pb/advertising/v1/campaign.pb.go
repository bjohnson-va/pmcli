// Code generated by protoc-gen-go. DO NOT EDIT.
// source: advertising/v1/campaign.proto

package advertising_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CampaignStatus_Status int32

const (
	CampaignStatus_ORDER_RECEIVED      CampaignStatus_Status = 0
	CampaignStatus_WAITING_ON_CUSTOMER CampaignStatus_Status = 1
	CampaignStatus_BUILDING            CampaignStatus_Status = 2
	CampaignStatus_LIVE                CampaignStatus_Status = 3
	CampaignStatus_COMPLETED           CampaignStatus_Status = 4
)

var CampaignStatus_Status_name = map[int32]string{
	0: "ORDER_RECEIVED",
	1: "WAITING_ON_CUSTOMER",
	2: "BUILDING",
	3: "LIVE",
	4: "COMPLETED",
}
var CampaignStatus_Status_value = map[string]int32{
	"ORDER_RECEIVED":      0,
	"WAITING_ON_CUSTOMER": 1,
	"BUILDING":            2,
	"LIVE":                3,
	"COMPLETED":           4,
}

func (x CampaignStatus_Status) String() string {
	return proto.EnumName(CampaignStatus_Status_name, int32(x))
}
func (CampaignStatus_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0, 0} }

// Represents the states a campaign could exist in
type CampaignStatus struct {
}

func (m *CampaignStatus) Reset()                    { *m = CampaignStatus{} }
func (m *CampaignStatus) String() string            { return proto.CompactTextString(m) }
func (*CampaignStatus) ProtoMessage()               {}
func (*CampaignStatus) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

// Represents a campaign
type Campaign struct {
	CampaignId string                      `protobuf:"bytes,1,opt,name=campaign_id,json=campaignId" json:"campaign_id,omitempty"`
	BusinessId string                      `protobuf:"bytes,2,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	Status     CampaignStatus_Status       `protobuf:"varint,3,opt,name=status,enum=advertising.v1.CampaignStatus_Status" json:"status,omitempty"`
	OrderDate  *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=order_date,json=orderDate" json:"order_date,omitempty"`
	StartDate  *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=start_date,json=startDate" json:"start_date,omitempty"`
	EndDate    *google_protobuf1.Timestamp `protobuf:"bytes,6,opt,name=end_date,json=endDate" json:"end_date,omitempty"`
}

func (m *Campaign) Reset()                    { *m = Campaign{} }
func (m *Campaign) String() string            { return proto.CompactTextString(m) }
func (*Campaign) ProtoMessage()               {}
func (*Campaign) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *Campaign) GetCampaignId() string {
	if m != nil {
		return m.CampaignId
	}
	return ""
}

func (m *Campaign) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *Campaign) GetStatus() CampaignStatus_Status {
	if m != nil {
		return m.Status
	}
	return CampaignStatus_ORDER_RECEIVED
}

func (m *Campaign) GetOrderDate() *google_protobuf1.Timestamp {
	if m != nil {
		return m.OrderDate
	}
	return nil
}

func (m *Campaign) GetStartDate() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *Campaign) GetEndDate() *google_protobuf1.Timestamp {
	if m != nil {
		return m.EndDate
	}
	return nil
}

// Get a campaign by id
type CampaignGetRequest struct {
	CampaignId string `protobuf:"bytes,1,opt,name=campaign_id,json=campaignId" json:"campaign_id,omitempty"`
}

func (m *CampaignGetRequest) Reset()                    { *m = CampaignGetRequest{} }
func (m *CampaignGetRequest) String() string            { return proto.CompactTextString(m) }
func (*CampaignGetRequest) ProtoMessage()               {}
func (*CampaignGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *CampaignGetRequest) GetCampaignId() string {
	if m != nil {
		return m.CampaignId
	}
	return ""
}

// Returns a campaign
type CampaignGetResponse struct {
	Campaign *Campaign `protobuf:"bytes,1,opt,name=campaign" json:"campaign,omitempty"`
}

func (m *CampaignGetResponse) Reset()                    { *m = CampaignGetResponse{} }
func (m *CampaignGetResponse) String() string            { return proto.CompactTextString(m) }
func (*CampaignGetResponse) ProtoMessage()               {}
func (*CampaignGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *CampaignGetResponse) GetCampaign() *Campaign {
	if m != nil {
		return m.Campaign
	}
	return nil
}

// Get all campaigns for a business
type CampaignListRequest struct {
	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// Options for how to page the response for this request
	PagingOptions *PagedRequestOptions `protobuf:"bytes,2,opt,name=paging_options,json=pagingOptions" json:"paging_options,omitempty"`
}

func (m *CampaignListRequest) Reset()                    { *m = CampaignListRequest{} }
func (m *CampaignListRequest) String() string            { return proto.CompactTextString(m) }
func (*CampaignListRequest) ProtoMessage()               {}
func (*CampaignListRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *CampaignListRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *CampaignListRequest) GetPagingOptions() *PagedRequestOptions {
	if m != nil {
		return m.PagingOptions
	}
	return nil
}

// List of campaigns
type CampaignListResponse struct {
	Campaigns []*Campaign `protobuf:"bytes,1,rep,name=campaigns" json:"campaigns,omitempty"`
	// Metadata about the paging
	PagingMetadata *PagedResponseMetadata `protobuf:"bytes,2,opt,name=paging_metadata,json=pagingMetadata" json:"paging_metadata,omitempty"`
}

func (m *CampaignListResponse) Reset()                    { *m = CampaignListResponse{} }
func (m *CampaignListResponse) String() string            { return proto.CompactTextString(m) }
func (*CampaignListResponse) ProtoMessage()               {}
func (*CampaignListResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *CampaignListResponse) GetCampaigns() []*Campaign {
	if m != nil {
		return m.Campaigns
	}
	return nil
}

func (m *CampaignListResponse) GetPagingMetadata() *PagedResponseMetadata {
	if m != nil {
		return m.PagingMetadata
	}
	return nil
}

// Get all campaigns for given campaign ids
type CampaignGetMultiRequest struct {
	CampaignIds []string `protobuf:"bytes,1,rep,name=campaign_ids,json=campaignIds" json:"campaign_ids,omitempty"`
}

func (m *CampaignGetMultiRequest) Reset()                    { *m = CampaignGetMultiRequest{} }
func (m *CampaignGetMultiRequest) String() string            { return proto.CompactTextString(m) }
func (*CampaignGetMultiRequest) ProtoMessage()               {}
func (*CampaignGetMultiRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *CampaignGetMultiRequest) GetCampaignIds() []string {
	if m != nil {
		return m.CampaignIds
	}
	return nil
}

// Returns a list of campaigns
type CampaignGetMultiResponse struct {
	Campaigns []*Campaign `protobuf:"bytes,1,rep,name=campaigns" json:"campaigns,omitempty"`
}

func (m *CampaignGetMultiResponse) Reset()                    { *m = CampaignGetMultiResponse{} }
func (m *CampaignGetMultiResponse) String() string            { return proto.CompactTextString(m) }
func (*CampaignGetMultiResponse) ProtoMessage()               {}
func (*CampaignGetMultiResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *CampaignGetMultiResponse) GetCampaigns() []*Campaign {
	if m != nil {
		return m.Campaigns
	}
	return nil
}

// Cursor and has more flag for paging response
type PagedResponseMetadata struct {
	// A cursor that can be provided to retrieve the next page of results
	NextCursor string `protobuf:"bytes,1,opt,name=next_cursor,json=nextCursor" json:"next_cursor,omitempty"`
	// Whether or not more results exist
	HasMore bool `protobuf:"varint,2,opt,name=has_more,json=hasMore" json:"has_more,omitempty"`
}

func (m *PagedResponseMetadata) Reset()                    { *m = PagedResponseMetadata{} }
func (m *PagedResponseMetadata) String() string            { return proto.CompactTextString(m) }
func (*PagedResponseMetadata) ProtoMessage()               {}
func (*PagedResponseMetadata) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *PagedResponseMetadata) GetNextCursor() string {
	if m != nil {
		return m.NextCursor
	}
	return ""
}

func (m *PagedResponseMetadata) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

// Cursor and page size for paging request
type PagedRequestOptions struct {
	// cursor can be passed to retrieve the next page of results keyed by the cursor
	Cursor string `protobuf:"bytes,1,opt,name=cursor" json:"cursor,omitempty"`
	// page_size specifies the number of items to return in the next page
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *PagedRequestOptions) Reset()                    { *m = PagedRequestOptions{} }
func (m *PagedRequestOptions) String() string            { return proto.CompactTextString(m) }
func (*PagedRequestOptions) ProtoMessage()               {}
func (*PagedRequestOptions) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *PagedRequestOptions) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *PagedRequestOptions) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func init() {
	proto.RegisterType((*CampaignStatus)(nil), "advertising.v1.CampaignStatus")
	proto.RegisterType((*Campaign)(nil), "advertising.v1.Campaign")
	proto.RegisterType((*CampaignGetRequest)(nil), "advertising.v1.CampaignGetRequest")
	proto.RegisterType((*CampaignGetResponse)(nil), "advertising.v1.CampaignGetResponse")
	proto.RegisterType((*CampaignListRequest)(nil), "advertising.v1.CampaignListRequest")
	proto.RegisterType((*CampaignListResponse)(nil), "advertising.v1.CampaignListResponse")
	proto.RegisterType((*CampaignGetMultiRequest)(nil), "advertising.v1.CampaignGetMultiRequest")
	proto.RegisterType((*CampaignGetMultiResponse)(nil), "advertising.v1.CampaignGetMultiResponse")
	proto.RegisterType((*PagedResponseMetadata)(nil), "advertising.v1.PagedResponseMetadata")
	proto.RegisterType((*PagedRequestOptions)(nil), "advertising.v1.PagedRequestOptions")
	proto.RegisterEnum("advertising.v1.CampaignStatus_Status", CampaignStatus_Status_name, CampaignStatus_Status_value)
}

func init() { proto.RegisterFile("advertising/v1/campaign.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 580 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x52, 0xdd, 0x6e, 0xd3, 0x3c,
	0x18, 0xfe, 0xd2, 0xf6, 0xeb, 0x92, 0xb7, 0x5b, 0xa9, 0x5c, 0x60, 0x61, 0x08, 0xad, 0x04, 0x4d,
	0xea, 0x51, 0xaa, 0x15, 0x86, 0x84, 0x04, 0x07, 0xd0, 0x46, 0x55, 0x46, 0x7f, 0x26, 0xb7, 0x1b,
	0x27, 0x48, 0x91, 0xbb, 0x98, 0xcc, 0xd2, 0x9a, 0x84, 0xd8, 0xa9, 0xd0, 0x0e, 0xb9, 0x10, 0xae,
	0x83, 0xcb, 0x43, 0x89, 0x63, 0xda, 0xb2, 0x8d, 0x1e, 0x70, 0xd4, 0xfa, 0xf5, 0xf3, 0xbc, 0x7e,
	0x7e, 0x02, 0xcf, 0x88, 0xbf, 0xa4, 0x89, 0x60, 0x9c, 0x85, 0x41, 0x67, 0x79, 0xdc, 0xb9, 0x24,
	0x8b, 0x98, 0xb0, 0x20, 0xb4, 0xe3, 0x24, 0x12, 0x11, 0xaa, 0xaf, 0x5d, 0xdb, 0xcb, 0xe3, 0x83,
	0xc3, 0x20, 0x8a, 0x82, 0x6b, 0xda, 0xc9, 0x6f, 0xe7, 0xe9, 0x97, 0x8e, 0x60, 0x0b, 0xca, 0x05,
	0x59, 0xc4, 0x92, 0x60, 0x85, 0x50, 0xef, 0x15, 0x2b, 0xa6, 0x82, 0x88, 0x94, 0x5b, 0x9f, 0xa1,
	0x2a, 0xff, 0x21, 0x04, 0xf5, 0x09, 0xee, 0x3b, 0xd8, 0xc3, 0x4e, 0xcf, 0x71, 0x2f, 0x9c, 0x7e,
	0xe3, 0x3f, 0xb4, 0x0f, 0xcd, 0x4f, 0xef, 0xdd, 0x99, 0x3b, 0x1e, 0x78, 0x93, 0xb1, 0xd7, 0x3b,
	0x9f, 0xce, 0x26, 0x23, 0x07, 0x37, 0x34, 0xb4, 0x0b, 0xfa, 0x87, 0x73, 0x77, 0xd8, 0x77, 0xc7,
	0x83, 0x46, 0x09, 0xe9, 0x50, 0x19, 0xba, 0x17, 0x4e, 0xa3, 0x8c, 0xf6, 0xc0, 0xe8, 0x4d, 0x46,
	0x67, 0x43, 0x67, 0xe6, 0xf4, 0x1b, 0x15, 0xeb, 0x67, 0x09, 0x74, 0xf5, 0x20, 0x3a, 0x84, 0x9a,
	0xd2, 0xef, 0x31, 0xdf, 0xd4, 0x5a, 0x5a, 0xdb, 0xc0, 0xa0, 0x46, 0xae, 0x9f, 0x01, 0xe6, 0x29,
	0x67, 0x21, 0xe5, 0x3c, 0x03, 0x94, 0x24, 0x40, 0x8d, 0x5c, 0x1f, 0xbd, 0x83, 0x2a, 0xcf, 0xc5,
	0x9a, 0xe5, 0x96, 0xd6, 0xae, 0x77, 0x8f, 0xec, 0xcd, 0x00, 0xec, 0x4d, 0x73, 0xb6, 0xfc, 0xc1,
	0x05, 0x09, 0xbd, 0x01, 0x88, 0x12, 0x9f, 0x26, 0x9e, 0x4f, 0x04, 0x35, 0x2b, 0x2d, 0xad, 0x5d,
	0xeb, 0x1e, 0xd8, 0x32, 0x33, 0x5b, 0x65, 0x66, 0xcf, 0x54, 0x66, 0xd8, 0xc8, 0xd1, 0x7d, 0x22,
	0x68, 0x46, 0xe5, 0x82, 0x24, 0x42, 0x52, 0xff, 0xdf, 0x4e, 0xcd, 0xd1, 0x39, 0xf5, 0x04, 0x74,
	0x1a, 0xfa, 0x92, 0x58, 0xdd, 0x4a, 0xdc, 0xa1, 0xa1, 0x9f, 0xd1, 0xac, 0x13, 0x40, 0xca, 0xcd,
	0x80, 0x0a, 0x4c, 0xbf, 0xa6, 0x94, 0x8b, 0xad, 0x19, 0x5a, 0x1f, 0xa1, 0xb9, 0x41, 0xe3, 0x71,
	0x14, 0x72, 0x8a, 0x5e, 0x81, 0xae, 0x40, 0x39, 0xa9, 0xd6, 0x35, 0xef, 0xcb, 0x0e, 0xff, 0x46,
	0x5a, 0xdf, 0xb5, 0xd5, 0xb6, 0x21, 0xe3, 0xeb, 0x2a, 0xd6, 0x8b, 0xd2, 0x6e, 0x15, 0x75, 0x0a,
	0xf5, 0x98, 0x04, 0x2c, 0x0c, 0xbc, 0x28, 0x16, 0x2c, 0x0a, 0x79, 0x5e, 0x66, 0xad, 0xfb, 0xe2,
	0xcf, 0x47, 0xcf, 0x48, 0x40, 0xfd, 0x62, 0xed, 0x44, 0x42, 0xf1, 0x9e, 0xa4, 0x16, 0x47, 0xeb,
	0x87, 0x06, 0x0f, 0x37, 0x45, 0x14, 0x9e, 0x5e, 0x83, 0xa1, 0x94, 0x72, 0x53, 0x6b, 0x95, 0xff,
	0x6a, 0x6a, 0x05, 0x45, 0x63, 0x78, 0x50, 0x88, 0x5b, 0x50, 0x41, 0x7c, 0x22, 0x48, 0xa1, 0xee,
	0xe8, 0x1e, 0x75, 0xf2, 0xbd, 0x51, 0x01, 0xc6, 0x85, 0x35, 0x75, 0xb6, 0xde, 0xc2, 0xfe, 0x5a,
	0xe4, 0xa3, 0xf4, 0x5a, 0x30, 0x15, 0xd4, 0x73, 0xd8, 0x5d, 0xab, 0x4b, 0xaa, 0x34, 0x70, 0x6d,
	0xd5, 0x17, 0xb7, 0x30, 0x98, 0xb7, 0xd9, 0xff, 0xe6, 0xd0, 0x9a, 0xc2, 0xa3, 0x3b, 0xa5, 0x67,
	0xc5, 0x85, 0xf4, 0x9b, 0xf0, 0x2e, 0xd3, 0x84, 0x47, 0x89, 0x2a, 0x2e, 0x1b, 0xf5, 0xf2, 0x09,
	0x7a, 0x02, 0xfa, 0x15, 0xe1, 0xde, 0x22, 0x4a, 0x68, 0x1e, 0x8a, 0x8e, 0x77, 0xae, 0x08, 0x1f,
	0x45, 0x09, 0xb5, 0x4e, 0xa1, 0x79, 0x47, 0x5b, 0xe8, 0x31, 0x54, 0x37, 0xb6, 0x15, 0x27, 0xf4,
	0x14, 0x8c, 0x98, 0x04, 0xd4, 0xe3, 0xec, 0x46, 0xae, 0x2a, 0x63, 0x3d, 0x1b, 0x4c, 0xd9, 0x0d,
	0x9d, 0x57, 0xf3, 0x2f, 0xff, 0xe5, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc9, 0xec, 0x1c, 0xe9,
	0xe0, 0x04, 0x00, 0x00,
}
