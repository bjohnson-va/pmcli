syntax = "proto3";

package business.v1;
option java_package = "com.vendasta.business.v1";
option java_outer_classname = "BusinessProtos";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "field_mask.proto";

// Geo stores a geographic point for marking locations
message Geo {
    // The latitude of the point is the north/south angle the point makes with
    // the equator it ranges from -90° at the south pole, through 0° at the 
    // equator, and to +90° at the north pole
	double latitude = 1;
    // The longitude of the point is the west/east angle the point makes with
    // the Prime Meridian (The Royal Observatory in Greenwich, England) it
    // ranges from -180°, though 0° at the Royal Observatory, and to +180°.
    // Note that there is a discontinuity at ±180° as they describe the same
    // angle.
	double longitude = 2;
}

// A representation of a single product on a business
message Product {
    // Whether the product is a trial account or not
    bool is_trial = 1;
    // Tags on the product
    repeated string tags = 2;
    // The marketplace app id or the legacy product id of the product
    string marketplace_app_id = 3;
    // The product-specific Account ID
    string account_id = 4;
    // The date on which the product expires
    google.protobuf.Timestamp expiry = 5;
}

// A set of identifiers associated with a business.  Note that they are
// optional, so Market ID and Partner ID are not included in this structure
message ExternalIdentifiers {
    // An indicator of where this account was created.  SDK clients may choose
    // to override this value
    string origin = 1;
    // Reserved for external customer use.  Allows SDK clients to assign an id
    // to a business that is meaningful in their external system.
    string customer_identifier = 2;
    // Tags are used for grouping businesses and list construction.  There is a
    // limit of 16 tags per business. Note that tags are not used to indicate
    // list membership.
    repeated string tags = 3;
    // The ids of the lists that this business is a part of.
    repeated string action_lists = 4;
    // The service category of the business.  This is important for listing
    // services and helping to refine what rich data is relevant to a particular
    // business.  Up to 3 categories can be assigned from the taxonomy.
    repeated string taxonomy_ids = 5;
    // The ID of the salesperson associated with this business.
    string sales_person_id = 6;
}

// A set of Social Media URLs associated with the business.  These should be the
// publically accessible URLs.
message SocialURLs {
    // The business's Google+ Page.  Should not be a Google+ User profile.
    string googleplus_url = 1;
    // The business's LinkedIn Company Page.  Should not be a LinkedIn personal
    // profile
    string linkedin_url = 2;
    // The business's FourSquare Location Page.
    string foursquare_url = 3;
    // The business's Twitter Page.  Twitter does not differentiate between
    // users and businesses.
    string twitter_url = 4;
    // The business's Facebook Page.  The page should be public, and should 
    // not be a facebook user.
    string facebook_url = 5;
    // A RSS feed URL for content produced by the business.  Usually a blog
    // or podcast feed.
    string rss_url = 6;
    // The URL for the business's youtube channel.
    string youtube_url = 7;
    // The URL for the business's instagram account.  Instagram does not
    // differentiate between users and businesses.
    string instagram_url = 8;
    // The URL for the business's Pinterest account.
    string pinterest_url = 9;
}

// Stores information about the hours that a business is open in the form of
// a list of time-spans describing the business's hours.
message HoursOfOperation {
    enum DayOfWeek {
        MONDAY = 0;
        TUESDAY = 1;
        WEDNESDAY = 2;
        THURSDAY = 3;
        FRIDAY = 4;
        SATURDAY = 5;
        SUNDAY = 6;
        PUBLIC_HOLIDAYS = 7;
    }
    // Stores information about a particular timespan that the business
    // is open
    message Span {
        // The days of the week (a list of days as text) this span applies to
        repeated DayOfWeek day_of_week = 1;
        // A description of when the business opens in military time:
        // "16:40" is 4:30 PM?
        string opens = 2;
        // A descriptoin of when the business closes in military time:
        // "13:00" is 1:00 PM?
        string closes = 3;
        // A description accompanying the span.  Use this field for 
        // describing holiday hours?
        string description = 4;
    }
    // The list of time spans that describe the business's hours
    repeated Span hours_of_operation = 1;
}

// Stores data specific to a business in the "Medical" Taxonomy
message HealthCareProfessionalInformation {
    enum Gender {
        NotSpecified = 0;
        Female = 1;
        Male = 2;
        Other = 3;
    }
    // The birth date of the practitioner. Some patients have an age 
    // preference when selecting a practitioner
    google.protobuf.Timestamp date_of_birth = 1;
    // Direct contact email for the practitioner
    string email = 2;
    // A list of free-form locations where the practitioner performed their
    // fellowships if applicable
    repeated string fellowship = 3;
    // The first name of the practitioner
    string first_name = 4;
    // The gender of the practitioner. Some patients have a gender
    // preference when selecting a practitioner
    Gender gender = 5;
    // The initials of the practitioner
    string initials = 6;
    // A free-form text list of insurance providers accepted by
    // the practitioner
    repeated string insurances_accepted = 7;
    // Indicates whether the practitioner is accepting new patients.  Can be 
    // null, indicating that they did not specify.
    google.protobuf.BoolValue is_taking_patients = 8;
    //The last name of the practitioner
    string last_name = 9;
    // The practitioner's medical licence number, assigned by their 
    // particular certification authority.
    string medical_license_number = 10;
    // The 10-digit NPI number is assigned to all health practitioners by the
    // Centers for Medicare and Medicaid Services (CMS).
    string national_provider_identifier = 11;
    // Which operating office this location refers to
    string office = 12;
    // A list of free-form text credentials held by the practitioner
    repeated string professional_credential = 13;
    // A list of free-form locations where the practitioner performed their
    // residencies if applicable.
    repeated string residency = 14;
    // A list of free-form text schools the practitioner obtained educational
    // certifications through
    repeated string school = 15;
    // A list of free-form specialties of the practitioner
    repeated string specialty = 16;
    // The title used by the practitioner to describe themselves
    string standardized_title = 17;
    // The license number issued by the practitioner's state
    string state_license = 18;
}

// CustomField allows partners to extend the metrics stored on a business to
// suit their own use cases
message CustomField {
    // The name of the custom field should be meaningful to users
    string name = 1;
    // The value of the custom field for a particular business
    string value = 2;
}

// RichData stores data on businesses that is more in-depth than the basic data
// much of this data is specific to certain types of business.  This means that
// proper selection of taxonomy ids is important to effectively using RichData.
message RichData {
    enum PaymentMethods {
        AMERICAN_EXPRESS = 0;
        ANDROID_PAY = 1;
        APPLE_PAY = 2;
        CASH = 3;
        CHECK = 4;
        DEBIT = 5;
        DINERS_CLUB = 6;
        DISCOVER = 7;
        MASTERCARD = 8;
        PAYPAL = 9;
        SAMSUNG_PAY = 10;
        STORE_CARD = 11;
        TRAVELERS_CHECK = 12;
        VISA = 13;
    }

    // The toll-free phone number associated with a business.  This is stored
    // separately than basic NAP data because many listing sites don't allow
    // a toll-free number to be used as a primary phone number, but they often
    // do allow it to be captured separately.
    string toll_free_number = 1;
    // The long-form description of the business.
    string description = 2;
    // The short description of the business or "tagline"
    string short_description = 3;
    // A free-form text list of services offered by the business
    repeated string services_offered = 4;
    // A free-form text list of brands carried by the business
    repeated string brands_carried = 5;
    // A landmark near the business that is helpful to customers trying to
    // locate the business (ie. The Penhorn Mall)
    string landmark = 6;
    // A list of payment methods accepted by the business
    repeated PaymentMethods payment_methods = 7;
    // A set of custom fields on a business specific to a partner
    repeated CustomField custom_fields = 8;
    // RichData specific to business in the "Medical" Taxonomy
    HealthCareProfessionalInformation health_care_professional_information = 9;
}

// A set of basic information about a business that is common to almost all 
// types of business.  Most of this information is required to construct a
// good online business listing.
message BasicData {
    // The operating name of the business
    string company_name = 1;
    // The street address of the location
    string address = 2;
    // The city of the location
    string city = 3;
    // The state/province/territory of the location
    string state = 4;
    // The zip/postalcode of the location
    string zip = 5;
    // The country of the location
    string country = 6;
    // The website of the location or business
    string website = 7;
    // A list of local phone numbers used by the business.  These can
    // not be toll-free numbers
    repeated string work_number = 8;
    // A list of call-tracking nubmers used by the business.  These are
    // generally used for advertising attribution.
    repeated string call_tracking_number = 9;
    // The geo point describing the location
    Geo location = 10;
    // The timezone of the location in text form (ie. "MT" or "ET")
    string timezone = 11;
}

// A set of information about the administration of this business. This information is only
// available to admins, and not to the local business owner
message Administration {
    // Notes about this business
    string notes = 1;
}

// Describes all of the details about a single location of a business.  For
// multi-location businesses, one Business for each location in the platform
// is required.
message Business {
    // A unique business identifier.  This is a universally unique ID that is
    // used throughout the platform to identify a single business location.
    string business_id = 1;
    // The partner ID that this business has a relationship
    string partner_id = 2;
    // The market ID that the business has a relationship with.  Note that
    // "" can be a valid market ID.
    string market_id = 3;
    // Stores the basic data on the account.  This field should never be
    // null.
    BasicData basic_data = 4;
    // Indicates whether the business has been suspended due to billing
    // issues.
    bool suspended = 5;
    // When the business was deleted.  If the the timestamp is zero, then the
    // business has not been deleted.
    google.protobuf.Timestamp deleted = 6;
    // When the business was first created.  This field is automatically
    // assigned by the system and can not be specified on creation or
    // update operations.
    google.protobuf.Timestamp created = 7;
    // When any fields on the business were last modified.  This field i9s
    // automatically assigned by the system and can not be specified on
    // creation or update operations.
    google.protobuf.Timestamp updated = 8;

    // A list of attributes that have been inferred.  This field uses a
    // syntax equivalent to the FieldMask.
    repeated string inferred_attributes = 9;

    // A list of the products currently provisioned for the business
    repeated Product products = 11;

    // External Identifiers on the account.  Because these fields are all
    // optional, this field can be null, but any good business will have
    // a taxonomhy specified, so in practice it should not be null.
    ExternalIdentifiers external_identifiers = 12;
    // The list of social URLs associated with the business.  This field
    // can be null.
    SocialURLs social_urls = 13;
    // The hours of operation of the business.  This field can be null.
    HoursOfOperation hours_of_operation = 14;

    // Extra data about the business.  Much of this data may be specific
    // to certain types of business.  This field can be null.
    RichData rich_data = 15;

    // Data about the administration of this business. This field can be null.
    Administration administration = 16;
}
 
message ProjectionFilter {
    // Controls if products is returned on the business
    bool products = 1;
    // Controls if external_identifiers is returned on the business
    bool external_identifiers = 2;
    // Controls if social_urls is returned on the business
    bool social_urls = 3;
    // Controls if hours_of_operation is returned on the business
    bool hours_of_operation = 4;
    // Controls if contact_details is returned on the business
    bool contact_details = 5;
    // Controls if rich_data is returned on the business
    bool rich_data = 6;
}

// Update operation allows updating a specific piece of the business
message UpdateOperation {
    oneof operation {
        // Specifying this operation will update the business' basic data
        BasicData basic_data = 1;
        // Specifying this operation will update the business' social urls
        SocialURLs social_urls = 2;
        // Specifying this operation will update the business' hours of operation
        HoursOfOperation hours_of_operation = 3;
        // Specifying this operation will update the business' administration details
        Administration administration = 4;
    }
    FieldMask field_mask = 20;
}

message CreateRequest {
    Business business = 1;
}

message CreateResponse {
    string business_id = 1;
}

message GetMultiRequest {
    repeated string business_ids = 1;
    ProjectionFilter projection_filter = 2;
}

message GetMultiResponse {
    message BusinessContainer {
        Business business = 1;
    }
    repeated BusinessContainer businesss = 1;
}

message UpdateRequest {
    string business_id = 1;
    repeated UpdateOperation update_operations = 2;
}

service BusinessService {
    // Create is used to create a new business.  Clients must specify the
    // partner ID and market ID that they want the business to be created
    // in.  Their IAM identity must have the appropriate policy setup for
    // this to be allowed.  Note that products can not be provisioned with
    // this RPC; a business must be created with this RPC first, and then
    // products can be provisioned on it.
    rpc Create(CreateRequest) returns (CreateResponse);

    // GetMulti is used to get Business(es) by their Business ID.  It
    // currently does not support Customer IDs. In a future release this
    // RPC will support lookup by either Busines ID or Customer ID. This
    // RPC also does not provide any search functionality.
    rpc GetMulti(GetMultiRequest) returns (GetMultiResponse);

    // Update is used to update specified fields of their business
    rpc Update(UpdateRequest) returns (google.protobuf.Empty);
}