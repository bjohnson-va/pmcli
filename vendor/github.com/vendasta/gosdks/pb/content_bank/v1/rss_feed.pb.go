// Code generated by protoc-gen-go. DO NOT EDIT.
// source: content_bank/v1/rss_feed.proto

package content_bank_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// RssFeed is a url pointing to content
type RssFeed struct {
	// A unique id
	PartnerId string `protobuf:"bytes,1,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// A unique id within the partner
	MarketId string `protobuf:"bytes,2,opt,name=market_id,json=marketId" json:"market_id,omitempty"`
	// URL of the feed
	FeedUrl string `protobuf:"bytes,3,opt,name=feed_url,json=feedUrl" json:"feed_url,omitempty"`
	// Name of the RSS feed
	Name string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	// The last date that feed was updated
	UpdatedDatetime *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=updated_datetime,json=updatedDatetime" json:"updated_datetime,omitempty"`
}

func (m *RssFeed) Reset()                    { *m = RssFeed{} }
func (m *RssFeed) String() string            { return proto.CompactTextString(m) }
func (*RssFeed) ProtoMessage()               {}
func (*RssFeed) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *RssFeed) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *RssFeed) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *RssFeed) GetFeedUrl() string {
	if m != nil {
		return m.FeedUrl
	}
	return ""
}

func (m *RssFeed) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RssFeed) GetUpdatedDatetime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.UpdatedDatetime
	}
	return nil
}

// An individual piece of content from an RSS feed
type RssFeedItem struct {
	// A unique id
	PartnerId string `protobuf:"bytes,1,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// A unique id within the partner
	MarketId string `protobuf:"bytes,2,opt,name=market_id,json=marketId" json:"market_id,omitempty"`
	// URL of the item
	Permalink string `protobuf:"bytes,3,opt,name=permalink" json:"permalink,omitempty"`
	// URL of the parent feed
	FeedUrl string `protobuf:"bytes,4,opt,name=feed_url,json=feedUrl" json:"feed_url,omitempty"`
	// Time the feed content was posted
	PostedDate *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=posted_date,json=postedDate" json:"posted_date,omitempty"`
	// Author of the item
	Author string `protobuf:"bytes,6,opt,name=author" json:"author,omitempty"`
	// Summary of the item
	Summary string `protobuf:"bytes,7,opt,name=summary" json:"summary,omitempty"`
	// Title of the item
	Title string `protobuf:"bytes,8,opt,name=title" json:"title,omitempty"`
	// The datetime a post was scheduled from this item
	ScheduledDatetime *google_protobuf1.Timestamp `protobuf:"bytes,9,opt,name=scheduled_datetime,json=scheduledDatetime" json:"scheduled_datetime,omitempty"`
}

func (m *RssFeedItem) Reset()                    { *m = RssFeedItem{} }
func (m *RssFeedItem) String() string            { return proto.CompactTextString(m) }
func (*RssFeedItem) ProtoMessage()               {}
func (*RssFeedItem) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *RssFeedItem) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *RssFeedItem) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *RssFeedItem) GetPermalink() string {
	if m != nil {
		return m.Permalink
	}
	return ""
}

func (m *RssFeedItem) GetFeedUrl() string {
	if m != nil {
		return m.FeedUrl
	}
	return ""
}

func (m *RssFeedItem) GetPostedDate() *google_protobuf1.Timestamp {
	if m != nil {
		return m.PostedDate
	}
	return nil
}

func (m *RssFeedItem) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *RssFeedItem) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *RssFeedItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *RssFeedItem) GetScheduledDatetime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.ScheduledDatetime
	}
	return nil
}

func init() {
	proto.RegisterType((*RssFeed)(nil), "content_bank.v1.RssFeed")
	proto.RegisterType((*RssFeedItem)(nil), "content_bank.v1.RssFeedItem")
}

func init() { proto.RegisterFile("content_bank/v1/rss_feed.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x50, 0x3d, 0x4f, 0xc3, 0x30,
	0x14, 0x54, 0x4a, 0xdb, 0x34, 0xaf, 0x43, 0xc1, 0x42, 0xc8, 0x94, 0xaf, 0xaa, 0x53, 0xa7, 0x44,
	0x85, 0x91, 0x15, 0x90, 0xb2, 0x56, 0x30, 0x47, 0x6e, 0xfd, 0xda, 0x46, 0x8d, 0xe3, 0xc8, 0x76,
	0x2a, 0xf1, 0xdb, 0xf8, 0x17, 0xfc, 0x22, 0x14, 0xdb, 0x81, 0x76, 0x02, 0x89, 0xc5, 0xf2, 0xdd,
	0xbd, 0xb3, 0xef, 0x1e, 0xdc, 0xae, 0x64, 0x69, 0xb0, 0x34, 0xd9, 0x92, 0x95, 0xbb, 0x64, 0x3f,
	0x4f, 0x94, 0xd6, 0xd9, 0x1a, 0x91, 0xc7, 0x95, 0x92, 0x46, 0x92, 0xd1, 0xa1, 0x1e, 0xef, 0xe7,
	0xe3, 0xbb, 0x8d, 0x94, 0x9b, 0x02, 0x13, 0x2b, 0x2f, 0xeb, 0x75, 0x62, 0x72, 0x81, 0xda, 0x30,
	0x51, 0x39, 0xc7, 0xf4, 0x23, 0x80, 0x70, 0xa1, 0xf5, 0x0b, 0x22, 0x27, 0x37, 0x00, 0x15, 0x53,
	0xa6, 0x44, 0x95, 0xe5, 0x9c, 0x06, 0x93, 0x60, 0x16, 0x2d, 0x22, 0xcf, 0xa4, 0x9c, 0x5c, 0x41,
	0x24, 0x98, 0xda, 0xa1, 0x69, 0xd4, 0x8e, 0x55, 0x07, 0x8e, 0x48, 0x39, 0xb9, 0x84, 0x41, 0x93,
	0x23, 0xab, 0x55, 0x41, 0x4f, 0xac, 0x16, 0x36, 0xf8, 0x4d, 0x15, 0x84, 0x40, 0xb7, 0x64, 0x02,
	0x69, 0xd7, 0xd2, 0xf6, 0x4e, 0x9e, 0xe1, 0xb4, 0xae, 0x38, 0x33, 0xc8, 0xb3, 0xe6, 0x6c, 0x52,
	0xd1, 0xde, 0x24, 0x98, 0x0d, 0xef, 0xc7, 0xb1, 0x8b, 0x1c, 0xb7, 0x91, 0xe3, 0xd7, 0x36, 0xf2,
	0x62, 0xe4, 0x3d, 0x4f, 0xde, 0x32, 0xfd, 0xec, 0xc0, 0xd0, 0xa7, 0x4f, 0x0d, 0x8a, 0x7f, 0x35,
	0xb8, 0x86, 0xa8, 0x42, 0x25, 0x58, 0x91, 0x97, 0x3b, 0x5f, 0xe1, 0x87, 0x38, 0xea, 0xd7, 0x3d,
	0xee, 0xf7, 0x08, 0xc3, 0x4a, 0xea, 0xb6, 0xca, 0x1f, 0x6a, 0x80, 0x1b, 0x6f, 0x5a, 0x90, 0x0b,
	0xe8, 0xb3, 0xda, 0x6c, 0xa5, 0xa2, 0x7d, 0xfb, 0xaa, 0x47, 0x84, 0x42, 0xa8, 0x6b, 0x21, 0x98,
	0x7a, 0xa7, 0xa1, 0xfb, 0xce, 0x43, 0x72, 0x0e, 0x3d, 0x93, 0x9b, 0x02, 0xe9, 0xc0, 0xf2, 0x0e,
	0x90, 0x14, 0x88, 0x5e, 0x6d, 0x91, 0xd7, 0xc5, 0xe1, 0x4a, 0xa3, 0x5f, 0xb3, 0x9c, 0x7d, 0xbb,
	0xda, 0xa5, 0x2e, 0xfb, 0x76, 0xec, 0xe1, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x95, 0xeb, 0x72, 0x37,
	0x6d, 0x02, 0x00, 0x00,
}
