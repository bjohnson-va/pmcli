syntax = "proto3";

package gmb.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

enum Period {
    DAY = 0;
    WEEK = 1;
    MONTH = 2;
}

enum MetricType {
    // Dummy default value
    NONE = 0;
    // The number of times the listing was shown when searching for it directly.
    QUERIES_DIRECT = 1;
    // The number of times the listing was shown as a result of a categorical search (for example, restaurant "restaurant").
    QUERIES_INDIRECT = 2;
    // The number of times the listing was viewed on Google Maps.
    VIEWS_MAPS = 3;
    // The number of times the listing was viewed on Google Search.
    VIEWS_SEARCH = 4;
    // The number of times the website was clicked on the listing.
    ACTIONS_WEBSITE = 5;
    // The number of times the phone number was clicked on the listing.
    ACTIONS_PHONE = 6;
    // The number of times driving directions were requested for the listing.
    ACTIONS_DRIVING_DIRECTIONS = 7;
}

message Metric {
    int64 value = 1;
    TimeDimension time_dimension = 2;
}

message Insight {
    MetricType metric_type = 1;
    // The summation of the individual metrics over the period this Insight was requested with.
    Metric total_value = 2;
    // How the total value has changed since the last period this Insight was requested with.
    Metric delta_value = 3;
    // The metric over time, sorted time-descending
    repeated Metric metrics = 4;
}

message TimeDimension {
    // we may also want to support https://developers.google.com/my-business/reference/rest/Shared.Types/DayOfWeek and https://developers.google.com/my-business/reference/rest/Shared.Types/TimeOfDay
    oneof time {
        TimePeriod time_range = 1;
    }
}

message TimePeriod {
    google.protobuf.Timestamp start_time = 1;
    Period period = 2;
}

message ReplaceAccountLocationRequest {
    string account_group_id = 1;
    string google_account_id = 2;
    string google_location_id = 3;
}

message DeleteAccountLocationRequest {
    string account_group_id = 1;
}

message SyncDataRequest {
    // The raw json from GMB insights -- intentionally untouched to allow for GMB to get this json on it's own in the future
    // The json contains which google account/location ids it is for
    string gmb_insights_json = 1;
    // The time when the data was requested
    google.protobuf.Timestamp requested_at = 2;
}

message GetTimeRangeRequest {
    // The group ids which form the path to the group whose data is being requested
    repeated string group_path_nodes = 1;
    // Optional account group id at the specified group
    string account_group_id = 2;

    google.protobuf.Timestamp start_time = 3;
    google.protobuf.Timestamp end_time = 4;
    // The types of metrics desired in the response. If nothing is provided, all metric types are returned.
    repeated MetricType metric_types = 5;
}

// A resource in GMB is either a group, or an account group
message ResourceId {
    // If requesting data for a group, this will be the path to that group
    repeated string group_path_nodes = 1;
    // If requesting data for a group, this will be blank
    // If requesting data for an account group, this will be set, and the group at group path should contain this
    // account group as a member, used for authentication
    string account_group_id = 2;
}

message GetMultiTimeRangeRequest {
    // The list of ResourceId, which are either groups or account groups
    repeated ResourceId resource_ids = 1;

    google.protobuf.Timestamp start_time = 2;
    google.protobuf.Timestamp end_time = 3;

    // The types of metrics desired in the response. If nothing is provided, all metric types are returned.
    repeated MetricType metric_types = 4;

    // Delta is the difference between the total in the requested time range, and the previous, equal sized time range.
    // If there is not an equal sized previous time range of possible GMB data, delta will not be returned
    bool delta = 5;
    // Total is the total for a metric in the requested time range
    bool total = 6;
    // Over time is the values over time for the metric -- the resolution and aggregation strategy is decided by the service
    bool over_time = 7;
}

message InsightsResponse {
    // Insight per requested metric type
    repeated Insight insights = 1;
}

message GetMultiTimeRangeResponse {
    message InsightsContainer {
        InsightsResponse insights = 1;
    }
    repeated InsightsContainer resource_insights = 1;
}

service Account {
    // Creates or Replace the specified account group's stored GMB account/location association
    rpc ReplaceAccountLocation(ReplaceAccountLocationRequest) returns (google.protobuf.Empty) {}

    // Deletes the specified account group's stored GMB account/location association
    rpc DeleteAccountLocation(DeleteAccountLocationRequest) returns (google.protobuf.Empty) {}
}

service Insights {
    rpc GetTimeRange(GetTimeRangeRequest) returns (InsightsResponse) {}
    rpc GetMultiTimeRange(GetMultiTimeRangeRequest) returns (GetMultiTimeRangeResponse) {}
}

// This service is intended solely for core to replicate insight data it has retrieved with the GMB service
service InsightsSync {
    rpc SyncData(SyncDataRequest) returns (google.protobuf.Empty) {}
}