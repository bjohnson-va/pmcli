// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google_my_business/v1/api.proto

/*
Package gmb_v1 is a generated protocol buffer package.

It is generated from these files:
	google_my_business/v1/api.proto

It has these top-level messages:
	Metric
	Insight
	TimeDimension
	TimePeriod
	ReplaceAccountLocationRequest
	DeleteAccountLocationRequest
	SyncDataRequest
	GetTimeRangeRequest
	ResourceId
	GetMultiTimeRangeRequest
	InsightsResponse
	GetMultiTimeRangeResponse
*/
package gmb_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Period int32

const (
	Period_DAY   Period = 0
	Period_WEEK  Period = 1
	Period_MONTH Period = 2
)

var Period_name = map[int32]string{
	0: "DAY",
	1: "WEEK",
	2: "MONTH",
}
var Period_value = map[string]int32{
	"DAY":   0,
	"WEEK":  1,
	"MONTH": 2,
}

func (x Period) String() string {
	return proto.EnumName(Period_name, int32(x))
}
func (Period) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MetricType int32

const (
	// Dummy default value
	MetricType_NONE MetricType = 0
	// The number of times the listing was shown when searching for it directly.
	MetricType_QUERIES_DIRECT MetricType = 1
	// The number of times the listing was shown as a result of a categorical search (for example, restaurant "restaurant").
	MetricType_QUERIES_INDIRECT MetricType = 2
	// The number of times the listing was viewed on Google Maps.
	MetricType_VIEWS_MAPS MetricType = 3
	// The number of times the listing was viewed on Google Search.
	MetricType_VIEWS_SEARCH MetricType = 4
	// The number of times the website was clicked on the listing.
	MetricType_ACTIONS_WEBSITE MetricType = 5
	// The number of times the phone number was clicked on the listing.
	MetricType_ACTIONS_PHONE MetricType = 6
	// The number of times driving directions were requested for the listing.
	MetricType_ACTIONS_DRIVING_DIRECTIONS MetricType = 7
)

var MetricType_name = map[int32]string{
	0: "NONE",
	1: "QUERIES_DIRECT",
	2: "QUERIES_INDIRECT",
	3: "VIEWS_MAPS",
	4: "VIEWS_SEARCH",
	5: "ACTIONS_WEBSITE",
	6: "ACTIONS_PHONE",
	7: "ACTIONS_DRIVING_DIRECTIONS",
}
var MetricType_value = map[string]int32{
	"NONE":                       0,
	"QUERIES_DIRECT":             1,
	"QUERIES_INDIRECT":           2,
	"VIEWS_MAPS":                 3,
	"VIEWS_SEARCH":               4,
	"ACTIONS_WEBSITE":            5,
	"ACTIONS_PHONE":              6,
	"ACTIONS_DRIVING_DIRECTIONS": 7,
}

func (x MetricType) String() string {
	return proto.EnumName(MetricType_name, int32(x))
}
func (MetricType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Metric struct {
	Value         int64          `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	TimeDimension *TimeDimension `protobuf:"bytes,2,opt,name=time_dimension,json=timeDimension" json:"time_dimension,omitempty"`
}

func (m *Metric) Reset()                    { *m = Metric{} }
func (m *Metric) String() string            { return proto.CompactTextString(m) }
func (*Metric) ProtoMessage()               {}
func (*Metric) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Metric) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Metric) GetTimeDimension() *TimeDimension {
	if m != nil {
		return m.TimeDimension
	}
	return nil
}

type Insight struct {
	MetricType MetricType `protobuf:"varint,1,opt,name=metric_type,json=metricType,enum=gmb.v1.MetricType" json:"metric_type,omitempty"`
	// The summation of the individual metrics over the period this Insight was requested with.
	TotalValue *Metric `protobuf:"bytes,2,opt,name=total_value,json=totalValue" json:"total_value,omitempty"`
	// How the total value has changed since the last period this Insight was requested with.
	DeltaValue *Metric `protobuf:"bytes,3,opt,name=delta_value,json=deltaValue" json:"delta_value,omitempty"`
	// The metric over time, sorted time-descending
	Metrics []*Metric `protobuf:"bytes,4,rep,name=metrics" json:"metrics,omitempty"`
}

func (m *Insight) Reset()                    { *m = Insight{} }
func (m *Insight) String() string            { return proto.CompactTextString(m) }
func (*Insight) ProtoMessage()               {}
func (*Insight) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Insight) GetMetricType() MetricType {
	if m != nil {
		return m.MetricType
	}
	return MetricType_NONE
}

func (m *Insight) GetTotalValue() *Metric {
	if m != nil {
		return m.TotalValue
	}
	return nil
}

func (m *Insight) GetDeltaValue() *Metric {
	if m != nil {
		return m.DeltaValue
	}
	return nil
}

func (m *Insight) GetMetrics() []*Metric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type TimeDimension struct {
	// we may also want to support https://developers.google.com/my-business/reference/rest/Shared.Types/DayOfWeek and https://developers.google.com/my-business/reference/rest/Shared.Types/TimeOfDay
	//
	// Types that are valid to be assigned to Time:
	//	*TimeDimension_TimeRange
	Time isTimeDimension_Time `protobuf_oneof:"time"`
}

func (m *TimeDimension) Reset()                    { *m = TimeDimension{} }
func (m *TimeDimension) String() string            { return proto.CompactTextString(m) }
func (*TimeDimension) ProtoMessage()               {}
func (*TimeDimension) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isTimeDimension_Time interface {
	isTimeDimension_Time()
}

type TimeDimension_TimeRange struct {
	TimeRange *TimePeriod `protobuf:"bytes,1,opt,name=time_range,json=timeRange,oneof"`
}

func (*TimeDimension_TimeRange) isTimeDimension_Time() {}

func (m *TimeDimension) GetTime() isTimeDimension_Time {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *TimeDimension) GetTimeRange() *TimePeriod {
	if x, ok := m.GetTime().(*TimeDimension_TimeRange); ok {
		return x.TimeRange
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TimeDimension) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TimeDimension_OneofMarshaler, _TimeDimension_OneofUnmarshaler, _TimeDimension_OneofSizer, []interface{}{
		(*TimeDimension_TimeRange)(nil),
	}
}

func _TimeDimension_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TimeDimension)
	// time
	switch x := m.Time.(type) {
	case *TimeDimension_TimeRange:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TimeRange); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TimeDimension.Time has unexpected type %T", x)
	}
	return nil
}

func _TimeDimension_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TimeDimension)
	switch tag {
	case 1: // time.time_range
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TimePeriod)
		err := b.DecodeMessage(msg)
		m.Time = &TimeDimension_TimeRange{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TimeDimension_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TimeDimension)
	// time
	switch x := m.Time.(type) {
	case *TimeDimension_TimeRange:
		s := proto.Size(x.TimeRange)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type TimePeriod struct {
	StartTime *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	Period    Period                      `protobuf:"varint,2,opt,name=period,enum=gmb.v1.Period" json:"period,omitempty"`
}

func (m *TimePeriod) Reset()                    { *m = TimePeriod{} }
func (m *TimePeriod) String() string            { return proto.CompactTextString(m) }
func (*TimePeriod) ProtoMessage()               {}
func (*TimePeriod) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *TimePeriod) GetStartTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *TimePeriod) GetPeriod() Period {
	if m != nil {
		return m.Period
	}
	return Period_DAY
}

type ReplaceAccountLocationRequest struct {
	AccountGroupId   string `protobuf:"bytes,1,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	GoogleAccountId  string `protobuf:"bytes,2,opt,name=google_account_id,json=googleAccountId" json:"google_account_id,omitempty"`
	GoogleLocationId string `protobuf:"bytes,3,opt,name=google_location_id,json=googleLocationId" json:"google_location_id,omitempty"`
}

func (m *ReplaceAccountLocationRequest) Reset()                    { *m = ReplaceAccountLocationRequest{} }
func (m *ReplaceAccountLocationRequest) String() string            { return proto.CompactTextString(m) }
func (*ReplaceAccountLocationRequest) ProtoMessage()               {}
func (*ReplaceAccountLocationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReplaceAccountLocationRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *ReplaceAccountLocationRequest) GetGoogleAccountId() string {
	if m != nil {
		return m.GoogleAccountId
	}
	return ""
}

func (m *ReplaceAccountLocationRequest) GetGoogleLocationId() string {
	if m != nil {
		return m.GoogleLocationId
	}
	return ""
}

type DeleteAccountLocationRequest struct {
	AccountGroupId string `protobuf:"bytes,1,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
}

func (m *DeleteAccountLocationRequest) Reset()                    { *m = DeleteAccountLocationRequest{} }
func (m *DeleteAccountLocationRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAccountLocationRequest) ProtoMessage()               {}
func (*DeleteAccountLocationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DeleteAccountLocationRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

type SyncDataRequest struct {
	// The raw json from GMB insights -- intentionally untouched to allow for GMB to get this json on it's own in the future
	// The json contains which google account/location ids it is for
	GmbInsightsJson string `protobuf:"bytes,1,opt,name=gmb_insights_json,json=gmbInsightsJson" json:"gmb_insights_json,omitempty"`
	// The time when the data was requested
	RequestedAt *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=requested_at,json=requestedAt" json:"requested_at,omitempty"`
}

func (m *SyncDataRequest) Reset()                    { *m = SyncDataRequest{} }
func (m *SyncDataRequest) String() string            { return proto.CompactTextString(m) }
func (*SyncDataRequest) ProtoMessage()               {}
func (*SyncDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SyncDataRequest) GetGmbInsightsJson() string {
	if m != nil {
		return m.GmbInsightsJson
	}
	return ""
}

func (m *SyncDataRequest) GetRequestedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.RequestedAt
	}
	return nil
}

type GetTimeRangeRequest struct {
	// The group ids which form the path to the group whose data is being requested
	GroupPathNodes []string `protobuf:"bytes,1,rep,name=group_path_nodes,json=groupPathNodes" json:"group_path_nodes,omitempty"`
	// Optional account group id at the specified group
	AccountGroupId string                      `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	StartTime      *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime        *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	// The types of metrics desired in the response. If nothing is provided, all metric types are returned.
	MetricTypes []MetricType `protobuf:"varint,5,rep,packed,name=metric_types,json=metricTypes,enum=gmb.v1.MetricType" json:"metric_types,omitempty"`
}

func (m *GetTimeRangeRequest) Reset()                    { *m = GetTimeRangeRequest{} }
func (m *GetTimeRangeRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTimeRangeRequest) ProtoMessage()               {}
func (*GetTimeRangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetTimeRangeRequest) GetGroupPathNodes() []string {
	if m != nil {
		return m.GroupPathNodes
	}
	return nil
}

func (m *GetTimeRangeRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *GetTimeRangeRequest) GetStartTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *GetTimeRangeRequest) GetEndTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *GetTimeRangeRequest) GetMetricTypes() []MetricType {
	if m != nil {
		return m.MetricTypes
	}
	return nil
}

// A resource in GMB is either a group, or an account group
type ResourceId struct {
	// If requesting data for a group, this will be the path to that group
	GroupPathNodes []string `protobuf:"bytes,1,rep,name=group_path_nodes,json=groupPathNodes" json:"group_path_nodes,omitempty"`
	// If requesting data for a group, this will be blank
	// If requesting data for an account group, this will be set, and the group at group path should contain this
	// account group as a member, used for authentication
	AccountGroupId string `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
}

func (m *ResourceId) Reset()                    { *m = ResourceId{} }
func (m *ResourceId) String() string            { return proto.CompactTextString(m) }
func (*ResourceId) ProtoMessage()               {}
func (*ResourceId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ResourceId) GetGroupPathNodes() []string {
	if m != nil {
		return m.GroupPathNodes
	}
	return nil
}

func (m *ResourceId) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

type GetMultiTimeRangeRequest struct {
	// The list of ResourceId, which are either groups or account groups
	ResourceIds []*ResourceId               `protobuf:"bytes,1,rep,name=resource_ids,json=resourceIds" json:"resource_ids,omitempty"`
	StartTime   *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime     *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	// The types of metrics desired in the response. If nothing is provided, all metric types are returned.
	MetricTypes []MetricType `protobuf:"varint,4,rep,packed,name=metric_types,json=metricTypes,enum=gmb.v1.MetricType" json:"metric_types,omitempty"`
	// Delta is the difference between the total in the requested time range, and the previous, equal sized time range.
	// If there is not an equal sized previous time range of possible GMB data, delta will not be returned
	Delta bool `protobuf:"varint,5,opt,name=delta" json:"delta,omitempty"`
	// Total is the total for a metric in the requested time range
	Total bool `protobuf:"varint,6,opt,name=total" json:"total,omitempty"`
	// Over time is the values over time for the metric -- the resolution and aggregation strategy is decided by the service
	OverTime bool `protobuf:"varint,7,opt,name=over_time,json=overTime" json:"over_time,omitempty"`
}

func (m *GetMultiTimeRangeRequest) Reset()                    { *m = GetMultiTimeRangeRequest{} }
func (m *GetMultiTimeRangeRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMultiTimeRangeRequest) ProtoMessage()               {}
func (*GetMultiTimeRangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GetMultiTimeRangeRequest) GetResourceIds() []*ResourceId {
	if m != nil {
		return m.ResourceIds
	}
	return nil
}

func (m *GetMultiTimeRangeRequest) GetStartTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *GetMultiTimeRangeRequest) GetEndTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *GetMultiTimeRangeRequest) GetMetricTypes() []MetricType {
	if m != nil {
		return m.MetricTypes
	}
	return nil
}

func (m *GetMultiTimeRangeRequest) GetDelta() bool {
	if m != nil {
		return m.Delta
	}
	return false
}

func (m *GetMultiTimeRangeRequest) GetTotal() bool {
	if m != nil {
		return m.Total
	}
	return false
}

func (m *GetMultiTimeRangeRequest) GetOverTime() bool {
	if m != nil {
		return m.OverTime
	}
	return false
}

type InsightsResponse struct {
	// Insight per requested metric type
	Insights []*Insight `protobuf:"bytes,1,rep,name=insights" json:"insights,omitempty"`
}

func (m *InsightsResponse) Reset()                    { *m = InsightsResponse{} }
func (m *InsightsResponse) String() string            { return proto.CompactTextString(m) }
func (*InsightsResponse) ProtoMessage()               {}
func (*InsightsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *InsightsResponse) GetInsights() []*Insight {
	if m != nil {
		return m.Insights
	}
	return nil
}

type GetMultiTimeRangeResponse struct {
	ResourceInsights []*GetMultiTimeRangeResponse_InsightsContainer `protobuf:"bytes,1,rep,name=resource_insights,json=resourceInsights" json:"resource_insights,omitempty"`
}

func (m *GetMultiTimeRangeResponse) Reset()                    { *m = GetMultiTimeRangeResponse{} }
func (m *GetMultiTimeRangeResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMultiTimeRangeResponse) ProtoMessage()               {}
func (*GetMultiTimeRangeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GetMultiTimeRangeResponse) GetResourceInsights() []*GetMultiTimeRangeResponse_InsightsContainer {
	if m != nil {
		return m.ResourceInsights
	}
	return nil
}

type GetMultiTimeRangeResponse_InsightsContainer struct {
	Insights *InsightsResponse `protobuf:"bytes,1,opt,name=insights" json:"insights,omitempty"`
}

func (m *GetMultiTimeRangeResponse_InsightsContainer) Reset() {
	*m = GetMultiTimeRangeResponse_InsightsContainer{}
}
func (m *GetMultiTimeRangeResponse_InsightsContainer) String() string {
	return proto.CompactTextString(m)
}
func (*GetMultiTimeRangeResponse_InsightsContainer) ProtoMessage() {}
func (*GetMultiTimeRangeResponse_InsightsContainer) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{11, 0}
}

func (m *GetMultiTimeRangeResponse_InsightsContainer) GetInsights() *InsightsResponse {
	if m != nil {
		return m.Insights
	}
	return nil
}

func init() {
	proto.RegisterType((*Metric)(nil), "gmb.v1.Metric")
	proto.RegisterType((*Insight)(nil), "gmb.v1.Insight")
	proto.RegisterType((*TimeDimension)(nil), "gmb.v1.TimeDimension")
	proto.RegisterType((*TimePeriod)(nil), "gmb.v1.TimePeriod")
	proto.RegisterType((*ReplaceAccountLocationRequest)(nil), "gmb.v1.ReplaceAccountLocationRequest")
	proto.RegisterType((*DeleteAccountLocationRequest)(nil), "gmb.v1.DeleteAccountLocationRequest")
	proto.RegisterType((*SyncDataRequest)(nil), "gmb.v1.SyncDataRequest")
	proto.RegisterType((*GetTimeRangeRequest)(nil), "gmb.v1.GetTimeRangeRequest")
	proto.RegisterType((*ResourceId)(nil), "gmb.v1.ResourceId")
	proto.RegisterType((*GetMultiTimeRangeRequest)(nil), "gmb.v1.GetMultiTimeRangeRequest")
	proto.RegisterType((*InsightsResponse)(nil), "gmb.v1.InsightsResponse")
	proto.RegisterType((*GetMultiTimeRangeResponse)(nil), "gmb.v1.GetMultiTimeRangeResponse")
	proto.RegisterType((*GetMultiTimeRangeResponse_InsightsContainer)(nil), "gmb.v1.GetMultiTimeRangeResponse.InsightsContainer")
	proto.RegisterEnum("gmb.v1.Period", Period_name, Period_value)
	proto.RegisterEnum("gmb.v1.MetricType", MetricType_name, MetricType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Account service

type AccountClient interface {
	// Creates or Replace the specified account group's stored GMB account/location association
	ReplaceAccountLocation(ctx context.Context, in *ReplaceAccountLocationRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	// Deletes the specified account group's stored GMB account/location association
	DeleteAccountLocation(ctx context.Context, in *DeleteAccountLocationRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type accountClient struct {
	cc *grpc.ClientConn
}

func NewAccountClient(cc *grpc.ClientConn) AccountClient {
	return &accountClient{cc}
}

func (c *accountClient) ReplaceAccountLocation(ctx context.Context, in *ReplaceAccountLocationRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/gmb.v1.Account/ReplaceAccountLocation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) DeleteAccountLocation(ctx context.Context, in *DeleteAccountLocationRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/gmb.v1.Account/DeleteAccountLocation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Account service

type AccountServer interface {
	// Creates or Replace the specified account group's stored GMB account/location association
	ReplaceAccountLocation(context.Context, *ReplaceAccountLocationRequest) (*google_protobuf.Empty, error)
	// Deletes the specified account group's stored GMB account/location association
	DeleteAccountLocation(context.Context, *DeleteAccountLocationRequest) (*google_protobuf.Empty, error)
}

func RegisterAccountServer(s *grpc.Server, srv AccountServer) {
	s.RegisterService(&_Account_serviceDesc, srv)
}

func _Account_ReplaceAccountLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplaceAccountLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).ReplaceAccountLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gmb.v1.Account/ReplaceAccountLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).ReplaceAccountLocation(ctx, req.(*ReplaceAccountLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_DeleteAccountLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAccountLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).DeleteAccountLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gmb.v1.Account/DeleteAccountLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).DeleteAccountLocation(ctx, req.(*DeleteAccountLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Account_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gmb.v1.Account",
	HandlerType: (*AccountServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReplaceAccountLocation",
			Handler:    _Account_ReplaceAccountLocation_Handler,
		},
		{
			MethodName: "DeleteAccountLocation",
			Handler:    _Account_DeleteAccountLocation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google_my_business/v1/api.proto",
}

// Client API for Insights service

type InsightsClient interface {
	GetTimeRange(ctx context.Context, in *GetTimeRangeRequest, opts ...grpc.CallOption) (*InsightsResponse, error)
	GetMultiTimeRange(ctx context.Context, in *GetMultiTimeRangeRequest, opts ...grpc.CallOption) (*GetMultiTimeRangeResponse, error)
}

type insightsClient struct {
	cc *grpc.ClientConn
}

func NewInsightsClient(cc *grpc.ClientConn) InsightsClient {
	return &insightsClient{cc}
}

func (c *insightsClient) GetTimeRange(ctx context.Context, in *GetTimeRangeRequest, opts ...grpc.CallOption) (*InsightsResponse, error) {
	out := new(InsightsResponse)
	err := grpc.Invoke(ctx, "/gmb.v1.Insights/GetTimeRange", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *insightsClient) GetMultiTimeRange(ctx context.Context, in *GetMultiTimeRangeRequest, opts ...grpc.CallOption) (*GetMultiTimeRangeResponse, error) {
	out := new(GetMultiTimeRangeResponse)
	err := grpc.Invoke(ctx, "/gmb.v1.Insights/GetMultiTimeRange", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Insights service

type InsightsServer interface {
	GetTimeRange(context.Context, *GetTimeRangeRequest) (*InsightsResponse, error)
	GetMultiTimeRange(context.Context, *GetMultiTimeRangeRequest) (*GetMultiTimeRangeResponse, error)
}

func RegisterInsightsServer(s *grpc.Server, srv InsightsServer) {
	s.RegisterService(&_Insights_serviceDesc, srv)
}

func _Insights_GetTimeRange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTimeRangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InsightsServer).GetTimeRange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gmb.v1.Insights/GetTimeRange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InsightsServer).GetTimeRange(ctx, req.(*GetTimeRangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Insights_GetMultiTimeRange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMultiTimeRangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InsightsServer).GetMultiTimeRange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gmb.v1.Insights/GetMultiTimeRange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InsightsServer).GetMultiTimeRange(ctx, req.(*GetMultiTimeRangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Insights_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gmb.v1.Insights",
	HandlerType: (*InsightsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTimeRange",
			Handler:    _Insights_GetTimeRange_Handler,
		},
		{
			MethodName: "GetMultiTimeRange",
			Handler:    _Insights_GetMultiTimeRange_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google_my_business/v1/api.proto",
}

// Client API for InsightsSync service

type InsightsSyncClient interface {
	SyncData(ctx context.Context, in *SyncDataRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type insightsSyncClient struct {
	cc *grpc.ClientConn
}

func NewInsightsSyncClient(cc *grpc.ClientConn) InsightsSyncClient {
	return &insightsSyncClient{cc}
}

func (c *insightsSyncClient) SyncData(ctx context.Context, in *SyncDataRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/gmb.v1.InsightsSync/SyncData", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for InsightsSync service

type InsightsSyncServer interface {
	SyncData(context.Context, *SyncDataRequest) (*google_protobuf.Empty, error)
}

func RegisterInsightsSyncServer(s *grpc.Server, srv InsightsSyncServer) {
	s.RegisterService(&_InsightsSync_serviceDesc, srv)
}

func _InsightsSync_SyncData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InsightsSyncServer).SyncData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gmb.v1.InsightsSync/SyncData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InsightsSyncServer).SyncData(ctx, req.(*SyncDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _InsightsSync_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gmb.v1.InsightsSync",
	HandlerType: (*InsightsSyncServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SyncData",
			Handler:    _InsightsSync_SyncData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google_my_business/v1/api.proto",
}

func init() { proto.RegisterFile("google_my_business/v1/api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1014 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x56, 0x5b, 0x6f, 0xe3, 0x44,
	0x14, 0x8e, 0xe3, 0x34, 0x97, 0x93, 0x36, 0x75, 0x67, 0x2f, 0x84, 0x14, 0xd8, 0x60, 0xc1, 0xaa,
	0x2a, 0x28, 0xd1, 0xb6, 0xec, 0x03, 0x12, 0x2b, 0x94, 0x6d, 0xac, 0xd6, 0xb0, 0x4d, 0xcb, 0x24,
	0xb4, 0x5a, 0x84, 0xe4, 0x75, 0xe2, 0x21, 0x35, 0x8a, 0x2f, 0x78, 0x26, 0x95, 0x2a, 0xf1, 0x2b,
	0xf8, 0x0b, 0xbc, 0xf1, 0xc2, 0x2f, 0xe0, 0x89, 0x17, 0xc4, 0xaf, 0x42, 0x73, 0x6b, 0xd2, 0x34,
	0xe9, 0xc2, 0xa2, 0x7d, 0xf3, 0x9c, 0xf3, 0x9d, 0xeb, 0x77, 0xe6, 0x8c, 0xe1, 0xd1, 0x38, 0x49,
	0xc6, 0x13, 0xe2, 0x45, 0x57, 0xde, 0x70, 0x4a, 0xc3, 0x98, 0x50, 0xda, 0xbe, 0x7c, 0xd2, 0xf6,
	0xd3, 0xb0, 0x95, 0x66, 0x09, 0x4b, 0x50, 0x71, 0x1c, 0x0d, 0x5b, 0x97, 0x4f, 0x1a, 0xdb, 0x12,
	0xd8, 0x16, 0xd2, 0xe1, 0xf4, 0x87, 0x36, 0x89, 0x52, 0x76, 0x25, 0x41, 0x8d, 0x47, 0x8b, 0x4a,
	0x16, 0x46, 0x84, 0x32, 0x3f, 0x4a, 0x25, 0xc0, 0xfe, 0x1e, 0x8a, 0xc7, 0x84, 0x65, 0xe1, 0x08,
	0xdd, 0x87, 0xb5, 0x4b, 0x7f, 0x32, 0x25, 0x75, 0xa3, 0x69, 0xec, 0x98, 0x58, 0x1e, 0xd0, 0x17,
	0x50, 0xe3, 0x26, 0x5e, 0x10, 0x46, 0x24, 0xa6, 0x61, 0x12, 0xd7, 0xf3, 0x4d, 0x63, 0xa7, 0xba,
	0xf7, 0xa0, 0x25, 0xc3, 0xb7, 0x06, 0x61, 0x44, 0xba, 0x5a, 0x89, 0x37, 0xd8, 0xfc, 0xd1, 0xfe,
	0xdb, 0x80, 0x92, 0x1b, 0xd3, 0x70, 0x7c, 0xc1, 0xd0, 0x3e, 0x54, 0x23, 0x11, 0xc9, 0x63, 0x57,
	0xa9, 0x8c, 0x52, 0xdb, 0x43, 0xda, 0x8d, 0x4c, 0x62, 0x70, 0x95, 0x12, 0x0c, 0xd1, 0xf5, 0x37,
	0x6a, 0x43, 0x95, 0x25, 0xcc, 0x9f, 0x78, 0x32, 0x35, 0x19, 0xbb, 0x76, 0xd3, 0x08, 0x83, 0x80,
	0x9c, 0x89, 0x7c, 0xdb, 0x50, 0x0d, 0xc8, 0x84, 0xf9, 0xca, 0xc0, 0x5c, 0x6e, 0x20, 0x20, 0xd2,
	0x60, 0x07, 0x4a, 0x32, 0x1e, 0xad, 0x17, 0x9a, 0xe6, 0x12, 0xb0, 0x56, 0xdb, 0x2f, 0x60, 0xe3,
	0x46, 0xb1, 0x68, 0x1f, 0x40, 0xf4, 0x26, 0xf3, 0xe3, 0xb1, 0x2c, 0xa8, 0x3a, 0x2b, 0x88, 0x43,
	0x4f, 0x49, 0x16, 0x26, 0xc1, 0x51, 0x0e, 0x57, 0x38, 0x0e, 0x73, 0xd8, 0xf3, 0x22, 0x14, 0xf8,
	0xc1, 0x4e, 0x00, 0x66, 0x10, 0xf4, 0x39, 0x00, 0x65, 0x7e, 0xc6, 0x3c, 0xae, 0x53, 0xae, 0x1a,
	0x2d, 0x49, 0x5e, 0x4b, 0x93, 0x27, 0x7c, 0x0a, 0xf2, 0x70, 0x45, 0xa0, 0xf9, 0x19, 0x3d, 0x86,
	0x62, 0x2a, 0x9c, 0x88, 0xee, 0xd4, 0x66, 0xf9, 0x4b, 0xd7, 0x58, 0x69, 0xed, 0x5f, 0x0d, 0x78,
	0x1f, 0x93, 0x74, 0xe2, 0x8f, 0x48, 0x67, 0x34, 0x4a, 0xa6, 0x31, 0x7b, 0x91, 0x8c, 0x7c, 0xc6,
	0x59, 0x23, 0x3f, 0x4d, 0x09, 0x65, 0x68, 0x07, 0x2c, 0x5f, 0x6a, 0xbc, 0x71, 0x96, 0x4c, 0x53,
	0x2f, 0x0c, 0x44, 0x2a, 0x15, 0x5c, 0x53, 0xf2, 0x43, 0x2e, 0x76, 0x03, 0xb4, 0x0b, 0x5b, 0x6a,
	0x3c, 0xb5, 0x41, 0x28, 0xc3, 0x57, 0xf0, 0xa6, 0x54, 0xa8, 0x10, 0x6e, 0x80, 0x3e, 0x05, 0xa4,
	0xb0, 0x13, 0x15, 0x8f, 0x83, 0x4d, 0x01, 0xb6, 0xa4, 0x46, 0x27, 0xe2, 0x06, 0xf6, 0x11, 0xbc,
	0xd7, 0x25, 0x13, 0xc2, 0xfe, 0x77, 0x8e, 0xf6, 0xcf, 0xb0, 0xd9, 0xbf, 0x8a, 0x47, 0x5d, 0x9f,
	0xf9, 0xda, 0x98, 0xa7, 0x1d, 0x0d, 0xbd, 0x50, 0x4e, 0x24, 0xf5, 0x7e, 0xa4, 0x49, 0xac, 0xac,
	0x37, 0xc7, 0xd1, 0x50, 0x4d, 0x2a, 0xfd, 0x8a, 0x26, 0x31, 0x7a, 0x06, 0xeb, 0x99, 0x34, 0x23,
	0x81, 0xe7, 0x33, 0x35, 0x7a, 0x77, 0x71, 0x52, 0xbd, 0xc6, 0x77, 0x98, 0xfd, 0x4b, 0x1e, 0xee,
	0x1d, 0x12, 0xc1, 0x90, 0xe0, 0x7d, 0x2e, 0x7f, 0x99, 0x77, 0xea, 0xb3, 0x0b, 0x2f, 0x4e, 0x02,
	0x42, 0xeb, 0x46, 0xd3, 0xe4, 0xf9, 0x0b, 0xf9, 0xa9, 0xcf, 0x2e, 0x7a, 0x5c, 0xba, 0xb4, 0xd2,
	0xfc, 0x52, 0x36, 0x6e, 0x0e, 0x8f, 0xf9, 0x5f, 0x86, 0xe7, 0x29, 0x94, 0x49, 0x1c, 0x48, 0xc3,
	0xc2, 0x6b, 0x0d, 0x4b, 0x24, 0x0e, 0x94, 0xd9, 0xfa, 0xdc, 0x5d, 0xa6, 0xf5, 0xb5, 0xa6, 0xb9,
	0xe2, 0x32, 0x57, 0x67, 0x97, 0x99, 0xda, 0xaf, 0x00, 0x30, 0xa1, 0xc9, 0x34, 0x1b, 0x11, 0x37,
	0x78, 0x1b, 0xad, 0xb0, 0xff, 0xcc, 0x43, 0xfd, 0x90, 0xb0, 0xe3, 0xe9, 0x84, 0x85, 0xb7, 0x7a,
	0xff, 0x94, 0x53, 0x2a, 0xc3, 0x7b, 0x61, 0x20, 0x83, 0xcd, 0xdd, 0xd8, 0x59, 0x6a, 0x9c, 0x4a,
	0xfd, 0x4d, 0x17, 0xda, 0x9b, 0x7f, 0xd3, 0xf6, 0x9a, 0x6f, 0xde, 0xde, 0xc2, 0xbf, 0x6a, 0x2f,
	0xdf, 0xe0, 0x62, 0xb1, 0xd5, 0xd7, 0x9a, 0xc6, 0x4e, 0x19, 0xcb, 0x03, 0x97, 0x8a, 0xfd, 0x58,
	0x2f, 0x4a, 0xa9, 0x38, 0xa0, 0x6d, 0xa8, 0x24, 0x97, 0x24, 0x93, 0xa9, 0x95, 0x84, 0xa6, 0xcc,
	0x05, 0x3c, 0xbe, 0xfd, 0x25, 0x58, 0xfa, 0x2e, 0x60, 0x42, 0xd3, 0x24, 0xa6, 0x04, 0x7d, 0x02,
	0x65, 0x7d, 0x6f, 0x54, 0xe3, 0x36, 0x75, 0x3e, 0x0a, 0x8b, 0xaf, 0x01, 0xf6, 0x5f, 0x06, 0xbc,
	0xbb, 0x84, 0x06, 0xe5, 0xea, 0x15, 0x6c, 0xcd, 0x78, 0xb8, 0xe9, 0x73, 0x5f, 0xfb, 0x5c, 0x69,
	0xad, 0xa3, 0xd1, 0x83, 0x24, 0x66, 0x7e, 0x18, 0x93, 0x0c, 0x5b, 0xd7, 0x6c, 0x29, 0x55, 0xc3,
	0x85, 0xad, 0x5b, 0x30, 0xf4, 0xd9, 0x8d, 0x0a, 0x38, 0x19, 0xf5, 0x85, 0x0a, 0xae, 0xab, 0x9d,
	0x95, 0xb2, 0xfb, 0x18, 0x8a, 0x6a, 0x47, 0x97, 0xc0, 0xec, 0x76, 0x5e, 0x5a, 0x39, 0x54, 0x86,
	0xc2, 0xb9, 0xe3, 0x7c, 0x6d, 0x19, 0xa8, 0x02, 0x6b, 0xc7, 0x27, 0xbd, 0xc1, 0x91, 0x95, 0xdf,
	0xfd, 0xcd, 0x00, 0x98, 0x11, 0xc3, 0x31, 0xbd, 0x93, 0x9e, 0x63, 0xe5, 0x10, 0x82, 0xda, 0x37,
	0xdf, 0x3a, 0xd8, 0x75, 0xfa, 0x5e, 0xd7, 0xc5, 0xce, 0xc1, 0xc0, 0x32, 0xd0, 0x7d, 0xb0, 0xb4,
	0xcc, 0xed, 0x29, 0x69, 0x1e, 0xd5, 0x00, 0xce, 0x5c, 0xe7, 0xbc, 0xef, 0x1d, 0x77, 0x4e, 0xfb,
	0x96, 0x89, 0x2c, 0x58, 0x97, 0xe7, 0xbe, 0xd3, 0xc1, 0x07, 0x47, 0x56, 0x01, 0xdd, 0x83, 0xcd,
	0xce, 0xc1, 0xc0, 0x3d, 0xe9, 0xf5, 0xbd, 0x73, 0xe7, 0x79, 0xdf, 0x1d, 0x38, 0xd6, 0x1a, 0xda,
	0x82, 0x0d, 0x2d, 0x3c, 0x3d, 0xe2, 0x31, 0x8b, 0xe8, 0x03, 0x68, 0x68, 0x51, 0x17, 0xbb, 0x67,
	0x6e, 0xef, 0x50, 0xc5, 0xe6, 0x22, 0xab, 0xb4, 0xf7, 0x87, 0x01, 0x25, 0xb5, 0x60, 0xd1, 0x4b,
	0x78, 0xb8, 0xfc, 0x59, 0x40, 0x1f, 0xcf, 0x6e, 0xc6, 0x1d, 0xcf, 0x46, 0xe3, 0xe1, 0xad, 0x91,
	0x76, 0xf8, 0x1f, 0x88, 0x9d, 0x43, 0xe7, 0xf0, 0x60, 0xe9, 0x32, 0x47, 0x1f, 0x69, 0xcf, 0x77,
	0xed, 0xfa, 0xd5, 0x8e, 0xf7, 0x7e, 0x37, 0xa0, 0xac, 0x39, 0x43, 0x87, 0xb0, 0x3e, 0xbf, 0x69,
	0xd1, 0xf6, 0xdc, 0x0c, 0x2d, 0xee, 0x80, 0xc6, 0x4a, 0xca, 0xed, 0x1c, 0xfa, 0x0e, 0xb6, 0x6e,
	0x8d, 0x1d, 0x6a, 0xde, 0x31, 0x91, 0xd2, 0xe5, 0x87, 0xaf, 0x9d, 0x59, 0x3b, 0xb7, 0x77, 0x0c,
	0xeb, 0x3a, 0x22, 0x7f, 0x95, 0xd0, 0x33, 0x28, 0xeb, 0xd7, 0x09, 0xbd, 0xa3, 0x1d, 0x2c, 0xbc,
	0x57, 0xab, 0x1b, 0x30, 0x2c, 0x0a, 0xc9, 0xfe, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa8, 0x60,
	0x87, 0xe1, 0x26, 0x0a, 0x00, 0x00,
}
