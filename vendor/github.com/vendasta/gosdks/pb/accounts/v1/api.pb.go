// Code generated by protoc-gen-go. DO NOT EDIT.
// source: accounts/v1/api.proto

/*
Package accounts_v1 is a generated protocol buffer package.

It is generated from these files:
	accounts/v1/api.proto
	accounts/v1/blame.proto
	accounts/v1/addons.proto

It has these top-level messages:
	Account
	PendingActivation
	ActivateAddonRequest
	DeactivateAddonRequest
	ActivateAppRequest
	DeactivateAppRequest
	ListAddonActivationsRequest
	ListAddonActivationsResponse
	CreateRequest
	GetRequest
	ListRequest
	DeleteRequest
	UpdateExpiryRequest
	SetAutoRenewRequest
	DismissPendingActivationRequest
	ResolvePendingActivationRequest
	ListPendingActivationRequest
	ListPendingActivationResponse
	ActivateAddonResponse
	ActivateAppResponse
	CreateResponse
	GetResponse
	ListResponse
	Blame
	AddonActivation
*/
package accounts_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RenewalState int32

const (
	RenewalState_ON  RenewalState = 0
	RenewalState_OFF RenewalState = 1
)

var RenewalState_name = map[int32]string{
	0: "ON",
	1: "OFF",
}
var RenewalState_value = map[string]int32{
	"ON":  0,
	"OFF": 1,
}

func (x RenewalState) String() string {
	return proto.EnumName(RenewalState_name, int32(x))
}
func (RenewalState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PendingActivation_Status int32

const (
	PendingActivation_PENDING  PendingActivation_Status = 0
	PendingActivation_APPROVED PendingActivation_Status = 1
	PendingActivation_REJECTED PendingActivation_Status = 2
)

var PendingActivation_Status_name = map[int32]string{
	0: "PENDING",
	1: "APPROVED",
	2: "REJECTED",
}
var PendingActivation_Status_value = map[string]int32{
	"PENDING":  0,
	"APPROVED": 1,
	"REJECTED": 2,
}

func (x PendingActivation_Status) String() string {
	return proto.EnumName(PendingActivation_Status_name, int32(x))
}
func (PendingActivation_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

// Account is a representation of an activation in the Vendasta platform.
// An activation exists in two states, an "active" state where it is available to
// the purchaser, or a "deactivated" state where it's deactivated time is in the past.
// Once an addon is deactivated, it is immutable moving forward.
type Account struct {
	// The unique identifier of the account in the application that corresponds to the business
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// The business ID.
	BusinessId string `protobuf:"bytes,2,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// The partner ID.
	PartnerId string `protobuf:"bytes,3,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// The unique identifier for the application being created.
	ProductId string `protobuf:"bytes,4,opt,name=product_id,json=productId" json:"product_id,omitempty"`
	// The marketplace application ID.
	AppId string `protobuf:"bytes,5,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// The custom entry url for the application.
	CustomEntryUrl string `protobuf:"bytes,6,opt,name=custom_entry_url,json=customEntryUrl" json:"custom_entry_url,omitempty"`
	// The email for the user who filled out the form.
	UserContactEmail string `protobuf:"bytes,7,opt,name=user_contact_email,json=userContactEmail" json:"user_contact_email,omitempty"`
	// The activation time of the account.
	Activation *google_protobuf.Timestamp `protobuf:"bytes,8,opt,name=activation" json:"activation,omitempty"`
	// The deactivation time for the account.
	Deactivation *google_protobuf.Timestamp `protobuf:"bytes,9,opt,name=deactivation" json:"deactivation,omitempty"`
	// Whether or not the account is a trial account.
	Trial bool `protobuf:"varint,10,opt,name=trial" json:"trial,omitempty"`
	// The order form submission id, unique per activation.
	OrderFormSubmissionId string `protobuf:"bytes,11,opt,name=order_form_submission_id,json=orderFormSubmissionId" json:"order_form_submission_id,omitempty"`
	// Metadata and source for the activation event
	ActivationInfo *Blame `protobuf:"bytes,12,opt,name=activation_info,json=activationInfo" json:"activation_info,omitempty"`
	// Metadata and source for the deactivation event
	DeactivationInfo *Blame `protobuf:"bytes,13,opt,name=deactivation_info,json=deactivationInfo" json:"deactivation_info,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Account) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Account) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *Account) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *Account) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *Account) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *Account) GetCustomEntryUrl() string {
	if m != nil {
		return m.CustomEntryUrl
	}
	return ""
}

func (m *Account) GetUserContactEmail() string {
	if m != nil {
		return m.UserContactEmail
	}
	return ""
}

func (m *Account) GetActivation() *google_protobuf.Timestamp {
	if m != nil {
		return m.Activation
	}
	return nil
}

func (m *Account) GetDeactivation() *google_protobuf.Timestamp {
	if m != nil {
		return m.Deactivation
	}
	return nil
}

func (m *Account) GetTrial() bool {
	if m != nil {
		return m.Trial
	}
	return false
}

func (m *Account) GetOrderFormSubmissionId() string {
	if m != nil {
		return m.OrderFormSubmissionId
	}
	return ""
}

func (m *Account) GetActivationInfo() *Blame {
	if m != nil {
		return m.ActivationInfo
	}
	return nil
}

func (m *Account) GetDeactivationInfo() *Blame {
	if m != nil {
		return m.DeactivationInfo
	}
	return nil
}

// PendingActivation is a representation of a pending activation in the Vendasta platform.
// A pending activation remains pending until a "vendor" either rejects or approves the activation
type PendingActivation struct {
	// The unique identifier for an activation and pending activation
	ActivationId string `protobuf:"bytes,1,opt,name=activation_id,json=activationId" json:"activation_id,omitempty"`
	// The business identifier that this pending activation is for
	BusinessId string `protobuf:"bytes,2,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// The status of the pending activation
	Status PendingActivation_Status `protobuf:"varint,3,opt,name=status,enum=accounts.v1.PendingActivation_Status" json:"status,omitempty"`
	// The reason for a rejected pending activation
	RejectedReason string `protobuf:"bytes,4,opt,name=rejected_reason,json=rejectedReason" json:"rejected_reason,omitempty"`
	// Who dismissed the pending activation
	DismissedBy string `protobuf:"bytes,5,opt,name=dismissed_by,json=dismissedBy" json:"dismissed_by,omitempty"`
	// Date the pending activation was created
	CreatedDate *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=created_date,json=createdDate" json:"created_date,omitempty"`
	// Date the pending activation was last updated
	UpdatedDate *google_protobuf.Timestamp `protobuf:"bytes,7,opt,name=updated_date,json=updatedDate" json:"updated_date,omitempty"`
	// Either its a pending activation for an app or addon
	//
	// Types that are valid to be assigned to Activation:
	//	*PendingActivation_AppActivation
	//	*PendingActivation_AddonActivation
	Activation isPendingActivation_Activation `protobuf_oneof:"activation"`
	// Identifier for the app/product that the pending activation is for
	AppId string `protobuf:"bytes,10,opt,name=app_id,json=appId" json:"app_id,omitempty"`
}

func (m *PendingActivation) Reset()                    { *m = PendingActivation{} }
func (m *PendingActivation) String() string            { return proto.CompactTextString(m) }
func (*PendingActivation) ProtoMessage()               {}
func (*PendingActivation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isPendingActivation_Activation interface {
	isPendingActivation_Activation()
}

type PendingActivation_AppActivation struct {
	AppActivation *Account `protobuf:"bytes,8,opt,name=app_activation,json=appActivation,oneof"`
}
type PendingActivation_AddonActivation struct {
	AddonActivation *AddonActivation `protobuf:"bytes,9,opt,name=addon_activation,json=addonActivation,oneof"`
}

func (*PendingActivation_AppActivation) isPendingActivation_Activation()   {}
func (*PendingActivation_AddonActivation) isPendingActivation_Activation() {}

func (m *PendingActivation) GetActivation() isPendingActivation_Activation {
	if m != nil {
		return m.Activation
	}
	return nil
}

func (m *PendingActivation) GetActivationId() string {
	if m != nil {
		return m.ActivationId
	}
	return ""
}

func (m *PendingActivation) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *PendingActivation) GetStatus() PendingActivation_Status {
	if m != nil {
		return m.Status
	}
	return PendingActivation_PENDING
}

func (m *PendingActivation) GetRejectedReason() string {
	if m != nil {
		return m.RejectedReason
	}
	return ""
}

func (m *PendingActivation) GetDismissedBy() string {
	if m != nil {
		return m.DismissedBy
	}
	return ""
}

func (m *PendingActivation) GetCreatedDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedDate
	}
	return nil
}

func (m *PendingActivation) GetUpdatedDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedDate
	}
	return nil
}

func (m *PendingActivation) GetAppActivation() *Account {
	if x, ok := m.GetActivation().(*PendingActivation_AppActivation); ok {
		return x.AppActivation
	}
	return nil
}

func (m *PendingActivation) GetAddonActivation() *AddonActivation {
	if x, ok := m.GetActivation().(*PendingActivation_AddonActivation); ok {
		return x.AddonActivation
	}
	return nil
}

func (m *PendingActivation) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PendingActivation) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PendingActivation_OneofMarshaler, _PendingActivation_OneofUnmarshaler, _PendingActivation_OneofSizer, []interface{}{
		(*PendingActivation_AppActivation)(nil),
		(*PendingActivation_AddonActivation)(nil),
	}
}

func _PendingActivation_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PendingActivation)
	// activation
	switch x := m.Activation.(type) {
	case *PendingActivation_AppActivation:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AppActivation); err != nil {
			return err
		}
	case *PendingActivation_AddonActivation:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AddonActivation); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PendingActivation.Activation has unexpected type %T", x)
	}
	return nil
}

func _PendingActivation_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PendingActivation)
	switch tag {
	case 8: // activation.app_activation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Account)
		err := b.DecodeMessage(msg)
		m.Activation = &PendingActivation_AppActivation{msg}
		return true, err
	case 9: // activation.addon_activation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AddonActivation)
		err := b.DecodeMessage(msg)
		m.Activation = &PendingActivation_AddonActivation{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PendingActivation_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PendingActivation)
	// activation
	switch x := m.Activation.(type) {
	case *PendingActivation_AppActivation:
		s := proto.Size(x.AppActivation)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PendingActivation_AddonActivation:
		s := proto.Size(x.AddonActivation)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ActivateAddonRequest struct {
	// The business ID.
	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// The marketplace application ID.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// The marketplace addon ID.
	AddonId string `protobuf:"bytes,3,opt,name=addon_id,json=addonId" json:"addon_id,omitempty"`
	// The partner ID. Not required if you are authenticating as a partner user.
	PartnerId string `protobuf:"bytes,4,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// The order form submission id, unique per activation.
	OrderFormSubmissionId string `protobuf:"bytes,5,opt,name=order_form_submission_id,json=orderFormSubmissionId" json:"order_form_submission_id,omitempty"`
	// The time of Activation
	ActivateOn *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=activate_on,json=activateOn" json:"activate_on,omitempty"`
	// The time to trigger account deactivation.
	DeactivateOn *google_protobuf.Timestamp `protobuf:"bytes,7,opt,name=deactivate_on,json=deactivateOn" json:"deactivate_on,omitempty"`
	// The blame information for this action
	ActivationInfo *Blame `protobuf:"bytes,8,opt,name=activation_info,json=activationInfo" json:"activation_info,omitempty"`
}

func (m *ActivateAddonRequest) Reset()                    { *m = ActivateAddonRequest{} }
func (m *ActivateAddonRequest) String() string            { return proto.CompactTextString(m) }
func (*ActivateAddonRequest) ProtoMessage()               {}
func (*ActivateAddonRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ActivateAddonRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *ActivateAddonRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *ActivateAddonRequest) GetAddonId() string {
	if m != nil {
		return m.AddonId
	}
	return ""
}

func (m *ActivateAddonRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *ActivateAddonRequest) GetOrderFormSubmissionId() string {
	if m != nil {
		return m.OrderFormSubmissionId
	}
	return ""
}

func (m *ActivateAddonRequest) GetActivateOn() *google_protobuf.Timestamp {
	if m != nil {
		return m.ActivateOn
	}
	return nil
}

func (m *ActivateAddonRequest) GetDeactivateOn() *google_protobuf.Timestamp {
	if m != nil {
		return m.DeactivateOn
	}
	return nil
}

func (m *ActivateAddonRequest) GetActivationInfo() *Blame {
	if m != nil {
		return m.ActivationInfo
	}
	return nil
}

type DeactivateAddonRequest struct {
	// The business ID.
	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// The marketplace application ID.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// The marketplace addon ID.
	AddonId string `protobuf:"bytes,3,opt,name=addon_id,json=addonId" json:"addon_id,omitempty"`
	// The activation ID that was given when the addon was activated.
	ActivationId string `protobuf:"bytes,4,opt,name=activation_id,json=activationId" json:"activation_id,omitempty"`
	// The partner ID. Not required if you are authenticating as a partner user.
	PartnerId string `protobuf:"bytes,5,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// The blame information for this action
	DeactivationInfo *Blame `protobuf:"bytes,6,opt,name=deactivation_info,json=deactivationInfo" json:"deactivation_info,omitempty"`
}

func (m *DeactivateAddonRequest) Reset()                    { *m = DeactivateAddonRequest{} }
func (m *DeactivateAddonRequest) String() string            { return proto.CompactTextString(m) }
func (*DeactivateAddonRequest) ProtoMessage()               {}
func (*DeactivateAddonRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeactivateAddonRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *DeactivateAddonRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *DeactivateAddonRequest) GetAddonId() string {
	if m != nil {
		return m.AddonId
	}
	return ""
}

func (m *DeactivateAddonRequest) GetActivationId() string {
	if m != nil {
		return m.ActivationId
	}
	return ""
}

func (m *DeactivateAddonRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *DeactivateAddonRequest) GetDeactivationInfo() *Blame {
	if m != nil {
		return m.DeactivationInfo
	}
	return nil
}

type ActivateAppRequest struct {
	// The business ID.
	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// The marketplace application ID.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// The partner ID. Not required if you are authenticating as a partner user.
	PartnerId string `protobuf:"bytes,3,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// The order form submission id, unique per activation.
	OrderFormSubmissionId string `protobuf:"bytes,4,opt,name=order_form_submission_id,json=orderFormSubmissionId" json:"order_form_submission_id,omitempty"`
	// The time of Activation
	ActivateOn *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=activate_on,json=activateOn" json:"activate_on,omitempty"`
	// The time to trigger account deactivation.
	DeactivateOn *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=deactivate_on,json=deactivateOn" json:"deactivate_on,omitempty"`
	// Activate trial version
	Trial bool `protobuf:"varint,7,opt,name=trial" json:"trial,omitempty"`
	// The blame information for this action
	ActivationInfo *Blame `protobuf:"bytes,8,opt,name=activation_info,json=activationInfo" json:"activation_info,omitempty"`
}

func (m *ActivateAppRequest) Reset()                    { *m = ActivateAppRequest{} }
func (m *ActivateAppRequest) String() string            { return proto.CompactTextString(m) }
func (*ActivateAppRequest) ProtoMessage()               {}
func (*ActivateAppRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ActivateAppRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *ActivateAppRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *ActivateAppRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *ActivateAppRequest) GetOrderFormSubmissionId() string {
	if m != nil {
		return m.OrderFormSubmissionId
	}
	return ""
}

func (m *ActivateAppRequest) GetActivateOn() *google_protobuf.Timestamp {
	if m != nil {
		return m.ActivateOn
	}
	return nil
}

func (m *ActivateAppRequest) GetDeactivateOn() *google_protobuf.Timestamp {
	if m != nil {
		return m.DeactivateOn
	}
	return nil
}

func (m *ActivateAppRequest) GetTrial() bool {
	if m != nil {
		return m.Trial
	}
	return false
}

func (m *ActivateAppRequest) GetActivationInfo() *Blame {
	if m != nil {
		return m.ActivationInfo
	}
	return nil
}

type DeactivateAppRequest struct {
	// The business ID.
	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// The marketplace application ID.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// The blame information for this action
	DeactivationInfo *Blame `protobuf:"bytes,3,opt,name=deactivation_info,json=deactivationInfo" json:"deactivation_info,omitempty"`
}

func (m *DeactivateAppRequest) Reset()                    { *m = DeactivateAppRequest{} }
func (m *DeactivateAppRequest) String() string            { return proto.CompactTextString(m) }
func (*DeactivateAppRequest) ProtoMessage()               {}
func (*DeactivateAppRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DeactivateAppRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *DeactivateAppRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *DeactivateAppRequest) GetDeactivationInfo() *Blame {
	if m != nil {
		return m.DeactivationInfo
	}
	return nil
}

type ListAddonActivationsRequest struct {
	// The business ID.
	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// The marketplace application ID.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
}

func (m *ListAddonActivationsRequest) Reset()                    { *m = ListAddonActivationsRequest{} }
func (m *ListAddonActivationsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListAddonActivationsRequest) ProtoMessage()               {}
func (*ListAddonActivationsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ListAddonActivationsRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *ListAddonActivationsRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

type ListAddonActivationsResponse struct {
	// A list of addon activations
	Activations []*AddonActivation `protobuf:"bytes,1,rep,name=activations" json:"activations,omitempty"`
}

func (m *ListAddonActivationsResponse) Reset()                    { *m = ListAddonActivationsResponse{} }
func (m *ListAddonActivationsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListAddonActivationsResponse) ProtoMessage()               {}
func (*ListAddonActivationsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ListAddonActivationsResponse) GetActivations() []*AddonActivation {
	if m != nil {
		return m.Activations
	}
	return nil
}

type CreateRequest struct {
	// The business ID.
	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// The unique identifier of the account in the application that corresponds to the business.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// The marketplace application ID.
	AppId string `protobuf:"bytes,3,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// The unique identifier for the application being created.
	ProductId string `protobuf:"bytes,4,opt,name=product_id,json=productId" json:"product_id,omitempty"`
	// The custom entry url for the application.
	CustomEntryUrl string `protobuf:"bytes,5,opt,name=custom_entry_url,json=customEntryUrl" json:"custom_entry_url,omitempty"`
	// The email for the user who filled out the form.
	UserContactEmail string `protobuf:"bytes,6,opt,name=user_contact_email,json=userContactEmail" json:"user_contact_email,omitempty"`
	// Whether or not the account is a trial account.
	Trial bool `protobuf:"varint,7,opt,name=trial" json:"trial,omitempty"`
	// The time to trigger account deactivation.
	DeactivateOn *google_protobuf.Timestamp `protobuf:"bytes,8,opt,name=deactivate_on,json=deactivateOn" json:"deactivate_on,omitempty"`
	// The order form submission id, unique per activation.
	OrderFormSubmissionId string `protobuf:"bytes,9,opt,name=order_form_submission_id,json=orderFormSubmissionId" json:"order_form_submission_id,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CreateRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *CreateRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *CreateRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *CreateRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *CreateRequest) GetCustomEntryUrl() string {
	if m != nil {
		return m.CustomEntryUrl
	}
	return ""
}

func (m *CreateRequest) GetUserContactEmail() string {
	if m != nil {
		return m.UserContactEmail
	}
	return ""
}

func (m *CreateRequest) GetTrial() bool {
	if m != nil {
		return m.Trial
	}
	return false
}

func (m *CreateRequest) GetDeactivateOn() *google_protobuf.Timestamp {
	if m != nil {
		return m.DeactivateOn
	}
	return nil
}

func (m *CreateRequest) GetOrderFormSubmissionId() string {
	if m != nil {
		return m.OrderFormSubmissionId
	}
	return ""
}

type GetRequest struct {
	// The business ID.
	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// The marketplace application ID.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// Deprecated: The unique identifier of the account in the application that corresponds to the business
	AccountId string `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// Deprecated: The unique identifier for the legacy Vendasta application being retrieved
	ProductId string `protobuf:"bytes,4,opt,name=product_id,json=productId" json:"product_id,omitempty"`
	// Optional id of the partner
	PartnerId string `protobuf:"bytes,5,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GetRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *GetRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *GetRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *GetRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *GetRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

type ListRequest struct {
	// The business ID.
	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// A cursor to be provided when fetching additional pages of results beyond the first
	Cursor string `protobuf:"bytes,2,opt,name=cursor" json:"cursor,omitempty"`
	// Size of the page to return
	PageSize int64 `protobuf:"varint,3,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	// Optional id of the partner
	PartnerId string `protobuf:"bytes,4,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ListRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *ListRequest) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *ListRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

type DeleteRequest struct {
	// The business ID.
	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// The marketplace application ID.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// Deprecated: The unique identifier of the account in the application that corresponds to the business
	AccountId string `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// Deprecated: The unique identifier for the legacy Vendasta application being deleted
	ProductId string `protobuf:"bytes,4,opt,name=product_id,json=productId" json:"product_id,omitempty"`
	// The blame information for this action
	DeactivationInfo *Blame `protobuf:"bytes,5,opt,name=deactivation_info,json=deactivationInfo" json:"deactivation_info,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *DeleteRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *DeleteRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *DeleteRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *DeleteRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *DeleteRequest) GetDeactivationInfo() *Blame {
	if m != nil {
		return m.DeactivationInfo
	}
	return nil
}

type UpdateExpiryRequest struct {
	// The business ID.
	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// The marketplace application ID.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// The unique identifier of the account in the application that corresponds to the business
	AccountId string `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// The time to trigger account deactivation.
	DeactivateOn *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=deactivate_on,json=deactivateOn" json:"deactivate_on,omitempty"`
	// Deprecated: The unique identifier for the legacy Vendasta application being updated
	ProductId string `protobuf:"bytes,5,opt,name=product_id,json=productId" json:"product_id,omitempty"`
}

func (m *UpdateExpiryRequest) Reset()                    { *m = UpdateExpiryRequest{} }
func (m *UpdateExpiryRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateExpiryRequest) ProtoMessage()               {}
func (*UpdateExpiryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *UpdateExpiryRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *UpdateExpiryRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *UpdateExpiryRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *UpdateExpiryRequest) GetDeactivateOn() *google_protobuf.Timestamp {
	if m != nil {
		return m.DeactivateOn
	}
	return nil
}

func (m *UpdateExpiryRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

type SetAutoRenewRequest struct {
	// The business ID.
	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// The app ID.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// The addon ID.
	AddonId string `protobuf:"bytes,3,opt,name=addon_id,json=addonId" json:"addon_id,omitempty"`
	// The state of auto renewal
	RenewalState RenewalState `protobuf:"varint,4,opt,name=renewal_state,json=renewalState,enum=accounts.v1.RenewalState" json:"renewal_state,omitempty"`
}

func (m *SetAutoRenewRequest) Reset()                    { *m = SetAutoRenewRequest{} }
func (m *SetAutoRenewRequest) String() string            { return proto.CompactTextString(m) }
func (*SetAutoRenewRequest) ProtoMessage()               {}
func (*SetAutoRenewRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *SetAutoRenewRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *SetAutoRenewRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *SetAutoRenewRequest) GetAddonId() string {
	if m != nil {
		return m.AddonId
	}
	return ""
}

func (m *SetAutoRenewRequest) GetRenewalState() RenewalState {
	if m != nil {
		return m.RenewalState
	}
	return RenewalState_ON
}

type DismissPendingActivationRequest struct {
	// The ID of the pending activation
	ActivationId string `protobuf:"bytes,1,opt,name=activation_id,json=activationId" json:"activation_id,omitempty"`
	// Who is dismissing the pending activation
	DismissedBy string `protobuf:"bytes,2,opt,name=dismissed_by,json=dismissedBy" json:"dismissed_by,omitempty"`
	// The business ID of the pending activation
	BusinessId string `protobuf:"bytes,3,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// The app id of the pending activation
	AppId string `protobuf:"bytes,4,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// The addon id of the pending activation, optional
	AddonId string `protobuf:"bytes,5,opt,name=addon_id,json=addonId" json:"addon_id,omitempty"`
}

func (m *DismissPendingActivationRequest) Reset()         { *m = DismissPendingActivationRequest{} }
func (m *DismissPendingActivationRequest) String() string { return proto.CompactTextString(m) }
func (*DismissPendingActivationRequest) ProtoMessage()    {}
func (*DismissPendingActivationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{14}
}

func (m *DismissPendingActivationRequest) GetActivationId() string {
	if m != nil {
		return m.ActivationId
	}
	return ""
}

func (m *DismissPendingActivationRequest) GetDismissedBy() string {
	if m != nil {
		return m.DismissedBy
	}
	return ""
}

func (m *DismissPendingActivationRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *DismissPendingActivationRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *DismissPendingActivationRequest) GetAddonId() string {
	if m != nil {
		return m.AddonId
	}
	return ""
}

type ResolvePendingActivationRequest struct {
	// The ID of the pending activation
	ActivationId string `protobuf:"bytes,1,opt,name=activation_id,json=activationId" json:"activation_id,omitempty"`
	// True for approved, False for rejected
	Approved bool `protobuf:"varint,2,opt,name=approved" json:"approved,omitempty"`
	// Reason for a rejection
	RejectedReason string `protobuf:"bytes,3,opt,name=rejected_reason,json=rejectedReason" json:"rejected_reason,omitempty"`
	// The external account identifier of the successfully activated account
	AccountId string `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// The business ID of the pending activation
	BusinessId string `protobuf:"bytes,5,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// The app id of the pending activation
	AppId string `protobuf:"bytes,6,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// The addon id of the pending activation, optional
	AddonId string `protobuf:"bytes,7,opt,name=addon_id,json=addonId" json:"addon_id,omitempty"`
}

func (m *ResolvePendingActivationRequest) Reset()         { *m = ResolvePendingActivationRequest{} }
func (m *ResolvePendingActivationRequest) String() string { return proto.CompactTextString(m) }
func (*ResolvePendingActivationRequest) ProtoMessage()    {}
func (*ResolvePendingActivationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{15}
}

func (m *ResolvePendingActivationRequest) GetActivationId() string {
	if m != nil {
		return m.ActivationId
	}
	return ""
}

func (m *ResolvePendingActivationRequest) GetApproved() bool {
	if m != nil {
		return m.Approved
	}
	return false
}

func (m *ResolvePendingActivationRequest) GetRejectedReason() string {
	if m != nil {
		return m.RejectedReason
	}
	return ""
}

func (m *ResolvePendingActivationRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *ResolvePendingActivationRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *ResolvePendingActivationRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *ResolvePendingActivationRequest) GetAddonId() string {
	if m != nil {
		return m.AddonId
	}
	return ""
}

type ListPendingActivationRequest struct {
	// The business ID you want a list of all pending activations for
	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
}

func (m *ListPendingActivationRequest) Reset()                    { *m = ListPendingActivationRequest{} }
func (m *ListPendingActivationRequest) String() string            { return proto.CompactTextString(m) }
func (*ListPendingActivationRequest) ProtoMessage()               {}
func (*ListPendingActivationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ListPendingActivationRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

type ListPendingActivationResponse struct {
	// A list of pending activations
	PendingActivations []*PendingActivation `protobuf:"bytes,1,rep,name=pending_activations,json=pendingActivations" json:"pending_activations,omitempty"`
}

func (m *ListPendingActivationResponse) Reset()                    { *m = ListPendingActivationResponse{} }
func (m *ListPendingActivationResponse) String() string            { return proto.CompactTextString(m) }
func (*ListPendingActivationResponse) ProtoMessage()               {}
func (*ListPendingActivationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ListPendingActivationResponse) GetPendingActivations() []*PendingActivation {
	if m != nil {
		return m.PendingActivations
	}
	return nil
}

type ActivateAddonResponse struct {
	// A unique ID assigned for this specific addon activation.
	ActivationId string `protobuf:"bytes,1,opt,name=activation_id,json=activationId" json:"activation_id,omitempty"`
	// The order form submission id, unique per activation.
	OrderFormSubmissionId string `protobuf:"bytes,2,opt,name=order_form_submission_id,json=orderFormSubmissionId" json:"order_form_submission_id,omitempty"`
}

func (m *ActivateAddonResponse) Reset()                    { *m = ActivateAddonResponse{} }
func (m *ActivateAddonResponse) String() string            { return proto.CompactTextString(m) }
func (*ActivateAddonResponse) ProtoMessage()               {}
func (*ActivateAddonResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ActivateAddonResponse) GetActivationId() string {
	if m != nil {
		return m.ActivationId
	}
	return ""
}

func (m *ActivateAddonResponse) GetOrderFormSubmissionId() string {
	if m != nil {
		return m.OrderFormSubmissionId
	}
	return ""
}

type ActivateAppResponse struct {
	// The unique identifier of the account in the application that corresponds to the business
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// A unique ID assigned for this specific app activation.
	ActivationId string `protobuf:"bytes,2,opt,name=activation_id,json=activationId" json:"activation_id,omitempty"`
}

func (m *ActivateAppResponse) Reset()                    { *m = ActivateAppResponse{} }
func (m *ActivateAppResponse) String() string            { return proto.CompactTextString(m) }
func (*ActivateAppResponse) ProtoMessage()               {}
func (*ActivateAppResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *ActivateAppResponse) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *ActivateAppResponse) GetActivationId() string {
	if m != nil {
		return m.ActivationId
	}
	return ""
}

type CreateResponse struct {
	// A unique ID assigned for this specific app activation.
	ActivationId string `protobuf:"bytes,1,opt,name=activation_id,json=activationId" json:"activation_id,omitempty"`
	// The order form submission id, unique per activation.
	OrderFormSubmissionId string `protobuf:"bytes,2,opt,name=order_form_submission_id,json=orderFormSubmissionId" json:"order_form_submission_id,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *CreateResponse) GetActivationId() string {
	if m != nil {
		return m.ActivationId
	}
	return ""
}

func (m *CreateResponse) GetOrderFormSubmissionId() string {
	if m != nil {
		return m.OrderFormSubmissionId
	}
	return ""
}

type GetResponse struct {
	// The Account identifier
	Account *Account `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *GetResponse) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type ListResponse struct {
	// A list of accounts
	Accounts []*Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
	// A cursor for the next page of results
	NextCursor string `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor" json:"next_cursor,omitempty"`
	// A flag to indicate there are more pages
	HasMore bool `protobuf:"varint,3,opt,name=has_more,json=hasMore" json:"has_more,omitempty"`
	// The total number of results
	TotalResults int64 `protobuf:"varint,4,opt,name=total_results,json=totalResults" json:"total_results,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *ListResponse) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *ListResponse) GetNextCursor() string {
	if m != nil {
		return m.NextCursor
	}
	return ""
}

func (m *ListResponse) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *ListResponse) GetTotalResults() int64 {
	if m != nil {
		return m.TotalResults
	}
	return 0
}

func init() {
	proto.RegisterType((*Account)(nil), "accounts.v1.Account")
	proto.RegisterType((*PendingActivation)(nil), "accounts.v1.PendingActivation")
	proto.RegisterType((*ActivateAddonRequest)(nil), "accounts.v1.ActivateAddonRequest")
	proto.RegisterType((*DeactivateAddonRequest)(nil), "accounts.v1.DeactivateAddonRequest")
	proto.RegisterType((*ActivateAppRequest)(nil), "accounts.v1.ActivateAppRequest")
	proto.RegisterType((*DeactivateAppRequest)(nil), "accounts.v1.DeactivateAppRequest")
	proto.RegisterType((*ListAddonActivationsRequest)(nil), "accounts.v1.ListAddonActivationsRequest")
	proto.RegisterType((*ListAddonActivationsResponse)(nil), "accounts.v1.ListAddonActivationsResponse")
	proto.RegisterType((*CreateRequest)(nil), "accounts.v1.CreateRequest")
	proto.RegisterType((*GetRequest)(nil), "accounts.v1.GetRequest")
	proto.RegisterType((*ListRequest)(nil), "accounts.v1.ListRequest")
	proto.RegisterType((*DeleteRequest)(nil), "accounts.v1.DeleteRequest")
	proto.RegisterType((*UpdateExpiryRequest)(nil), "accounts.v1.UpdateExpiryRequest")
	proto.RegisterType((*SetAutoRenewRequest)(nil), "accounts.v1.SetAutoRenewRequest")
	proto.RegisterType((*DismissPendingActivationRequest)(nil), "accounts.v1.DismissPendingActivationRequest")
	proto.RegisterType((*ResolvePendingActivationRequest)(nil), "accounts.v1.ResolvePendingActivationRequest")
	proto.RegisterType((*ListPendingActivationRequest)(nil), "accounts.v1.ListPendingActivationRequest")
	proto.RegisterType((*ListPendingActivationResponse)(nil), "accounts.v1.ListPendingActivationResponse")
	proto.RegisterType((*ActivateAddonResponse)(nil), "accounts.v1.ActivateAddonResponse")
	proto.RegisterType((*ActivateAppResponse)(nil), "accounts.v1.ActivateAppResponse")
	proto.RegisterType((*CreateResponse)(nil), "accounts.v1.CreateResponse")
	proto.RegisterType((*GetResponse)(nil), "accounts.v1.GetResponse")
	proto.RegisterType((*ListResponse)(nil), "accounts.v1.ListResponse")
	proto.RegisterEnum("accounts.v1.RenewalState", RenewalState_name, RenewalState_value)
	proto.RegisterEnum("accounts.v1.PendingActivation_Status", PendingActivation_Status_name, PendingActivation_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AccountsService service

type AccountsServiceClient interface {
	// ActivateAddon activates a marketplace addon on an account.
	ActivateAddon(ctx context.Context, in *ActivateAddonRequest, opts ...grpc.CallOption) (*ActivateAddonResponse, error)
	// DeactivateAddon deactivates a marketplace addon on an account.
	DeactivateAddon(ctx context.Context, in *DeactivateAddonRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// ActivateApp is used to activate a marketplace app on a business
	ActivateApp(ctx context.Context, in *ActivateAppRequest, opts ...grpc.CallOption) (*ActivateAppResponse, error)
	// DeactivateApp is used to deactivate a marketplace app on a business
	DeactivateApp(ctx context.Context, in *DeactivateAppRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// ListAddonActivations gets activations of an app's add-ons for a business
	ListAddonActivations(ctx context.Context, in *ListAddonActivationsRequest, opts ...grpc.CallOption) (*ListAddonActivationsResponse, error)
	// Deprecated: Create is used to activate an account.
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	// Deprecated: Delete is used to do a hard delete on an account.
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// Get is used to get an account.
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	// List is used to lookup a list of accounts.
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	// Deprecated: UpdateExpiry is used to expire an account.
	UpdateExpiry(ctx context.Context, in *UpdateExpiryRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// DismissPendingActivation sets the dismissed flag and dismissed_by string
	DismissPendingActivation(ctx context.Context, in *DismissPendingActivationRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// ResolvePendingActivation is used to accept or reject a pending activation
	ResolvePendingActivation(ctx context.Context, in *ResolvePendingActivationRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// ListPendingActivations gets pending activations for a business
	ListPendingActivations(ctx context.Context, in *ListPendingActivationRequest, opts ...grpc.CallOption) (*ListPendingActivationResponse, error)
}

type accountsServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccountsServiceClient(cc *grpc.ClientConn) AccountsServiceClient {
	return &accountsServiceClient{cc}
}

func (c *accountsServiceClient) ActivateAddon(ctx context.Context, in *ActivateAddonRequest, opts ...grpc.CallOption) (*ActivateAddonResponse, error) {
	out := new(ActivateAddonResponse)
	err := grpc.Invoke(ctx, "/accounts.v1.AccountsService/ActivateAddon", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsServiceClient) DeactivateAddon(ctx context.Context, in *DeactivateAddonRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/accounts.v1.AccountsService/DeactivateAddon", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsServiceClient) ActivateApp(ctx context.Context, in *ActivateAppRequest, opts ...grpc.CallOption) (*ActivateAppResponse, error) {
	out := new(ActivateAppResponse)
	err := grpc.Invoke(ctx, "/accounts.v1.AccountsService/ActivateApp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsServiceClient) DeactivateApp(ctx context.Context, in *DeactivateAppRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/accounts.v1.AccountsService/DeactivateApp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsServiceClient) ListAddonActivations(ctx context.Context, in *ListAddonActivationsRequest, opts ...grpc.CallOption) (*ListAddonActivationsResponse, error) {
	out := new(ListAddonActivationsResponse)
	err := grpc.Invoke(ctx, "/accounts.v1.AccountsService/ListAddonActivations", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := grpc.Invoke(ctx, "/accounts.v1.AccountsService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/accounts.v1.AccountsService/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := grpc.Invoke(ctx, "/accounts.v1.AccountsService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsServiceClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/accounts.v1.AccountsService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsServiceClient) UpdateExpiry(ctx context.Context, in *UpdateExpiryRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/accounts.v1.AccountsService/UpdateExpiry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsServiceClient) DismissPendingActivation(ctx context.Context, in *DismissPendingActivationRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/accounts.v1.AccountsService/DismissPendingActivation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsServiceClient) ResolvePendingActivation(ctx context.Context, in *ResolvePendingActivationRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/accounts.v1.AccountsService/ResolvePendingActivation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsServiceClient) ListPendingActivations(ctx context.Context, in *ListPendingActivationRequest, opts ...grpc.CallOption) (*ListPendingActivationResponse, error) {
	out := new(ListPendingActivationResponse)
	err := grpc.Invoke(ctx, "/accounts.v1.AccountsService/ListPendingActivations", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AccountsService service

type AccountsServiceServer interface {
	// ActivateAddon activates a marketplace addon on an account.
	ActivateAddon(context.Context, *ActivateAddonRequest) (*ActivateAddonResponse, error)
	// DeactivateAddon deactivates a marketplace addon on an account.
	DeactivateAddon(context.Context, *DeactivateAddonRequest) (*google_protobuf1.Empty, error)
	// ActivateApp is used to activate a marketplace app on a business
	ActivateApp(context.Context, *ActivateAppRequest) (*ActivateAppResponse, error)
	// DeactivateApp is used to deactivate a marketplace app on a business
	DeactivateApp(context.Context, *DeactivateAppRequest) (*google_protobuf1.Empty, error)
	// ListAddonActivations gets activations of an app's add-ons for a business
	ListAddonActivations(context.Context, *ListAddonActivationsRequest) (*ListAddonActivationsResponse, error)
	// Deprecated: Create is used to activate an account.
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	// Deprecated: Delete is used to do a hard delete on an account.
	Delete(context.Context, *DeleteRequest) (*google_protobuf1.Empty, error)
	// Get is used to get an account.
	Get(context.Context, *GetRequest) (*GetResponse, error)
	// List is used to lookup a list of accounts.
	List(context.Context, *ListRequest) (*ListResponse, error)
	// Deprecated: UpdateExpiry is used to expire an account.
	UpdateExpiry(context.Context, *UpdateExpiryRequest) (*google_protobuf1.Empty, error)
	// DismissPendingActivation sets the dismissed flag and dismissed_by string
	DismissPendingActivation(context.Context, *DismissPendingActivationRequest) (*google_protobuf1.Empty, error)
	// ResolvePendingActivation is used to accept or reject a pending activation
	ResolvePendingActivation(context.Context, *ResolvePendingActivationRequest) (*google_protobuf1.Empty, error)
	// ListPendingActivations gets pending activations for a business
	ListPendingActivations(context.Context, *ListPendingActivationRequest) (*ListPendingActivationResponse, error)
}

func RegisterAccountsServiceServer(s *grpc.Server, srv AccountsServiceServer) {
	s.RegisterService(&_AccountsService_serviceDesc, srv)
}

func _AccountsService_ActivateAddon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateAddonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServiceServer).ActivateAddon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.v1.AccountsService/ActivateAddon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServiceServer).ActivateAddon(ctx, req.(*ActivateAddonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountsService_DeactivateAddon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeactivateAddonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServiceServer).DeactivateAddon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.v1.AccountsService/DeactivateAddon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServiceServer).DeactivateAddon(ctx, req.(*DeactivateAddonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountsService_ActivateApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServiceServer).ActivateApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.v1.AccountsService/ActivateApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServiceServer).ActivateApp(ctx, req.(*ActivateAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountsService_DeactivateApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeactivateAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServiceServer).DeactivateApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.v1.AccountsService/DeactivateApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServiceServer).DeactivateApp(ctx, req.(*DeactivateAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountsService_ListAddonActivations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAddonActivationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServiceServer).ListAddonActivations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.v1.AccountsService/ListAddonActivations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServiceServer).ListAddonActivations(ctx, req.(*ListAddonActivationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountsService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.v1.AccountsService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountsService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.v1.AccountsService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServiceServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountsService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.v1.AccountsService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountsService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.v1.AccountsService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServiceServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountsService_UpdateExpiry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateExpiryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServiceServer).UpdateExpiry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.v1.AccountsService/UpdateExpiry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServiceServer).UpdateExpiry(ctx, req.(*UpdateExpiryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountsService_DismissPendingActivation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DismissPendingActivationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServiceServer).DismissPendingActivation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.v1.AccountsService/DismissPendingActivation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServiceServer).DismissPendingActivation(ctx, req.(*DismissPendingActivationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountsService_ResolvePendingActivation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResolvePendingActivationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServiceServer).ResolvePendingActivation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.v1.AccountsService/ResolvePendingActivation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServiceServer).ResolvePendingActivation(ctx, req.(*ResolvePendingActivationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountsService_ListPendingActivations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPendingActivationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServiceServer).ListPendingActivations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.v1.AccountsService/ListPendingActivations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServiceServer).ListPendingActivations(ctx, req.(*ListPendingActivationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "accounts.v1.AccountsService",
	HandlerType: (*AccountsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ActivateAddon",
			Handler:    _AccountsService_ActivateAddon_Handler,
		},
		{
			MethodName: "DeactivateAddon",
			Handler:    _AccountsService_DeactivateAddon_Handler,
		},
		{
			MethodName: "ActivateApp",
			Handler:    _AccountsService_ActivateApp_Handler,
		},
		{
			MethodName: "DeactivateApp",
			Handler:    _AccountsService_DeactivateApp_Handler,
		},
		{
			MethodName: "ListAddonActivations",
			Handler:    _AccountsService_ListAddonActivations_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _AccountsService_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _AccountsService_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _AccountsService_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _AccountsService_List_Handler,
		},
		{
			MethodName: "UpdateExpiry",
			Handler:    _AccountsService_UpdateExpiry_Handler,
		},
		{
			MethodName: "DismissPendingActivation",
			Handler:    _AccountsService_DismissPendingActivation_Handler,
		},
		{
			MethodName: "ResolvePendingActivation",
			Handler:    _AccountsService_ResolvePendingActivation_Handler,
		},
		{
			MethodName: "ListPendingActivations",
			Handler:    _AccountsService_ListPendingActivations_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "accounts/v1/api.proto",
}

// Client API for FulfillmentService service

type FulfillmentServiceClient interface {
	// SetAutoRenew is used to update or set the state.
	SetAutoRenew(ctx context.Context, in *SetAutoRenewRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
}

type fulfillmentServiceClient struct {
	cc *grpc.ClientConn
}

func NewFulfillmentServiceClient(cc *grpc.ClientConn) FulfillmentServiceClient {
	return &fulfillmentServiceClient{cc}
}

func (c *fulfillmentServiceClient) SetAutoRenew(ctx context.Context, in *SetAutoRenewRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/accounts.v1.FulfillmentService/SetAutoRenew", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FulfillmentService service

type FulfillmentServiceServer interface {
	// SetAutoRenew is used to update or set the state.
	SetAutoRenew(context.Context, *SetAutoRenewRequest) (*google_protobuf1.Empty, error)
}

func RegisterFulfillmentServiceServer(s *grpc.Server, srv FulfillmentServiceServer) {
	s.RegisterService(&_FulfillmentService_serviceDesc, srv)
}

func _FulfillmentService_SetAutoRenew_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAutoRenewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FulfillmentServiceServer).SetAutoRenew(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.v1.FulfillmentService/SetAutoRenew",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FulfillmentServiceServer).SetAutoRenew(ctx, req.(*SetAutoRenewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FulfillmentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "accounts.v1.FulfillmentService",
	HandlerType: (*FulfillmentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetAutoRenew",
			Handler:    _FulfillmentService_SetAutoRenew_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "accounts/v1/api.proto",
}

func init() { proto.RegisterFile("accounts/v1/api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1574 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x58, 0x5b, 0x6f, 0xdc, 0x44,
	0x14, 0x8e, 0xf7, 0x9e, 0xb3, 0x97, 0x6c, 0x27, 0x97, 0x6e, 0x36, 0x2d, 0x49, 0x5d, 0x21, 0x42,
	0x55, 0x6d, 0x68, 0x78, 0x00, 0x51, 0xda, 0x2a, 0x97, 0x4d, 0xbb, 0x15, 0x34, 0x91, 0xd3, 0x22,
	0x78, 0xc1, 0x75, 0xd6, 0x93, 0xd4, 0xb0, 0x6b, 0x1b, 0xcf, 0x38, 0x34, 0x7d, 0xe4, 0x0f, 0xf0,
	0x1b, 0x78, 0xe3, 0x47, 0x20, 0xf5, 0x05, 0xf1, 0xc4, 0x5f, 0x41, 0xe2, 0x85, 0x37, 0x90, 0xd0,
	0x8c, 0xc7, 0xbb, 0xbe, 0xef, 0xae, 0x42, 0x78, 0xf4, 0xb9, 0xcd, 0xb9, 0x7c, 0x73, 0xce, 0x19,
	0xc3, 0xb2, 0xd6, 0xef, 0x5b, 0xae, 0x49, 0xc9, 0xd6, 0xf9, 0xbd, 0x2d, 0xcd, 0x36, 0x3a, 0xb6,
	0x63, 0x51, 0x0b, 0x55, 0x7d, 0x72, 0xe7, 0xfc, 0x5e, 0x7b, 0xfd, 0xcc, 0xb2, 0xce, 0x06, 0x78,
	0x8b, 0xb3, 0x4e, 0xdc, 0xd3, 0x2d, 0x6a, 0x0c, 0x31, 0xa1, 0xda, 0xd0, 0xf6, 0xa4, 0xdb, 0x6b,
	0x51, 0x01, 0x3c, 0xb4, 0xe9, 0x85, 0x60, 0xb6, 0x42, 0x27, 0xe8, 0xba, 0x65, 0x12, 0xc1, 0xb9,
	0x1e, 0xe4, 0x9c, 0x0c, 0xb4, 0x21, 0xf6, 0x18, 0xf2, 0xdb, 0x02, 0x94, 0x77, 0x3c, 0x1e, 0xba,
	0x09, 0x20, 0xc4, 0x54, 0x43, 0x6f, 0x49, 0x1b, 0xd2, 0xe6, 0xbc, 0x32, 0x2f, 0x28, 0x3d, 0x1d,
	0xad, 0x43, 0xf5, 0xc4, 0x25, 0x86, 0x89, 0x09, 0x61, 0xfc, 0x1c, 0xe7, 0x83, 0x4f, 0xea, 0xe9,
	0x4c, 0xdf, 0xd6, 0x1c, 0x6a, 0x62, 0x87, 0xf1, 0xf3, 0x9e, 0xbe, 0xa0, 0x08, 0xb6, 0x63, 0xe9,
	0x6e, 0x9f, 0x9b, 0x2f, 0x08, 0xb6, 0x47, 0xe9, 0xe9, 0x68, 0x19, 0x4a, 0x9a, 0x6d, 0x33, 0x56,
	0x91, 0xb3, 0x8a, 0x9a, 0x6d, 0xf7, 0x74, 0xb4, 0x09, 0xcd, 0xbe, 0x4b, 0xa8, 0x35, 0x54, 0xb1,
	0x49, 0x9d, 0x0b, 0xd5, 0x75, 0x06, 0xad, 0x12, 0x17, 0x68, 0x78, 0xf4, 0x2e, 0x23, 0xbf, 0x70,
	0x06, 0xe8, 0x2e, 0x20, 0x97, 0x60, 0x47, 0xed, 0x5b, 0x26, 0xd5, 0xfa, 0x54, 0xc5, 0x43, 0xcd,
	0x18, 0xb4, 0xca, 0x5c, 0xb6, 0xc9, 0x38, 0x7b, 0x1e, 0xa3, 0xcb, 0xe8, 0xe8, 0x13, 0x16, 0x2c,
	0x35, 0xce, 0x35, 0x6a, 0x58, 0x66, 0xab, 0xb2, 0x21, 0x6d, 0x56, 0xb7, 0xdb, 0x1d, 0x2f, 0xbb,
	0x1d, 0x3f, 0xbb, 0x9d, 0xe7, 0x7e, 0xfa, 0x95, 0x80, 0x34, 0x7a, 0x08, 0x35, 0x1d, 0x07, 0xb4,
	0xe7, 0x27, 0x6a, 0x87, 0xe4, 0xd1, 0x12, 0x14, 0xa9, 0x63, 0x68, 0x83, 0x16, 0x6c, 0x48, 0x9b,
	0x15, 0xc5, 0xfb, 0x40, 0x1f, 0x41, 0xcb, 0x72, 0x74, 0xec, 0xa8, 0xa7, 0x96, 0x33, 0x54, 0x89,
	0x7b, 0x32, 0x34, 0x08, 0x31, 0x2c, 0x93, 0xa5, 0xa4, 0xca, 0xa3, 0x58, 0xe6, 0xfc, 0x03, 0xcb,
	0x19, 0x1e, 0x8f, 0xb8, 0x3d, 0x1d, 0xdd, 0x87, 0x85, 0xb1, 0x71, 0xd5, 0x30, 0x4f, 0xad, 0x56,
	0x8d, 0x7b, 0x84, 0x3a, 0x01, 0x6c, 0x75, 0x76, 0x59, 0xd9, 0x95, 0xc6, 0x58, 0xb4, 0x67, 0x9e,
	0x5a, 0xe8, 0x11, 0x5c, 0x0b, 0xfa, 0xe6, 0xa9, 0xd7, 0x53, 0xd5, 0x9b, 0x41, 0x61, 0x66, 0x40,
	0xfe, 0xb5, 0x00, 0xd7, 0x8e, 0xb0, 0xa9, 0x1b, 0xe6, 0xd9, 0xce, 0x38, 0xc4, 0xdb, 0x50, 0x0f,
	0x1a, 0xf5, 0xe1, 0x54, 0x0b, 0x28, 0x4f, 0x81, 0xa8, 0x07, 0x50, 0x22, 0x54, 0xa3, 0x2e, 0xe1,
	0x68, 0x6a, 0x6c, 0xbf, 0x1b, 0xf2, 0x28, 0x76, 0x6a, 0xe7, 0x98, 0x0b, 0x2b, 0x42, 0x09, 0xbd,
	0x07, 0x0b, 0x0e, 0xfe, 0x06, 0xf7, 0x29, 0xd6, 0x55, 0x07, 0x6b, 0xc4, 0x32, 0x05, 0xec, 0x1a,
	0x3e, 0x59, 0xe1, 0x54, 0x74, 0x0b, 0x6a, 0xba, 0x41, 0x58, 0x46, 0xb1, 0xae, 0x9e, 0x5c, 0x08,
	0x04, 0x56, 0x47, 0xb4, 0xdd, 0x0b, 0xf4, 0x00, 0x6a, 0x7d, 0x07, 0x6b, 0xcc, 0x94, 0xae, 0x51,
	0xcc, 0x31, 0x98, 0x5d, 0xf3, 0xaa, 0x90, 0xdf, 0xd7, 0x28, 0x66, 0xea, 0xae, 0xad, 0x8f, 0xd5,
	0xcb, 0x93, 0xd5, 0x85, 0xbc, 0x50, 0x6f, 0xb0, 0xcb, 0x11, 0x43, 0xec, 0x52, 0x28, 0x21, 0xe2,
	0x22, 0x3f, 0x99, 0x53, 0xea, 0x9a, 0x6d, 0x07, 0xaa, 0xd1, 0x83, 0x26, 0x6f, 0x07, 0x6a, 0x0c,
	0xb4, 0x37, 0xc2, 0x06, 0x98, 0xd0, 0x58, 0xef, 0xc9, 0x9c, 0xb2, 0xa0, 0x85, 0x49, 0x81, 0x6b,
	0x0a, 0x81, 0x6b, 0x2a, 0xdf, 0x83, 0x92, 0x97, 0x7c, 0x54, 0x85, 0xf2, 0x51, 0xf7, 0xd9, 0x7e,
	0xef, 0xd9, 0xe3, 0xe6, 0x1c, 0xaa, 0x41, 0x65, 0xe7, 0xe8, 0x48, 0x39, 0xfc, 0xa2, 0xbb, 0xdf,
	0x94, 0xd8, 0x97, 0xd2, 0x7d, 0xda, 0xdd, 0x7b, 0xde, 0xdd, 0x6f, 0xe6, 0x76, 0x6b, 0xc1, 0x1b,
	0x28, 0xff, 0x9d, 0x83, 0x25, 0x71, 0x0c, 0xe6, 0x6e, 0x28, 0xf8, 0x3b, 0x17, 0x13, 0x1a, 0x05,
	0x89, 0x14, 0x03, 0xc9, 0xd8, 0xa3, 0x5c, 0xb0, 0x71, 0xac, 0x42, 0xc5, 0x8b, 0x79, 0xd4, 0x8b,
	0xca, 0xfc, 0x3b, 0xd6, 0xa8, 0x0a, 0xd1, 0x46, 0x95, 0x75, 0x11, 0x8b, 0xd9, 0x17, 0xb1, 0x2a,
	0x22, 0xc2, 0xaa, 0x65, 0x4e, 0x01, 0x11, 0x3f, 0x01, 0xf8, 0xd0, 0x44, 0x8f, 0xa0, 0x3e, 0xba,
	0x5b, 0x5c, 0xbd, 0x3c, 0x43, 0x57, 0x61, 0x06, 0x12, 0xda, 0x40, 0x65, 0xda, 0x36, 0x20, 0xff,
	0x29, 0xc1, 0xca, 0xfe, 0xc8, 0xda, 0x55, 0x17, 0x20, 0xd6, 0x1d, 0x0a, 0x09, 0xdd, 0x21, 0x5c,
	0xa5, 0x62, 0xb4, 0x4a, 0x89, 0x8d, 0xab, 0x34, 0x43, 0xe3, 0xfa, 0x2b, 0x07, 0x68, 0x84, 0x38,
	0xdb, 0xbe, 0x6c, 0xb8, 0x13, 0xa6, 0x5f, 0x16, 0xa8, 0x0a, 0x33, 0x80, 0xaa, 0x78, 0x39, 0x50,
	0x95, 0x66, 0x04, 0xd5, 0x68, 0x54, 0x95, 0x83, 0xa3, 0xea, 0x52, 0x50, 0xfb, 0x51, 0x82, 0xa5,
	0x00, 0xd4, 0x2e, 0x9f, 0xf9, 0x44, 0x24, 0xe4, 0x67, 0x40, 0xc2, 0x0b, 0x58, 0xfb, 0xcc, 0x20,
	0x34, 0xd2, 0xfd, 0xc8, 0x25, 0xfd, 0x92, 0xbf, 0x86, 0x1b, 0xc9, 0x66, 0x89, 0x6d, 0x99, 0x04,
	0xa3, 0x87, 0xa3, 0xca, 0x32, 0x72, 0x4b, 0xda, 0xc8, 0x4f, 0x6a, 0xc8, 0x4a, 0x50, 0x41, 0xfe,
	0x23, 0x07, 0xf5, 0x3d, 0x3e, 0x63, 0xa6, 0xf6, 0x34, 0xbc, 0xe2, 0xe5, 0xa2, 0x2b, 0xde, 0x38,
	0x90, 0x7c, 0x14, 0xda, 0x19, 0x9b, 0x5b, 0xd2, 0x8a, 0x56, 0x9c, 0x61, 0x45, 0x2b, 0xa5, 0xac,
	0x68, 0xc9, 0xd8, 0x8b, 0x41, 0xba, 0x32, 0x23, 0xa4, 0xb3, 0x6e, 0xe2, 0x7c, 0xc6, 0x4d, 0x94,
	0x7f, 0x92, 0x00, 0x1e, 0x63, 0xfa, 0x1f, 0x34, 0x8a, 0x40, 0x0d, 0xf2, 0xd1, 0x1a, 0x4c, 0x48,
	0x76, 0x76, 0x57, 0x94, 0x7f, 0x90, 0xa0, 0xca, 0x40, 0x37, 0xb5, 0x93, 0x2b, 0x50, 0xea, 0xbb,
	0x0e, 0xb1, 0x1c, 0xe1, 0xa4, 0xf8, 0x42, 0x6b, 0x30, 0x6f, 0x6b, 0x67, 0x58, 0x25, 0xc6, 0x1b,
	0xcc, 0x9d, 0xcc, 0x2b, 0x15, 0x46, 0x38, 0x36, 0xde, 0xe0, 0x09, 0x03, 0x54, 0xfe, 0x4d, 0x82,
	0xfa, 0x3e, 0x1e, 0xe0, 0x19, 0x80, 0x79, 0x25, 0xb9, 0x4a, 0x6c, 0x0c, 0xc5, 0x19, 0x1a, 0xc3,
	0xef, 0x12, 0x2c, 0xbe, 0xe0, 0x6b, 0x58, 0xf7, 0xb5, 0x6d, 0x38, 0x17, 0x57, 0x1c, 0x4e, 0x0c,
	0xda, 0x85, 0x19, 0xa1, 0x1d, 0xce, 0x47, 0x31, 0x92, 0x0f, 0xf9, 0x67, 0x09, 0x16, 0x8f, 0x31,
	0xdd, 0x71, 0xa9, 0xa5, 0x60, 0x13, 0x7f, 0x7f, 0x85, 0x13, 0xfe, 0x21, 0xd4, 0x1d, 0x76, 0x84,
	0x36, 0x50, 0xd9, 0x32, 0x8e, 0x79, 0x28, 0x8d, 0xed, 0xd5, 0x50, 0xda, 0x15, 0x4f, 0x82, 0x2d,
	0x8e, 0x58, 0xa9, 0x39, 0x81, 0x2f, 0xf9, 0x17, 0x09, 0xd6, 0xf7, 0xbd, 0xf5, 0x3b, 0xb6, 0xe6,
	0xfb, 0x6e, 0x4f, 0xf5, 0xc6, 0x88, 0xae, 0xf6, 0xb9, 0xf8, 0x6a, 0x1f, 0x09, 0x3f, 0x9f, 0x11,
	0x7e, 0x21, 0x2d, 0xfc, 0x62, 0x28, 0x7c, 0xf9, 0x1f, 0x09, 0xd6, 0x15, 0x4c, 0xac, 0xc1, 0x39,
	0xbe, 0x9c, 0xfb, 0x6d, 0xa8, 0x68, 0xb6, 0xed, 0x58, 0xe7, 0xd8, 0xcb, 0x7d, 0x45, 0x19, 0x7d,
	0x27, 0x3d, 0x6f, 0xf2, 0x89, 0xcf, 0x9b, 0x30, 0xec, 0x0a, 0x13, 0x1e, 0xf6, 0xc5, 0x8c, 0xf8,
	0x4b, 0x69, 0xf1, 0x97, 0xc3, 0xf1, 0x3f, 0xf2, 0x46, 0x5f, 0x6a, 0xec, 0x93, 0x10, 0x27, 0xdb,
	0x70, 0x33, 0xc5, 0x80, 0x18, 0x9e, 0x87, 0xb0, 0x68, 0x7b, 0x4c, 0x35, 0x3e, 0x44, 0xdf, 0xc9,
	0x7e, 0x27, 0x2a, 0xc8, 0x8e, 0x92, 0x88, 0xec, 0xc2, 0x72, 0xe4, 0xfd, 0x21, 0x4e, 0x9a, 0xaa,
	0x4e, 0x59, 0x43, 0x25, 0x97, 0x35, 0x54, 0xbe, 0x82, 0xc5, 0xd0, 0x12, 0x2a, 0x0e, 0x9d, 0xf0,
	0x2f, 0x26, 0xe6, 0x53, 0x2e, 0xee, 0x93, 0x6c, 0x42, 0xc3, 0x5f, 0x0f, 0xfe, 0x97, 0x50, 0x1e,
	0x40, 0x95, 0x8f, 0x47, 0x71, 0x58, 0x07, 0xca, 0xc2, 0x61, 0x7e, 0x4c, 0xca, 0x63, 0x55, 0xf1,
	0x85, 0xd8, 0x78, 0xad, 0x79, 0xa3, 0x4b, 0x18, 0xf8, 0x00, 0x2a, 0xbe, 0x82, 0xa8, 0x6b, 0xb2,
	0x85, 0x91, 0x14, 0x83, 0x95, 0x89, 0x5f, 0x53, 0x35, 0x34, 0xd1, 0x80, 0x91, 0xf6, 0xbc, 0xa9,
	0xb6, 0x0a, 0x95, 0x57, 0x1a, 0x51, 0x87, 0x96, 0xe3, 0x0d, 0xb5, 0x8a, 0x52, 0x7e, 0xa5, 0x91,
	0xcf, 0x2d, 0x87, 0xe7, 0x86, 0x5a, 0x54, 0x1b, 0xa8, 0x0e, 0x26, 0xee, 0x80, 0x12, 0x7e, 0x4f,
	0xf2, 0x4a, 0x8d, 0x13, 0x15, 0x8f, 0x76, 0x67, 0x1d, 0x6a, 0xc1, 0xa6, 0x85, 0x4a, 0x90, 0x3b,
	0x7c, 0xd6, 0x9c, 0x43, 0x65, 0xc8, 0x1f, 0x1e, 0x1c, 0x34, 0xa5, 0xed, 0xb7, 0x15, 0x58, 0x10,
	0x7e, 0x91, 0x63, 0xec, 0x9c, 0x1b, 0x7d, 0x8c, 0xbe, 0x84, 0x7a, 0x08, 0x59, 0xe8, 0x56, 0x24,
	0x8c, 0xf8, 0xa3, 0xab, 0x2d, 0x67, 0x89, 0x78, 0xf9, 0x91, 0xe7, 0xd0, 0x11, 0x2c, 0x44, 0x1e,
	0x6d, 0xe8, 0x76, 0x48, 0x31, 0xf9, 0x49, 0xd7, 0x5e, 0x89, 0x4d, 0x94, 0xee, 0xd0, 0xa6, 0x17,
	0xdc, 0x62, 0x35, 0x00, 0x47, 0xb4, 0x9e, 0xec, 0xc6, 0x68, 0x67, 0x6f, 0x6f, 0xa4, 0x0b, 0x88,
	0x2a, 0x3e, 0x65, 0xbb, 0x40, 0x60, 0xdb, 0x8f, 0x44, 0x9f, 0xf4, 0x12, 0x48, 0xf3, 0x0f, 0x7d,
	0x0b, 0x4b, 0x49, 0x1b, 0x35, 0xda, 0x0c, 0x99, 0xcc, 0xd8, 0xe5, 0xdb, 0xef, 0x4f, 0x21, 0x29,
	0x1c, 0xdf, 0x81, 0x92, 0x77, 0x7d, 0x50, 0x3b, 0xa4, 0x14, 0x5a, 0xb9, 0xdb, 0x6b, 0x89, 0x3c,
	0x61, 0xe2, 0x53, 0x28, 0x79, 0x7b, 0x50, 0xc4, 0x44, 0x68, 0x39, 0x4a, 0x8d, 0xf6, 0x63, 0xc8,
	0x3f, 0xc6, 0x14, 0x5d, 0x0f, 0xa9, 0x8e, 0x17, 0xd0, 0x76, 0x2b, 0xce, 0x10, 0xe7, 0xde, 0x87,
	0x02, 0x0b, 0x0d, 0xb5, 0x62, 0xd1, 0xfa, 0xba, 0xab, 0x09, 0x1c, 0xa1, 0xfc, 0x04, 0x6a, 0xc1,
	0x9d, 0x07, 0x85, 0x4b, 0x9c, 0xb0, 0x0e, 0xa5, 0x06, 0xf0, 0x12, 0x5a, 0x69, 0x33, 0x1c, 0xdd,
	0x0d, 0x27, 0x24, 0x7b, 0xd4, 0x67, 0x9d, 0x90, 0x36, 0x66, 0x23, 0x27, 0x4c, 0x98, 0xc6, 0xa9,
	0x27, 0x58, 0xb0, 0x92, 0x38, 0x88, 0x08, 0x8a, 0x43, 0x29, 0xd5, 0xf8, 0x9d, 0x69, 0x44, 0xbd,
	0xf4, 0x6f, 0xbf, 0x04, 0x74, 0xe0, 0x0e, 0x4e, 0x8d, 0xc1, 0x60, 0x88, 0x4d, 0xea, 0xf7, 0x90,
	0xa7, 0x50, 0x0b, 0x6e, 0x6e, 0x91, 0xa2, 0x24, 0x2c, 0x75, 0xe9, 0x77, 0x7c, 0xf7, 0x0e, 0xb4,
	0xfa, 0xd6, 0xb0, 0x73, 0x8e, 0x4d, 0x5d, 0x23, 0x54, 0x0b, 0x5a, 0xda, 0x6d, 0xf8, 0xcd, 0xeb,
	0x88, 0x69, 0x91, 0x93, 0x12, 0xd7, 0xfe, 0xf0, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xca, 0x5a,
	0xf4, 0xfb, 0xbd, 0x18, 0x00, 0x00,
}
