// Code generated by protoc-gen-go. DO NOT EDIT.
// source: snapshot/v1/snapshot.proto

package snapshot_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Available grades of a snapshot report or section
type Grade int32

const (
	Grade_NO_GRADE Grade = 0
	Grade_A        Grade = 1
	Grade_B        Grade = 2
	Grade_C        Grade = 3
	Grade_D        Grade = 4
	Grade_F        Grade = 5
)

var Grade_name = map[int32]string{
	0: "NO_GRADE",
	1: "A",
	2: "B",
	3: "C",
	4: "D",
	5: "F",
}
var Grade_value = map[string]int32{
	"NO_GRADE": 0,
	"A":        1,
	"B":        2,
	"C":        3,
	"D":        4,
	"F":        5,
}

func (x Grade) String() string {
	return proto.EnumName(Grade_name, int32(x))
}
func (Grade) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

// The types of videos for the whole report
type GlobalConfig_VideoStyle int32

const (
	// Don't show videos
	GlobalConfig_NO_VIDEOS GlobalConfig_VideoStyle = 0
	// Show the legacy north american videos
	GlobalConfig_NORTH_AMERICAN_LEGACY GlobalConfig_VideoStyle = 1
	// Show the current north american videos
	GlobalConfig_NORTH_AMERICAN GlobalConfig_VideoStyle = 2
	// Show the australia videos
	GlobalConfig_AUSTRALIAN GlobalConfig_VideoStyle = 3
)

var GlobalConfig_VideoStyle_name = map[int32]string{
	0: "NO_VIDEOS",
	1: "NORTH_AMERICAN_LEGACY",
	2: "NORTH_AMERICAN",
	3: "AUSTRALIAN",
}
var GlobalConfig_VideoStyle_value = map[string]int32{
	"NO_VIDEOS":             0,
	"NORTH_AMERICAN_LEGACY": 1,
	"NORTH_AMERICAN":        2,
	"AUSTRALIAN":            3,
}

func (x GlobalConfig_VideoStyle) String() string {
	return proto.EnumName(GlobalConfig_VideoStyle_name, int32(x))
}
func (GlobalConfig_VideoStyle) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0, 0} }

// The sections that can be enabled for a snapshot report
type GlobalConfig_EnabledSection int32

const (
	GlobalConfig_REVIEWS GlobalConfig_EnabledSection = 0
)

var GlobalConfig_EnabledSection_name = map[int32]string{
	0: "REVIEWS",
}
var GlobalConfig_EnabledSection_value = map[string]int32{
	"REVIEWS": 0,
}

func (x GlobalConfig_EnabledSection) String() string {
	return proto.EnumName(GlobalConfig_EnabledSection_name, int32(x))
}
func (GlobalConfig_EnabledSection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 1}
}

// GlobalConfig is the global config for a snapshot
type GlobalConfig struct {
	// Whether or not to hide grades
	HideGrades bool `protobuf:"varint,1,opt,name=hide_grades,json=hideGrades" json:"hide_grades,omitempty"`
	// The type of videos to show
	VideoStyle GlobalConfig_VideoStyle `protobuf:"varint,2,opt,name=video_style,json=videoStyle,enum=snapshot.v1.GlobalConfig_VideoStyle" json:"video_style,omitempty"`
	// Whether or not to hide images
	HideImages bool `protobuf:"varint,3,opt,name=hide_images,json=hideImages" json:"hide_images,omitempty"`
	// The sections enabled and the order to display them in
	EnabledSections []GlobalConfig_EnabledSection `protobuf:"varint,6,rep,packed,name=enabled_sections,json=enabledSections,enum=snapshot.v1.GlobalConfig_EnabledSection" json:"enabled_sections,omitempty"`
}

func (m *GlobalConfig) Reset()                    { *m = GlobalConfig{} }
func (m *GlobalConfig) String() string            { return proto.CompactTextString(m) }
func (*GlobalConfig) ProtoMessage()               {}
func (*GlobalConfig) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *GlobalConfig) GetHideGrades() bool {
	if m != nil {
		return m.HideGrades
	}
	return false
}

func (m *GlobalConfig) GetVideoStyle() GlobalConfig_VideoStyle {
	if m != nil {
		return m.VideoStyle
	}
	return GlobalConfig_NO_VIDEOS
}

func (m *GlobalConfig) GetHideImages() bool {
	if m != nil {
		return m.HideImages
	}
	return false
}

func (m *GlobalConfig) GetEnabledSections() []GlobalConfig_EnabledSection {
	if m != nil {
		return m.EnabledSections
	}
	return nil
}

// SectionContent contains the meta information for each section of the report
type SectionContent struct {
	// The message_id is calculated based off the data of the section and corresponds to the message content to show.
	// If customized message on the section is set, that should override this message id
	MessageId string `protobuf:"bytes,2,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	// The video_id is calculated based of the data of the section and corresponds to the video to show.
	// This video id does not take into account the language setting of the snapshot report and
	VideoId string `protobuf:"bytes,3,opt,name=video_id,json=videoId" json:"video_id,omitempty"`
}

func (m *SectionContent) Reset()                    { *m = SectionContent{} }
func (m *SectionContent) String() string            { return proto.CompactTextString(m) }
func (*SectionContent) ProtoMessage()               {}
func (*SectionContent) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *SectionContent) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func (m *SectionContent) GetVideoId() string {
	if m != nil {
		return m.VideoId
	}
	return ""
}

// Snapshot is the parent entity that represents the snapshot as a whole
type Snapshot struct {
	// The unique id of this snapshot
	SnapshotId string `protobuf:"bytes,1,opt,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`
	// The id of the buisness this report was generated for
	BusinessId string `protobuf:"bytes,2,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// The configuration of this snapshot
	Config *GlobalConfig `protobuf:"bytes,3,opt,name=config" json:"config,omitempty"`
	// When this snapshot was created
	Created *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=created" json:"created,omitempty"`
	// When this snapshot has expired or will expire
	Expired *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=expired" json:"expired,omitempty"`
}

func (m *Snapshot) Reset()                    { *m = Snapshot{} }
func (m *Snapshot) String() string            { return proto.CompactTextString(m) }
func (*Snapshot) ProtoMessage()               {}
func (*Snapshot) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *Snapshot) GetSnapshotId() string {
	if m != nil {
		return m.SnapshotId
	}
	return ""
}

func (m *Snapshot) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *Snapshot) GetConfig() *GlobalConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *Snapshot) GetCreated() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Snapshot) GetExpired() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Expired
	}
	return nil
}

type CreateSnapshotRequest struct {
	// The id of the business to create the snapshot for
	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
}

func (m *CreateSnapshotRequest) Reset()                    { *m = CreateSnapshotRequest{} }
func (m *CreateSnapshotRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateSnapshotRequest) ProtoMessage()               {}
func (*CreateSnapshotRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *CreateSnapshotRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

type CreateSnapshotResponse struct {
	// The id of the snapshot that is being created
	SnapshotId string `protobuf:"bytes,1,opt,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`
}

func (m *CreateSnapshotResponse) Reset()                    { *m = CreateSnapshotResponse{} }
func (m *CreateSnapshotResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateSnapshotResponse) ProtoMessage()               {}
func (*CreateSnapshotResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

func (m *CreateSnapshotResponse) GetSnapshotId() string {
	if m != nil {
		return m.SnapshotId
	}
	return ""
}

type GetSnapshotRequest struct {
	// The id of the snapshot to get
	SnapshotId string `protobuf:"bytes,1,opt,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`
}

func (m *GetSnapshotRequest) Reset()                    { *m = GetSnapshotRequest{} }
func (m *GetSnapshotRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSnapshotRequest) ProtoMessage()               {}
func (*GetSnapshotRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

func (m *GetSnapshotRequest) GetSnapshotId() string {
	if m != nil {
		return m.SnapshotId
	}
	return ""
}

type GetSnapshotResponse struct {
	Snapshot *Snapshot `protobuf:"bytes,1,opt,name=snapshot" json:"snapshot,omitempty"`
}

func (m *GetSnapshotResponse) Reset()                    { *m = GetSnapshotResponse{} }
func (m *GetSnapshotResponse) String() string            { return proto.CompactTextString(m) }
func (*GetSnapshotResponse) ProtoMessage()               {}
func (*GetSnapshotResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

func (m *GetSnapshotResponse) GetSnapshot() *Snapshot {
	if m != nil {
		return m.Snapshot
	}
	return nil
}

type UpdateSnapshotConfigRequest struct {
	// The id of the snapshot to update the config for
	SnapshotId string        `protobuf:"bytes,1,opt,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`
	Config     *GlobalConfig `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
	// Mask for what fields should be updated
	FieldMask *FieldMask `protobuf:"bytes,20,opt,name=field_mask,json=fieldMask" json:"field_mask,omitempty"`
}

func (m *UpdateSnapshotConfigRequest) Reset()                    { *m = UpdateSnapshotConfigRequest{} }
func (m *UpdateSnapshotConfigRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateSnapshotConfigRequest) ProtoMessage()               {}
func (*UpdateSnapshotConfigRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{7} }

func (m *UpdateSnapshotConfigRequest) GetSnapshotId() string {
	if m != nil {
		return m.SnapshotId
	}
	return ""
}

func (m *UpdateSnapshotConfigRequest) GetConfig() *GlobalConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *UpdateSnapshotConfigRequest) GetFieldMask() *FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

type GetSnapshotIDRequest struct {
	// The id of the partner (required)
	PartnerId string `protobuf:"bytes,1,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// The id of the market (optional)
	MarketId string `protobuf:"bytes,2,opt,name=market_id,json=marketId" json:"market_id,omitempty"`
}

func (m *GetSnapshotIDRequest) Reset()                    { *m = GetSnapshotIDRequest{} }
func (m *GetSnapshotIDRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSnapshotIDRequest) ProtoMessage()               {}
func (*GetSnapshotIDRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{8} }

func (m *GetSnapshotIDRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *GetSnapshotIDRequest) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

type GetSnapshotIDResponse struct {
	// The opaque snapshot id to get the snapshot with to edit the default configs
	// There are no guarantees on the structure of this id, and it may change at any time
	// you should treat is as an opaque random string and not try to build it manually
	SnapshotId string `protobuf:"bytes,1,opt,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`
}

func (m *GetSnapshotIDResponse) Reset()                    { *m = GetSnapshotIDResponse{} }
func (m *GetSnapshotIDResponse) String() string            { return proto.CompactTextString(m) }
func (*GetSnapshotIDResponse) ProtoMessage()               {}
func (*GetSnapshotIDResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{9} }

func (m *GetSnapshotIDResponse) GetSnapshotId() string {
	if m != nil {
		return m.SnapshotId
	}
	return ""
}

func init() {
	proto.RegisterType((*GlobalConfig)(nil), "snapshot.v1.GlobalConfig")
	proto.RegisterType((*SectionContent)(nil), "snapshot.v1.SectionContent")
	proto.RegisterType((*Snapshot)(nil), "snapshot.v1.Snapshot")
	proto.RegisterType((*CreateSnapshotRequest)(nil), "snapshot.v1.CreateSnapshotRequest")
	proto.RegisterType((*CreateSnapshotResponse)(nil), "snapshot.v1.CreateSnapshotResponse")
	proto.RegisterType((*GetSnapshotRequest)(nil), "snapshot.v1.GetSnapshotRequest")
	proto.RegisterType((*GetSnapshotResponse)(nil), "snapshot.v1.GetSnapshotResponse")
	proto.RegisterType((*UpdateSnapshotConfigRequest)(nil), "snapshot.v1.UpdateSnapshotConfigRequest")
	proto.RegisterType((*GetSnapshotIDRequest)(nil), "snapshot.v1.GetSnapshotIDRequest")
	proto.RegisterType((*GetSnapshotIDResponse)(nil), "snapshot.v1.GetSnapshotIDResponse")
	proto.RegisterEnum("snapshot.v1.Grade", Grade_name, Grade_value)
	proto.RegisterEnum("snapshot.v1.GlobalConfig_VideoStyle", GlobalConfig_VideoStyle_name, GlobalConfig_VideoStyle_value)
	proto.RegisterEnum("snapshot.v1.GlobalConfig_EnabledSection", GlobalConfig_EnabledSection_name, GlobalConfig_EnabledSection_value)
}

func init() { proto.RegisterFile("snapshot/v1/snapshot.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 652 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x54, 0x5d, 0x4f, 0xdb, 0x4a,
	0x10, 0xc5, 0x09, 0x01, 0x7b, 0xc2, 0xcd, 0xb5, 0xf6, 0x02, 0x32, 0xe1, 0x22, 0x90, 0xd5, 0x87,
	0xa8, 0x0f, 0x8e, 0x92, 0x16, 0x89, 0x3e, 0xba, 0x89, 0x09, 0xae, 0x20, 0xa9, 0xd6, 0x40, 0xd5,
	0xbe, 0x58, 0x0e, 0x3b, 0x09, 0x16, 0x89, 0xed, 0x7a, 0x4d, 0xd4, 0xfe, 0xa3, 0xfe, 0xb3, 0x3e,
	0xf4, 0x4f, 0x54, 0x5e, 0xdb, 0xf9, 0x52, 0x29, 0x3c, 0xed, 0xee, 0xd9, 0x73, 0x76, 0x66, 0xce,
	0x8c, 0x16, 0xea, 0x3c, 0xf0, 0x22, 0x7e, 0x1f, 0x26, 0xcd, 0x59, 0xab, 0x59, 0xec, 0x8d, 0x28,
	0x0e, 0x93, 0x90, 0x54, 0xe7, 0xe7, 0x59, 0xab, 0x7e, 0x3c, 0x0e, 0xc3, 0xf1, 0x04, 0x9b, 0xe2,
	0x6a, 0xf8, 0x38, 0x6a, 0x26, 0xfe, 0x14, 0x79, 0xe2, 0x4d, 0xa3, 0x8c, 0x5d, 0xff, 0x7f, 0xf9,
	0xa5, 0x91, 0x8f, 0x13, 0xe6, 0x4e, 0x3d, 0xfe, 0x90, 0xdd, 0xea, 0x3f, 0x4b, 0xb0, 0xd3, 0x9b,
	0x84, 0x43, 0x6f, 0xd2, 0x09, 0x83, 0x91, 0x3f, 0x26, 0xc7, 0x50, 0xbd, 0xf7, 0x19, 0xba, 0xe3,
	0xd8, 0x63, 0xc8, 0x35, 0xe9, 0x44, 0x6a, 0xc8, 0x14, 0x52, 0xa8, 0x27, 0x10, 0x62, 0x41, 0x75,
	0xe6, 0x33, 0x0c, 0x5d, 0x9e, 0x7c, 0x9f, 0xa0, 0x56, 0x3a, 0x91, 0x1a, 0xb5, 0xf6, 0x2b, 0x63,
	0x29, 0x27, 0x63, 0xf9, 0x41, 0xe3, 0x36, 0x25, 0x3b, 0x29, 0x97, 0xc2, 0x6c, 0xbe, 0x9f, 0xc7,
	0xf1, 0xa7, 0xde, 0x18, 0xb9, 0x56, 0x5e, 0xc4, 0xb1, 0x05, 0x42, 0x1c, 0x50, 0x31, 0xf0, 0x86,
	0x13, 0x64, 0x2e, 0xc7, 0xbb, 0xc4, 0x0f, 0x03, 0xae, 0x6d, 0x9d, 0x94, 0x1b, 0xb5, 0x76, 0xe3,
	0xe9, 0x60, 0x56, 0xa6, 0x70, 0x32, 0x01, 0xfd, 0x17, 0x57, 0xce, 0x5c, 0xff, 0x02, 0xb0, 0xc8,
	0x87, 0xfc, 0x03, 0x4a, 0x7f, 0xe0, 0xde, 0xda, 0x5d, 0x6b, 0xe0, 0xa8, 0x1b, 0xe4, 0x00, 0xf6,
	0xfa, 0x03, 0x7a, 0x7d, 0xe1, 0x9a, 0x57, 0x16, 0xb5, 0x3b, 0x66, 0xdf, 0xbd, 0xb4, 0x7a, 0x66,
	0xe7, 0xb3, 0x2a, 0x11, 0x02, 0xb5, 0xd5, 0x2b, 0xb5, 0x44, 0x6a, 0x00, 0xe6, 0x8d, 0x73, 0x4d,
	0xcd, 0x4b, 0xdb, 0xec, 0xab, 0x65, 0xfd, 0x08, 0x6a, 0xab, 0xe1, 0x49, 0x15, 0xb6, 0xa9, 0x75,
	0x6b, 0x5b, 0x9f, 0x1c, 0x75, 0x43, 0xff, 0x08, 0xb5, 0x1c, 0xef, 0x84, 0x41, 0x82, 0x41, 0x42,
	0x8e, 0x00, 0xa6, 0xc8, 0xb9, 0x37, 0x46, 0xd7, 0x67, 0xc2, 0x48, 0x85, 0x2a, 0x39, 0x62, 0x33,
	0x72, 0x00, 0x72, 0x66, 0xb4, 0xcf, 0x84, 0x3d, 0x0a, 0xdd, 0x16, 0x67, 0x9b, 0x7d, 0xd8, 0x94,
	0x25, 0xb5, 0xa4, 0xff, 0x92, 0x40, 0x76, 0x72, 0x27, 0x52, 0x3f, 0x0b, 0x57, 0x52, 0x81, 0x24,
	0x04, 0x50, 0x40, 0x36, 0x4b, 0x09, 0xc3, 0x47, 0xee, 0x07, 0xc8, 0xf9, 0x22, 0x1c, 0x14, 0x90,
	0xcd, 0x48, 0x0b, 0xb6, 0xee, 0x84, 0x8b, 0x22, 0x5a, 0xb5, 0x7d, 0xf0, 0xa4, 0xcd, 0x34, 0x27,
	0x92, 0xb7, 0xb0, 0x7d, 0x17, 0xa3, 0x97, 0x20, 0xd3, 0x36, 0x85, 0xa6, 0x6e, 0x64, 0xe3, 0x68,
	0x14, 0xe3, 0x68, 0x5c, 0x17, 0xe3, 0x48, 0x0b, 0x6a, 0xaa, 0xc2, 0x6f, 0x91, 0x1f, 0x23, 0xd3,
	0x2a, 0xcf, 0xab, 0x72, 0xaa, 0x7e, 0x06, 0x7b, 0x1d, 0xf1, 0x40, 0x51, 0x32, 0xc5, 0xaf, 0x8f,
	0xc8, 0x93, 0xf5, 0xc2, 0xa4, 0xf5, 0xc2, 0xf4, 0x77, 0xb0, 0xbf, 0xae, 0xe4, 0x51, 0x18, 0x70,
	0x7c, 0xd6, 0x34, 0xfd, 0x14, 0x48, 0x0f, 0x93, 0x3f, 0x44, 0xfc, 0xbb, 0xec, 0x02, 0xfe, 0x5b,
	0x91, 0xe5, 0xe1, 0x5a, 0x20, 0x17, 0x24, 0x21, 0xaa, 0xb6, 0xf7, 0x56, 0x3c, 0x9e, 0x0b, 0xe6,
	0x34, 0xfd, 0x87, 0x04, 0x87, 0x37, 0x11, 0x5b, 0x4a, 0x3e, 0x6f, 0xc1, 0x0b, 0x53, 0x59, 0xea,
	0x6a, 0xe9, 0xa5, 0x5d, 0x3d, 0x05, 0x58, 0xfc, 0x13, 0xda, 0xae, 0x90, 0xed, 0xaf, 0xc8, 0xce,
	0xd3, 0xeb, 0x2b, 0x8f, 0x3f, 0x50, 0x65, 0x54, 0x6c, 0x75, 0x0a, 0xbb, 0x4b, 0x45, 0xdb, 0xdd,
	0x22, 0xc5, 0x23, 0x80, 0xc8, 0x8b, 0x93, 0x00, 0xe3, 0x45, 0x86, 0x4a, 0x8e, 0xd8, 0x8c, 0x1c,
	0x82, 0x32, 0xf5, 0xe2, 0x07, 0x4c, 0x16, 0x53, 0x29, 0x67, 0x80, 0x2d, 0x9a, 0xbe, 0xf6, 0xe6,
	0x0b, 0x3b, 0xf7, 0xfa, 0x0c, 0x2a, 0xe2, 0xc3, 0x22, 0x3b, 0x20, 0xf7, 0x07, 0x6e, 0x8f, 0x9a,
	0x5d, 0x4b, 0xdd, 0x20, 0x15, 0x90, 0x4c, 0x55, 0x4a, 0x97, 0xf7, 0x6a, 0x29, 0x5d, 0x3a, 0x6a,
	0x39, 0x5d, 0xba, 0xea, 0x66, 0xba, 0x9c, 0xab, 0x95, 0xe1, 0x96, 0x98, 0xc2, 0x37, 0xbf, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x54, 0x67, 0x78, 0x03, 0x83, 0x05, 0x00, 0x00,
}
