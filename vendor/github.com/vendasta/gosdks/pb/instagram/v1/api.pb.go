// Code generated by protoc-gen-go.
// source: api.proto
// DO NOT EDIT!

/*
Package instagram_v1 is a generated protocol buffer package.

It is generated from these files:
	api.proto
	user.proto

It has these top-level messages:
	PagedRequestOptions
	PagedResponseMetadata
	CreateUserRequest
	ListUsersRequest
	ListUsersResponse
	GetUserRequest
	GetUserResponse
	DeleteUserRequest
	User
*/
package instagram_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Options for how to page the response for a List request
type PagedRequestOptions struct {
	// cursor can be passed to retrieve the next page of results keyed by the cursor
	Cursor string `protobuf:"bytes,1,opt,name=cursor" json:"cursor,omitempty"`
	// page_size specifies the number of items to return in the next page
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *PagedRequestOptions) Reset()                    { *m = PagedRequestOptions{} }
func (m *PagedRequestOptions) String() string            { return proto.CompactTextString(m) }
func (*PagedRequestOptions) ProtoMessage()               {}
func (*PagedRequestOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PagedRequestOptions) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *PagedRequestOptions) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// Metadata related to the paged response from a List request
type PagedResponseMetadata struct {
	// A cursor that can be provided to retrieve the next page of results
	NextCursor string `protobuf:"bytes,1,opt,name=next_cursor,json=nextCursor" json:"next_cursor,omitempty"`
	// Whether or not more results exist
	HasMore bool `protobuf:"varint,2,opt,name=has_more,json=hasMore" json:"has_more,omitempty"`
}

func (m *PagedResponseMetadata) Reset()                    { *m = PagedResponseMetadata{} }
func (m *PagedResponseMetadata) String() string            { return proto.CompactTextString(m) }
func (*PagedResponseMetadata) ProtoMessage()               {}
func (*PagedResponseMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PagedResponseMetadata) GetNextCursor() string {
	if m != nil {
		return m.NextCursor
	}
	return ""
}

func (m *PagedResponseMetadata) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

// Create an instagram User
type CreateUserRequest struct {
	// A partner id
	PartnerId string `protobuf:"bytes,1,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// An account group id
	AccountGroupId string `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	// A unique ID for an instagram user
	InstagramUserId string `protobuf:"bytes,3,opt,name=instagram_user_id,json=instagramUserId" json:"instagram_user_id,omitempty"`
	// A name for an instagram user
	Username string `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	// A URL to a profile picture
	ProfilePicture string `protobuf:"bytes,5,opt,name=profile_picture,json=profilePicture" json:"profile_picture,omitempty"`
	// A full name for this instagram user
	FullName string `protobuf:"bytes,6,opt,name=full_name,json=fullName" json:"full_name,omitempty"`
	// The bio set by the user in instagram
	Bio string `protobuf:"bytes,7,opt,name=bio" json:"bio,omitempty"`
	// A link to the user's website
	Website string `protobuf:"bytes,8,opt,name=website" json:"website,omitempty"`
	// Whether or not this account is a business
	IsBusiness bool `protobuf:"varint,9,opt,name=is_business,json=isBusiness" json:"is_business,omitempty"`
	// The access token for this user
	AccessToken string `protobuf:"bytes,10,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (m *CreateUserRequest) Reset()                    { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()               {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateUserRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *CreateUserRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *CreateUserRequest) GetInstagramUserId() string {
	if m != nil {
		return m.InstagramUserId
	}
	return ""
}

func (m *CreateUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *CreateUserRequest) GetProfilePicture() string {
	if m != nil {
		return m.ProfilePicture
	}
	return ""
}

func (m *CreateUserRequest) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *CreateUserRequest) GetBio() string {
	if m != nil {
		return m.Bio
	}
	return ""
}

func (m *CreateUserRequest) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *CreateUserRequest) GetIsBusiness() bool {
	if m != nil {
		return m.IsBusiness
	}
	return false
}

func (m *CreateUserRequest) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

// List instagram Users by account group
type ListUsersRequest struct {
	// A partner id
	PartnerId string `protobuf:"bytes,1,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// An account group id
	AccountGroupId string `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	// Options for how to page the response for this request
	Options *PagedRequestOptions `protobuf:"bytes,3,opt,name=options" json:"options,omitempty"`
}

func (m *ListUsersRequest) Reset()                    { *m = ListUsersRequest{} }
func (m *ListUsersRequest) String() string            { return proto.CompactTextString(m) }
func (*ListUsersRequest) ProtoMessage()               {}
func (*ListUsersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListUsersRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *ListUsersRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *ListUsersRequest) GetOptions() *PagedRequestOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

// ListUsers returns a list of instagram Users, ordered alphabetically by name
type ListUsersResponse struct {
	// A list of instagram Users, ordered alphabetically by name
	Users []*User `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
	// Metadata about the paged response
	PagingMetadata *PagedResponseMetadata `protobuf:"bytes,2,opt,name=paging_metadata,json=pagingMetadata" json:"paging_metadata,omitempty"`
}

func (m *ListUsersResponse) Reset()                    { *m = ListUsersResponse{} }
func (m *ListUsersResponse) String() string            { return proto.CompactTextString(m) }
func (*ListUsersResponse) ProtoMessage()               {}
func (*ListUsersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListUsersResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ListUsersResponse) GetPagingMetadata() *PagedResponseMetadata {
	if m != nil {
		return m.PagingMetadata
	}
	return nil
}

// Get an instagram User by id
type GetUserRequest struct {
	// A partner id
	PartnerId string `protobuf:"bytes,1,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// An account group id
	AccountGroupId string `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	// A unique internal identifier for an instagram User
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *GetUserRequest) Reset()                    { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()               {}
func (*GetUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetUserRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *GetUserRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *GetUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

// GetUser returns an instagram User
type GetUserResponse struct {
	// An instagram User
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *GetUserResponse) Reset()                    { *m = GetUserResponse{} }
func (m *GetUserResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUserResponse) ProtoMessage()               {}
func (*GetUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

// Delete a user by id
type DeleteUserRequest struct {
	// A partner id
	PartnerId string `protobuf:"bytes,1,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// An account group id
	AccountGroupId string `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	// A unique internal identifier for an instagram User
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *DeleteUserRequest) Reset()                    { *m = DeleteUserRequest{} }
func (m *DeleteUserRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserRequest) ProtoMessage()               {}
func (*DeleteUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeleteUserRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *DeleteUserRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *DeleteUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func init() {
	proto.RegisterType((*PagedRequestOptions)(nil), "instagram.v1.PagedRequestOptions")
	proto.RegisterType((*PagedResponseMetadata)(nil), "instagram.v1.PagedResponseMetadata")
	proto.RegisterType((*CreateUserRequest)(nil), "instagram.v1.CreateUserRequest")
	proto.RegisterType((*ListUsersRequest)(nil), "instagram.v1.ListUsersRequest")
	proto.RegisterType((*ListUsersResponse)(nil), "instagram.v1.ListUsersResponse")
	proto.RegisterType((*GetUserRequest)(nil), "instagram.v1.GetUserRequest")
	proto.RegisterType((*GetUserResponse)(nil), "instagram.v1.GetUserResponse")
	proto.RegisterType((*DeleteUserRequest)(nil), "instagram.v1.DeleteUserRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Instagram service

type InstagramClient interface {
	// Create an instagram User
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	// List instagram Users for an account group
	ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error)
	// Get an instagram User by id
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error)
	// Delete an instagram User by id
	DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type instagramClient struct {
	cc *grpc.ClientConn
}

func NewInstagramClient(cc *grpc.ClientConn) InstagramClient {
	return &instagramClient{cc}
}

func (c *instagramClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/instagram.v1.Instagram/CreateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instagramClient) ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error) {
	out := new(ListUsersResponse)
	err := grpc.Invoke(ctx, "/instagram.v1.Instagram/ListUsers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instagramClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error) {
	out := new(GetUserResponse)
	err := grpc.Invoke(ctx, "/instagram.v1.Instagram/GetUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instagramClient) DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/instagram.v1.Instagram/DeleteUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Instagram service

type InstagramServer interface {
	// Create an instagram User
	CreateUser(context.Context, *CreateUserRequest) (*google_protobuf.Empty, error)
	// List instagram Users for an account group
	ListUsers(context.Context, *ListUsersRequest) (*ListUsersResponse, error)
	// Get an instagram User by id
	GetUser(context.Context, *GetUserRequest) (*GetUserResponse, error)
	// Delete an instagram User by id
	DeleteUser(context.Context, *DeleteUserRequest) (*google_protobuf.Empty, error)
}

func RegisterInstagramServer(s *grpc.Server, srv InstagramServer) {
	s.RegisterService(&_Instagram_serviceDesc, srv)
}

func _Instagram_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstagramServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/instagram.v1.Instagram/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstagramServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Instagram_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstagramServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/instagram.v1.Instagram/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstagramServer).ListUsers(ctx, req.(*ListUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Instagram_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstagramServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/instagram.v1.Instagram/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstagramServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Instagram_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstagramServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/instagram.v1.Instagram/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstagramServer).DeleteUser(ctx, req.(*DeleteUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Instagram_serviceDesc = grpc.ServiceDesc{
	ServiceName: "instagram.v1.Instagram",
	HandlerType: (*InstagramServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _Instagram_CreateUser_Handler,
		},
		{
			MethodName: "ListUsers",
			Handler:    _Instagram_ListUsers_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _Instagram_GetUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _Instagram_DeleteUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 617 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x54, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0x5e, 0xdb, 0xad, 0x6d, 0x4e, 0xa7, 0x75, 0x35, 0x62, 0x84, 0x8e, 0xb1, 0x2d, 0x48, 0x50,
	0x71, 0x91, 0x89, 0x72, 0x85, 0xb8, 0x63, 0xa0, 0x52, 0xb4, 0x8d, 0x29, 0x83, 0xeb, 0xc8, 0x4d,
	0xce, 0x32, 0x8b, 0x36, 0x0e, 0xb6, 0xc3, 0xcf, 0x5e, 0x81, 0x17, 0xe0, 0x4d, 0x78, 0x17, 0x9e,
	0x06, 0xd9, 0x4e, 0xb3, 0x65, 0x6b, 0xef, 0xd8, 0x5d, 0xfc, 0x9d, 0xcf, 0x9f, 0xcf, 0xf9, 0xf2,
	0xd9, 0xe0, 0xd0, 0x8c, 0xf9, 0x99, 0xe0, 0x8a, 0x93, 0x75, 0x96, 0x4a, 0x45, 0x13, 0x41, 0x67,
	0xfe, 0xb7, 0x17, 0xfd, 0xed, 0x84, 0xf3, 0x64, 0x8a, 0x07, 0xa6, 0x36, 0xc9, 0xcf, 0x0f, 0x70,
	0x96, 0xa9, 0x9f, 0x96, 0xda, 0x87, 0x5c, 0xa2, 0xb0, 0xdf, 0xde, 0x07, 0xb8, 0x77, 0x4a, 0x13,
	0x8c, 0x03, 0xfc, 0x9a, 0xa3, 0x54, 0x1f, 0x33, 0xc5, 0x78, 0x2a, 0xc9, 0x16, 0x34, 0xa3, 0x5c,
	0x48, 0x2e, 0xdc, 0xda, 0x5e, 0x6d, 0xe0, 0x04, 0xc5, 0x8a, 0x6c, 0x83, 0x93, 0xd1, 0x04, 0x43,
	0xc9, 0x2e, 0xd1, 0xad, 0xef, 0xd5, 0x06, 0x8d, 0xa0, 0xad, 0x81, 0x33, 0x76, 0x89, 0xde, 0x19,
	0xdc, 0x2f, 0xb4, 0x64, 0xc6, 0x53, 0x89, 0xc7, 0xa8, 0x68, 0x4c, 0x15, 0x25, 0xbb, 0xd0, 0x49,
	0xf1, 0x87, 0x0a, 0x2b, 0x92, 0xa0, 0xa1, 0x43, 0x2b, 0xfb, 0x10, 0xda, 0x17, 0x54, 0x86, 0x33,
	0x2e, 0xac, 0x6a, 0x3b, 0x68, 0x5d, 0x50, 0x79, 0xcc, 0x05, 0x7a, 0x7f, 0xeb, 0xd0, 0x3b, 0x14,
	0x48, 0x15, 0x7e, 0x96, 0x28, 0x8a, 0x36, 0xc9, 0x0e, 0x40, 0x46, 0x85, 0x4a, 0x51, 0x84, 0x2c,
	0x2e, 0x04, 0x9d, 0x02, 0x19, 0xc7, 0x64, 0x00, 0x9b, 0x34, 0x8a, 0x78, 0x9e, 0xaa, 0x30, 0x11,
	0x3c, 0xcf, 0x34, 0xa9, 0x6e, 0x48, 0x1b, 0x05, 0x3e, 0xd2, 0xf0, 0x38, 0x26, 0xcf, 0xa1, 0x57,
	0x1a, 0x17, 0x6a, 0x5f, 0x34, 0xb5, 0x61, 0xa8, 0xdd, 0xb2, 0xa0, 0x4f, 0x1e, 0xc7, 0xa4, 0x0f,
	0x6d, 0xcd, 0x48, 0xe9, 0x0c, 0xdd, 0x55, 0x43, 0x29, 0xd7, 0xe4, 0x19, 0x74, 0x33, 0xc1, 0xcf,
	0xd9, 0x14, 0xc3, 0x8c, 0x45, 0x2a, 0x17, 0xe8, 0xae, 0xd9, 0x03, 0x0b, 0xf8, 0xd4, 0xa2, 0xda,
	0xc1, 0xf3, 0x7c, 0x3a, 0x0d, 0x8d, 0x4a, 0xd3, 0xaa, 0x68, 0xe0, 0x44, 0xab, 0x6c, 0x42, 0x63,
	0xc2, 0xb8, 0xdb, 0x32, 0xb0, 0xfe, 0x24, 0x2e, 0xb4, 0xbe, 0xe3, 0x44, 0x32, 0x85, 0x6e, 0xdb,
	0xa0, 0xf3, 0xa5, 0x36, 0x95, 0xc9, 0x70, 0x92, 0x4b, 0x96, 0xa2, 0x94, 0xae, 0x63, 0x6c, 0x03,
	0x26, 0xdf, 0x14, 0x08, 0xd9, 0x87, 0x75, 0x1a, 0x45, 0x28, 0x65, 0xa8, 0xf8, 0x17, 0x4c, 0x5d,
	0x30, 0xfb, 0x3b, 0x16, 0xfb, 0xa4, 0x21, 0xef, 0x77, 0x0d, 0x36, 0x8f, 0x98, 0x54, 0x7a, 0x40,
	0xf9, 0xdf, 0xbd, 0x7d, 0x0d, 0x2d, 0x6e, 0xf3, 0x64, 0x1c, 0xed, 0x0c, 0xf7, 0xfd, 0xeb, 0x21,
	0xf5, 0x17, 0x04, 0x2f, 0x98, 0xef, 0xf0, 0x7e, 0xd5, 0xa0, 0x77, 0xad, 0x35, 0x9b, 0x28, 0x32,
	0x80, 0x35, 0x6d, 0xb9, 0x74, 0x6b, 0x7b, 0x8d, 0x41, 0x67, 0x48, 0xaa, 0x82, 0x26, 0x21, 0x96,
	0x40, 0x8e, 0xa0, 0x9b, 0xd1, 0x84, 0xa5, 0x49, 0x38, 0x2b, 0x62, 0x68, 0xba, 0xec, 0x0c, 0x9f,
	0x2c, 0x6c, 0xa2, 0x9a, 0xd8, 0x60, 0xc3, 0xee, 0x9d, 0xaf, 0x3d, 0x01, 0x1b, 0x23, 0x54, 0x77,
	0x92, 0xc0, 0x07, 0xd0, 0xaa, 0xe6, 0xae, 0x99, 0x9b, 0xb8, 0x79, 0xaf, 0xa0, 0x5b, 0x9e, 0x59,
	0x8c, 0xff, 0x14, 0x56, 0x75, 0xd1, 0x1c, 0xb7, 0x78, 0x7a, 0x53, 0xf7, 0x72, 0xe8, 0xbd, 0xc5,
	0x29, 0xde, 0xd1, 0x9d, 0x59, 0xd6, 0xf1, 0xf0, 0x4f, 0x1d, 0x9c, 0xf1, 0xbc, 0x25, 0x32, 0x02,
	0xb8, 0xba, 0xb8, 0x64, 0xb7, 0xda, 0xec, 0xad, 0x2b, 0xdd, 0xdf, 0xf2, 0xed, 0x9b, 0xe5, 0xcf,
	0xdf, 0x2c, 0xff, 0x9d, 0x7e, 0xb3, 0xbc, 0x15, 0x72, 0x02, 0x4e, 0x99, 0x04, 0xf2, 0xb8, 0xaa,
	0x73, 0x33, 0xbd, 0xfd, 0xdd, 0xa5, 0x75, 0xeb, 0xa1, 0xb7, 0x42, 0xde, 0x43, 0xab, 0x30, 0x96,
	0x3c, 0xaa, 0xb2, 0xab, 0xff, 0xb8, 0xbf, 0xb3, 0xa4, 0x5a, 0x2a, 0x8d, 0x00, 0xae, 0x7c, 0xbe,
	0x39, 0xe2, 0xad, 0x3f, 0xb0, 0x7c, 0xc4, 0x49, 0xd3, 0x20, 0x2f, 0xff, 0x05, 0x00, 0x00, 0xff,
	0xff, 0xf3, 0xf9, 0x12, 0x79, 0xd1, 0x05, 0x00, 0x00,
}
