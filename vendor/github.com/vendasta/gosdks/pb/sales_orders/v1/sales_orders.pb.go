// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sales_orders/v1/sales_orders.proto

package salesorders_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// The different statuses representing any given state an order can be in
type Status int32

const (
	Status_SUBMITTED         Status = 0
	Status_APPROVED          Status = 1
	Status_DECLINED          Status = 2
	Status_DRAFTED           Status = 3
	Status_FULFILLED         Status = 4
	Status_PROCESSING        Status = 5
	Status_ACTIVATION_ERRORS Status = 6
)

var Status_name = map[int32]string{
	0: "SUBMITTED",
	1: "APPROVED",
	2: "DECLINED",
	3: "DRAFTED",
	4: "FULFILLED",
	5: "PROCESSING",
	6: "ACTIVATION_ERRORS",
}
var Status_value = map[string]int32{
	"SUBMITTED":         0,
	"APPROVED":          1,
	"DECLINED":          2,
	"DRAFTED":           3,
	"FULFILLED":         4,
	"PROCESSING":        5,
	"ACTIVATION_ERRORS": 6,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

// The different statuses representing any given state that a product can be in during the activation process
type ActivationStatus int32

const (
	// The product is in the process of being activated
	ActivationStatus_PENDING ActivationStatus = 0
	// The product was successfully activated via the order
	ActivationStatus_ACTIVATED ActivationStatus = 1
	// An error occured while activating the product during the activation step
	ActivationStatus_ERRORED ActivationStatus = 2
	// The product was already active prior to fulfilling the order
	ActivationStatus_ALREADY_ACTIVATED ActivationStatus = 3
)

var ActivationStatus_name = map[int32]string{
	0: "PENDING",
	1: "ACTIVATED",
	2: "ERRORED",
	3: "ALREADY_ACTIVATED",
}
var ActivationStatus_value = map[string]int32{
	"PENDING":           0,
	"ACTIVATED":         1,
	"ERRORED":           2,
	"ALREADY_ACTIVATED": 3,
}

func (x ActivationStatus) String() string {
	return proto.EnumName(ActivationStatus_name, int32(x))
}
func (ActivationStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

// Available types that a field can be
type FieldType int32

const (
	FieldType_NOT_SPECIFIED FieldType = 0
	FieldType_TEXT          FieldType = 1
	FieldType_TEXTAREA      FieldType = 2
	FieldType_DROPDOWN      FieldType = 3
	FieldType_CHECKBOX      FieldType = 4
	FieldType_FILE          FieldType = 5
)

var FieldType_name = map[int32]string{
	0: "NOT_SPECIFIED",
	1: "TEXT",
	2: "TEXTAREA",
	3: "DROPDOWN",
	4: "CHECKBOX",
	5: "FILE",
}
var FieldType_value = map[string]int32{
	"NOT_SPECIFIED": 0,
	"TEXT":          1,
	"TEXTAREA":      2,
	"DROPDOWN":      3,
	"CHECKBOX":      4,
	"FILE":          5,
}

func (x FieldType) String() string {
	return proto.EnumName(FieldType_name, int32(x))
}
func (FieldType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

// The field to sort a result set on
type ListSalesOrderRequest_SortField int32

const (
	ListSalesOrderRequest_REQUESTED_ACTIVATION ListSalesOrderRequest_SortField = 0
	ListSalesOrderRequest_CREATED              ListSalesOrderRequest_SortField = 1
	ListSalesOrderRequest_STATUS               ListSalesOrderRequest_SortField = 2
)

var ListSalesOrderRequest_SortField_name = map[int32]string{
	0: "REQUESTED_ACTIVATION",
	1: "CREATED",
	2: "STATUS",
}
var ListSalesOrderRequest_SortField_value = map[string]int32{
	"REQUESTED_ACTIVATION": 0,
	"CREATED":              1,
	"STATUS":               2,
}

func (x ListSalesOrderRequest_SortField) String() string {
	return proto.EnumName(ListSalesOrderRequest_SortField_name, int32(x))
}
func (ListSalesOrderRequest_SortField) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{12, 0}
}

// The directions that a result set can be sorted in
type ListSalesOrderRequest_SortDirection int32

const (
	ListSalesOrderRequest_ASCENDING  ListSalesOrderRequest_SortDirection = 0
	ListSalesOrderRequest_DESCENDING ListSalesOrderRequest_SortDirection = 1
)

var ListSalesOrderRequest_SortDirection_name = map[int32]string{
	0: "ASCENDING",
	1: "DESCENDING",
}
var ListSalesOrderRequest_SortDirection_value = map[string]int32{
	"ASCENDING":  0,
	"DESCENDING": 1,
}

func (x ListSalesOrderRequest_SortDirection) String() string {
	return proto.EnumName(ListSalesOrderRequest_SortDirection_name, int32(x))
}
func (ListSalesOrderRequest_SortDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{12, 1}
}

type AddonKey struct {
	// Unique identifier of an addon
	AddonId string `protobuf:"bytes,1,opt,name=addon_id,json=addonId" json:"addon_id,omitempty"`
	// The parent app for the addon
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
}

func (m *AddonKey) Reset()                    { *m = AddonKey{} }
func (m *AddonKey) String() string            { return proto.CompactTextString(m) }
func (*AddonKey) ProtoMessage()               {}
func (*AddonKey) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *AddonKey) GetAddonId() string {
	if m != nil {
		return m.AddonId
	}
	return ""
}

func (m *AddonKey) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

// Representing a package in an order
type Package struct {
	// Unique identifier of a package
	PackageId string `protobuf:"bytes,1,opt,name=package_id,json=packageId" json:"package_id,omitempty"`
	// Type of currency the revenue of a package is in
	Currency Currency `protobuf:"varint,2,opt,name=currency,enum=salesorders.v1.Currency" json:"currency,omitempty"`
	// Revenue of a package
	Revenue *Revenue `protobuf:"bytes,3,opt,name=revenue" json:"revenue,omitempty"`
	// How many of the package is being requested
	Quantity int64 `protobuf:"varint,4,opt,name=quantity" json:"quantity,omitempty"`
	// List of unique identifiers for the products that belong to the package
	ProductIds []string `protobuf:"bytes,5,rep,name=product_ids,json=productIds" json:"product_ids,omitempty"`
	// List of addon keys that belong to the package
	AddonKeys []*AddonKey `protobuf:"bytes,6,rep,name=addon_keys,json=addonKeys" json:"addon_keys,omitempty"`
}

func (m *Package) Reset()                    { *m = Package{} }
func (m *Package) String() string            { return proto.CompactTextString(m) }
func (*Package) ProtoMessage()               {}
func (*Package) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *Package) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *Package) GetCurrency() Currency {
	if m != nil {
		return m.Currency
	}
	return Currency_USD
}

func (m *Package) GetRevenue() *Revenue {
	if m != nil {
		return m.Revenue
	}
	return nil
}

func (m *Package) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *Package) GetProductIds() []string {
	if m != nil {
		return m.ProductIds
	}
	return nil
}

func (m *Package) GetAddonKeys() []*AddonKey {
	if m != nil {
		return m.AddonKeys
	}
	return nil
}

// Represents an information field pertaining to a product
type Field struct {
	// Unique identifier of a custom or common field
	FieldId string `protobuf:"bytes,1,opt,name=field_id,json=fieldId" json:"field_id,omitempty"`
	// Response related to the question of the field_id
	Answer string `protobuf:"bytes,2,opt,name=answer" json:"answer,omitempty"`
	// The type of field
	FieldType FieldType `protobuf:"varint,3,opt,name=field_type,json=fieldType,enum=salesorders.v1.FieldType" json:"field_type,omitempty"`
	// The question for the custom or common field
	Label string `protobuf:"bytes,4,opt,name=label" json:"label,omitempty"`
	// The description of the field
	Description string `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
}

func (m *Field) Reset()                    { *m = Field{} }
func (m *Field) String() string            { return proto.CompactTextString(m) }
func (*Field) ProtoMessage()               {}
func (*Field) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *Field) GetFieldId() string {
	if m != nil {
		return m.FieldId
	}
	return ""
}

func (m *Field) GetAnswer() string {
	if m != nil {
		return m.Answer
	}
	return ""
}

func (m *Field) GetFieldType() FieldType {
	if m != nil {
		return m.FieldType
	}
	return FieldType_NOT_SPECIFIED
}

func (m *Field) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Field) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// Represents the answer(s) to a custom field that is unique to a product
type CustomField struct {
	// List of custom fields for a given product
	Fields []*Field `protobuf:"bytes,1,rep,name=fields" json:"fields,omitempty"`
	// Unique identifier of a single product that the custom questions belong to, and will not be provided if the custom field belongs to an addon
	ProductId string `protobuf:"bytes,2,opt,name=product_id,json=productId" json:"product_id,omitempty"`
	// Addon key of an addon that the custom questions belong to, and will not be provided if the custom field belongs to a product
	AddonKey *AddonKey `protobuf:"bytes,3,opt,name=addon_key,json=addonKey" json:"addon_key,omitempty"`
}

func (m *CustomField) Reset()                    { *m = CustomField{} }
func (m *CustomField) String() string            { return proto.CompactTextString(m) }
func (*CustomField) ProtoMessage()               {}
func (*CustomField) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *CustomField) GetFields() []*Field {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *CustomField) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *CustomField) GetAddonKey() *AddonKey {
	if m != nil {
		return m.AddonKey
	}
	return nil
}

// Represents the answer to a common field may be shared between products
type CommonField struct {
	// The field that may be shared by multiple products
	Field *Field `protobuf:"bytes,1,opt,name=field" json:"field,omitempty"`
	// List of unique product identifiers that share the common field
	ProductIds []string `protobuf:"bytes,2,rep,name=product_ids,json=productIds" json:"product_ids,omitempty"`
	// List of addon keys that share the common field
	AddonKeys []*AddonKey `protobuf:"bytes,3,rep,name=addon_keys,json=addonKeys" json:"addon_keys,omitempty"`
}

func (m *CommonField) Reset()                    { *m = CommonField{} }
func (m *CommonField) String() string            { return proto.CompactTextString(m) }
func (*CommonField) ProtoMessage()               {}
func (*CommonField) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *CommonField) GetField() *Field {
	if m != nil {
		return m.Field
	}
	return nil
}

func (m *CommonField) GetProductIds() []string {
	if m != nil {
		return m.ProductIds
	}
	return nil
}

func (m *CommonField) GetAddonKeys() []*AddonKey {
	if m != nil {
		return m.AddonKeys
	}
	return nil
}

// Represents a single product with its corresponding activation status
type ProductActivation struct {
	// Unique identifier of a single product that is going through the activation process
	ProductId string `protobuf:"bytes,1,opt,name=product_id,json=productId" json:"product_id,omitempty"`
	// The activation status of a single product
	ActivationStatus ActivationStatus `protobuf:"varint,2,opt,name=activation_status,json=activationStatus,enum=salesorders.v1.ActivationStatus" json:"activation_status,omitempty"`
}

func (m *ProductActivation) Reset()                    { *m = ProductActivation{} }
func (m *ProductActivation) String() string            { return proto.CompactTextString(m) }
func (*ProductActivation) ProtoMessage()               {}
func (*ProductActivation) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *ProductActivation) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *ProductActivation) GetActivationStatus() ActivationStatus {
	if m != nil {
		return m.ActivationStatus
	}
	return ActivationStatus_PENDING
}

// Represents a single addon with its corresponding activation status
type AddonActivation struct {
	// Unique identifier of a single addon that is going through the activation process
	AddonId string `protobuf:"bytes,1,opt,name=addon_id,json=addonId" json:"addon_id,omitempty"`
	// Unique identifier of the parent app for the addon that is going through the activation process
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// The activation status of a single product
	ActivationStatus ActivationStatus `protobuf:"varint,3,opt,name=activation_status,json=activationStatus,enum=salesorders.v1.ActivationStatus" json:"activation_status,omitempty"`
}

func (m *AddonActivation) Reset()                    { *m = AddonActivation{} }
func (m *AddonActivation) String() string            { return proto.CompactTextString(m) }
func (*AddonActivation) ProtoMessage()               {}
func (*AddonActivation) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *AddonActivation) GetAddonId() string {
	if m != nil {
		return m.AddonId
	}
	return ""
}

func (m *AddonActivation) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *AddonActivation) GetActivationStatus() ActivationStatus {
	if m != nil {
		return m.ActivationStatus
	}
	return ActivationStatus_PENDING
}

// Data representing an order form submitted by a salesperson
type Order struct {
	// The unique identifier of the order
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	// Salesperson who submitted the order
	SalespersonId string `protobuf:"bytes,2,opt,name=salesperson_id,json=salespersonId" json:"salesperson_id,omitempty"`
	// The partner the order is being made under
	PartnerId string `protobuf:"bytes,3,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// The business the order is being made for
	BusinessId string `protobuf:"bytes,4,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// The market the order is being made under
	MarketId string `protobuf:"bytes,5,opt,name=market_id,json=marketId" json:"market_id,omitempty"`
	// The opportunities that are being used for the order
	OpportunityIds []string `protobuf:"bytes,6,rep,name=opportunity_ids,json=opportunityIds" json:"opportunity_ids,omitempty"`
	// The current status of the order
	Status Status `protobuf:"varint,7,opt,name=status,enum=salesorders.v1.Status" json:"status,omitempty"`
	// The requested activation date for the order's products
	RequestedActivation *google_protobuf.Timestamp `protobuf:"bytes,8,opt,name=requested_activation,json=requestedActivation" json:"requested_activation,omitempty"`
	// Notes for the partner administrator from the salesperson
	Notes string `protobuf:"bytes,9,opt,name=notes" json:"notes,omitempty"`
	// Packages in the order
	Packages []*Package `protobuf:"bytes,10,rep,name=packages" json:"packages,omitempty"`
	// Custom field answers for the packages
	CustomFields []*CustomField `protobuf:"bytes,11,rep,name=custom_fields,json=customFields" json:"custom_fields,omitempty"`
	// Common field answers for the packages
	CommonFields []*CommonField `protobuf:"bytes,12,rep,name=common_fields,json=commonFields" json:"common_fields,omitempty"`
	// Time the order was submitted by a salesperson
	Created *google_protobuf.Timestamp `protobuf:"bytes,13,opt,name=created" json:"created,omitempty"`
	// The list of products with their corresponding activation status
	ProductActivations []*ProductActivation `protobuf:"bytes,14,rep,name=product_activations,json=productActivations" json:"product_activations,omitempty"`
	// Time the order was approved
	Approved *google_protobuf.Timestamp `protobuf:"bytes,15,opt,name=approved" json:"approved,omitempty"`
	// Time the order was declined
	Declined *google_protobuf.Timestamp `protobuf:"bytes,16,opt,name=declined" json:"declined,omitempty"`
	// Time the order was fulfilled
	Fulfilled *google_protobuf.Timestamp `protobuf:"bytes,17,opt,name=fulfilled" json:"fulfilled,omitempty"`
	// The list of addons with their corresponding activation status
	AddonActivations []*AddonActivation `protobuf:"bytes,18,rep,name=addon_activations,json=addonActivations" json:"addon_activations,omitempty"`
}

func (m *Order) Reset()                    { *m = Order{} }
func (m *Order) String() string            { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()               {}
func (*Order) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *Order) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *Order) GetSalespersonId() string {
	if m != nil {
		return m.SalespersonId
	}
	return ""
}

func (m *Order) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *Order) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *Order) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *Order) GetOpportunityIds() []string {
	if m != nil {
		return m.OpportunityIds
	}
	return nil
}

func (m *Order) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_SUBMITTED
}

func (m *Order) GetRequestedActivation() *google_protobuf.Timestamp {
	if m != nil {
		return m.RequestedActivation
	}
	return nil
}

func (m *Order) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *Order) GetPackages() []*Package {
	if m != nil {
		return m.Packages
	}
	return nil
}

func (m *Order) GetCustomFields() []*CustomField {
	if m != nil {
		return m.CustomFields
	}
	return nil
}

func (m *Order) GetCommonFields() []*CommonField {
	if m != nil {
		return m.CommonFields
	}
	return nil
}

func (m *Order) GetCreated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Order) GetProductActivations() []*ProductActivation {
	if m != nil {
		return m.ProductActivations
	}
	return nil
}

func (m *Order) GetApproved() *google_protobuf.Timestamp {
	if m != nil {
		return m.Approved
	}
	return nil
}

func (m *Order) GetDeclined() *google_protobuf.Timestamp {
	if m != nil {
		return m.Declined
	}
	return nil
}

func (m *Order) GetFulfilled() *google_protobuf.Timestamp {
	if m != nil {
		return m.Fulfilled
	}
	return nil
}

func (m *Order) GetAddonActivations() []*AddonActivation {
	if m != nil {
		return m.AddonActivations
	}
	return nil
}

// Containing information to create a new order
type CreateSalesOrderRequest struct {
	// ID of the salesperson that submitted the order
	SalespersonId string `protobuf:"bytes,1,opt,name=salesperson_id,json=salespersonId" json:"salesperson_id,omitempty"`
	// ID of the partner that the order belongs to
	PartnerId string `protobuf:"bytes,2,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// ID of the business that the order is for
	BusinessId string `protobuf:"bytes,3,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// ID of the market that the order belongs to
	MarketId string `protobuf:"bytes,4,opt,name=market_id,json=marketId" json:"market_id,omitempty"`
	// Opportunity id(s) that the order is fulfilling
	OpportunityIds []string `protobuf:"bytes,5,rep,name=opportunity_ids,json=opportunityIds" json:"opportunity_ids,omitempty"`
	// Time submitted by a salesperson that indicates when an administrator should activate the products on the order
	RequestedActivation *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=requested_activation,json=requestedActivation" json:"requested_activation,omitempty"`
	// Additional notes written by a salesperson
	Notes string `protobuf:"bytes,7,opt,name=notes" json:"notes,omitempty"`
	// Data for the package(s) information
	Packages []*Package `protobuf:"bytes,8,rep,name=packages" json:"packages,omitempty"`
	// A list of additional unique information pertaining to an individual product
	CustomFields []*CustomField `protobuf:"bytes,9,rep,name=custom_fields,json=customFields" json:"custom_fields,omitempty"`
	// A list of additional information that is shared across multiple products
	CommonFields []*CommonField `protobuf:"bytes,10,rep,name=common_fields,json=commonFields" json:"common_fields,omitempty"`
}

func (m *CreateSalesOrderRequest) Reset()                    { *m = CreateSalesOrderRequest{} }
func (m *CreateSalesOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateSalesOrderRequest) ProtoMessage()               {}
func (*CreateSalesOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *CreateSalesOrderRequest) GetSalespersonId() string {
	if m != nil {
		return m.SalespersonId
	}
	return ""
}

func (m *CreateSalesOrderRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *CreateSalesOrderRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *CreateSalesOrderRequest) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *CreateSalesOrderRequest) GetOpportunityIds() []string {
	if m != nil {
		return m.OpportunityIds
	}
	return nil
}

func (m *CreateSalesOrderRequest) GetRequestedActivation() *google_protobuf.Timestamp {
	if m != nil {
		return m.RequestedActivation
	}
	return nil
}

func (m *CreateSalesOrderRequest) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *CreateSalesOrderRequest) GetPackages() []*Package {
	if m != nil {
		return m.Packages
	}
	return nil
}

func (m *CreateSalesOrderRequest) GetCustomFields() []*CustomField {
	if m != nil {
		return m.CustomFields
	}
	return nil
}

func (m *CreateSalesOrderRequest) GetCommonFields() []*CommonField {
	if m != nil {
		return m.CommonFields
	}
	return nil
}

// Response of creating an order
type CreateSalesOrderResponse struct {
	// Unique identifier of an order
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (m *CreateSalesOrderResponse) Reset()                    { *m = CreateSalesOrderResponse{} }
func (m *CreateSalesOrderResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateSalesOrderResponse) ProtoMessage()               {}
func (*CreateSalesOrderResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *CreateSalesOrderResponse) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

// Containing information to get an order
type GetSalesOrderRequest struct {
	// Unique identifier of an order
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	// The business the order belongs to
	BusinessId string `protobuf:"bytes,2,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
}

func (m *GetSalesOrderRequest) Reset()                    { *m = GetSalesOrderRequest{} }
func (m *GetSalesOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSalesOrderRequest) ProtoMessage()               {}
func (*GetSalesOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *GetSalesOrderRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *GetSalesOrderRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

// Response of getting an order
type GetSalesOrderResponse struct {
	// Sales order
	Order *Order `protobuf:"bytes,1,opt,name=order" json:"order,omitempty"`
}

func (m *GetSalesOrderResponse) Reset()                    { *m = GetSalesOrderResponse{} }
func (m *GetSalesOrderResponse) String() string            { return proto.CompactTextString(m) }
func (*GetSalesOrderResponse) ProtoMessage()               {}
func (*GetSalesOrderResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *GetSalesOrderResponse) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

// Request to get a list of orders for a partner
type ListSalesOrderRequest struct {
	// partner id for partner making request
	PartnerId string `protobuf:"bytes,1,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// Filters for the request
	Filters *ListSalesOrderRequest_Filters `protobuf:"bytes,2,opt,name=filters" json:"filters,omitempty"`
	// Sort options for the request
	SortOption *ListSalesOrderRequest_SortOption `protobuf:"bytes,3,opt,name=sort_option,json=sortOption" json:"sort_option,omitempty"`
	// current cursor position
	Cursor string `protobuf:"bytes,4,opt,name=cursor" json:"cursor,omitempty"`
	// size of the page to list
	// 0 assumes the default page size
	PageSize int64 `protobuf:"varint,5,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *ListSalesOrderRequest) Reset()                    { *m = ListSalesOrderRequest{} }
func (m *ListSalesOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*ListSalesOrderRequest) ProtoMessage()               {}
func (*ListSalesOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *ListSalesOrderRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *ListSalesOrderRequest) GetFilters() *ListSalesOrderRequest_Filters {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *ListSalesOrderRequest) GetSortOption() *ListSalesOrderRequest_SortOption {
	if m != nil {
		return m.SortOption
	}
	return nil
}

func (m *ListSalesOrderRequest) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *ListSalesOrderRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// Filters to list sales orders based on given filter criterias
type ListSalesOrderRequest_Filters struct {
	// Singular market filter
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId" json:"market_id,omitempty"`
	// Singular salesperson filter
	SalespersonId string `protobuf:"bytes,2,opt,name=salesperson_id,json=salespersonId" json:"salesperson_id,omitempty"`
	// Created date range filter
	Created *ListSalesOrderRequest_DateRangeFilter `protobuf:"bytes,3,opt,name=created" json:"created,omitempty"`
	// Requested activation date filter
	RequestedActivation *ListSalesOrderRequest_DateRangeFilter `protobuf:"bytes,4,opt,name=requested_activation,json=requestedActivation" json:"requested_activation,omitempty"`
	// Multiple status filter
	Statuses []Status `protobuf:"varint,5,rep,packed,name=statuses,enum=salesorders.v1.Status" json:"statuses,omitempty"`
	// Singular business filter
	BusinessId string `protobuf:"bytes,6,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
}

func (m *ListSalesOrderRequest_Filters) Reset()         { *m = ListSalesOrderRequest_Filters{} }
func (m *ListSalesOrderRequest_Filters) String() string { return proto.CompactTextString(m) }
func (*ListSalesOrderRequest_Filters) ProtoMessage()    {}
func (*ListSalesOrderRequest_Filters) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{12, 0}
}

func (m *ListSalesOrderRequest_Filters) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *ListSalesOrderRequest_Filters) GetSalespersonId() string {
	if m != nil {
		return m.SalespersonId
	}
	return ""
}

func (m *ListSalesOrderRequest_Filters) GetCreated() *ListSalesOrderRequest_DateRangeFilter {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *ListSalesOrderRequest_Filters) GetRequestedActivation() *ListSalesOrderRequest_DateRangeFilter {
	if m != nil {
		return m.RequestedActivation
	}
	return nil
}

func (m *ListSalesOrderRequest_Filters) GetStatuses() []Status {
	if m != nil {
		return m.Statuses
	}
	return nil
}

func (m *ListSalesOrderRequest_Filters) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

// Begin and end of date range
type ListSalesOrderRequest_DateRangeFilter struct {
	BeginRange *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=begin_range,json=beginRange" json:"begin_range,omitempty"`
	EndRange   *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=end_range,json=endRange" json:"end_range,omitempty"`
}

func (m *ListSalesOrderRequest_DateRangeFilter) Reset()         { *m = ListSalesOrderRequest_DateRangeFilter{} }
func (m *ListSalesOrderRequest_DateRangeFilter) String() string { return proto.CompactTextString(m) }
func (*ListSalesOrderRequest_DateRangeFilter) ProtoMessage()    {}
func (*ListSalesOrderRequest_DateRangeFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{12, 1}
}

func (m *ListSalesOrderRequest_DateRangeFilter) GetBeginRange() *google_protobuf.Timestamp {
	if m != nil {
		return m.BeginRange
	}
	return nil
}

func (m *ListSalesOrderRequest_DateRangeFilter) GetEndRange() *google_protobuf.Timestamp {
	if m != nil {
		return m.EndRange
	}
	return nil
}

// Options for controlling the order of query results
type ListSalesOrderRequest_SortOption struct {
	// A direction to sort results in
	Direction ListSalesOrderRequest_SortDirection `protobuf:"varint,1,opt,name=direction,enum=salesorders.v1.ListSalesOrderRequest_SortDirection" json:"direction,omitempty"`
	// Field to sort on
	Field ListSalesOrderRequest_SortField `protobuf:"varint,2,opt,name=field,enum=salesorders.v1.ListSalesOrderRequest_SortField" json:"field,omitempty"`
}

func (m *ListSalesOrderRequest_SortOption) Reset()         { *m = ListSalesOrderRequest_SortOption{} }
func (m *ListSalesOrderRequest_SortOption) String() string { return proto.CompactTextString(m) }
func (*ListSalesOrderRequest_SortOption) ProtoMessage()    {}
func (*ListSalesOrderRequest_SortOption) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{12, 2}
}

func (m *ListSalesOrderRequest_SortOption) GetDirection() ListSalesOrderRequest_SortDirection {
	if m != nil {
		return m.Direction
	}
	return ListSalesOrderRequest_ASCENDING
}

func (m *ListSalesOrderRequest_SortOption) GetField() ListSalesOrderRequest_SortField {
	if m != nil {
		return m.Field
	}
	return ListSalesOrderRequest_REQUESTED_ACTIVATION
}

// Response to get a list of orders for a partner
type ListSalesOrderResponse struct {
	// list of the requested sales order data
	Orders []*Order `protobuf:"bytes,1,rep,name=orders" json:"orders,omitempty"`
	// A cursor that can be provided to retrieve the next page of results
	NextCursor string `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor" json:"next_cursor,omitempty"`
	// Whether or not more results exist
	HasMore bool `protobuf:"varint,3,opt,name=has_more,json=hasMore" json:"has_more,omitempty"`
}

func (m *ListSalesOrderResponse) Reset()                    { *m = ListSalesOrderResponse{} }
func (m *ListSalesOrderResponse) String() string            { return proto.CompactTextString(m) }
func (*ListSalesOrderResponse) ProtoMessage()               {}
func (*ListSalesOrderResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

func (m *ListSalesOrderResponse) GetOrders() []*Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

func (m *ListSalesOrderResponse) GetNextCursor() string {
	if m != nil {
		return m.NextCursor
	}
	return ""
}

func (m *ListSalesOrderResponse) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

// Request for approving a order
type ApproveSalesOrderRequest struct {
	// Unique identifier of an order
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	// The business the order belongs to
	BusinessId string `protobuf:"bytes,2,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
}

func (m *ApproveSalesOrderRequest) Reset()                    { *m = ApproveSalesOrderRequest{} }
func (m *ApproveSalesOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*ApproveSalesOrderRequest) ProtoMessage()               {}
func (*ApproveSalesOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *ApproveSalesOrderRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *ApproveSalesOrderRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

// Response of approving an order
type ApproveSalesOrderResponse struct {
	// Sales order
	Order *Order `protobuf:"bytes,1,opt,name=order" json:"order,omitempty"`
}

func (m *ApproveSalesOrderResponse) Reset()                    { *m = ApproveSalesOrderResponse{} }
func (m *ApproveSalesOrderResponse) String() string            { return proto.CompactTextString(m) }
func (*ApproveSalesOrderResponse) ProtoMessage()               {}
func (*ApproveSalesOrderResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

func (m *ApproveSalesOrderResponse) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

// Request for declining a order
type DeclineSalesOrderRequest struct {
	// Unique identifier of an order
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	// The business the order belongs to
	BusinessId string `protobuf:"bytes,2,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// Reason to why the order is declined
	DeclinedReason string `protobuf:"bytes,3,opt,name=declined_reason,json=declinedReason" json:"declined_reason,omitempty"`
}

func (m *DeclineSalesOrderRequest) Reset()                    { *m = DeclineSalesOrderRequest{} }
func (m *DeclineSalesOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*DeclineSalesOrderRequest) ProtoMessage()               {}
func (*DeclineSalesOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{16} }

func (m *DeclineSalesOrderRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *DeclineSalesOrderRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *DeclineSalesOrderRequest) GetDeclinedReason() string {
	if m != nil {
		return m.DeclinedReason
	}
	return ""
}

// Response of declining an order
type DeclineSalesOrderResponse struct {
	// Sales order
	Order *Order `protobuf:"bytes,1,opt,name=order" json:"order,omitempty"`
}

func (m *DeclineSalesOrderResponse) Reset()                    { *m = DeclineSalesOrderResponse{} }
func (m *DeclineSalesOrderResponse) String() string            { return proto.CompactTextString(m) }
func (*DeclineSalesOrderResponse) ProtoMessage()               {}
func (*DeclineSalesOrderResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{17} }

func (m *DeclineSalesOrderResponse) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

// Request for activating products on the order
type ActivateProductsRequest struct {
	// Unique identifier of an order
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	// The business the order belongs to
	BusinessId string `protobuf:"bytes,2,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	// A list of additional unique information pertaining to an individual product
	CustomFields []*CustomField `protobuf:"bytes,3,rep,name=custom_fields,json=customFields" json:"custom_fields,omitempty"`
	// A list of additional information that is shared across multiple products
	CommonFields []*CommonField `protobuf:"bytes,4,rep,name=common_fields,json=commonFields" json:"common_fields,omitempty"`
}

func (m *ActivateProductsRequest) Reset()                    { *m = ActivateProductsRequest{} }
func (m *ActivateProductsRequest) String() string            { return proto.CompactTextString(m) }
func (*ActivateProductsRequest) ProtoMessage()               {}
func (*ActivateProductsRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{18} }

func (m *ActivateProductsRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *ActivateProductsRequest) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *ActivateProductsRequest) GetCustomFields() []*CustomField {
	if m != nil {
		return m.CustomFields
	}
	return nil
}

func (m *ActivateProductsRequest) GetCommonFields() []*CommonField {
	if m != nil {
		return m.CommonFields
	}
	return nil
}

// Response of activating products on the order
type ActivateProductsResponse struct {
	// Sales order
	Order *Order `protobuf:"bytes,1,opt,name=order" json:"order,omitempty"`
}

func (m *ActivateProductsResponse) Reset()                    { *m = ActivateProductsResponse{} }
func (m *ActivateProductsResponse) String() string            { return proto.CompactTextString(m) }
func (*ActivateProductsResponse) ProtoMessage()               {}
func (*ActivateProductsResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{19} }

func (m *ActivateProductsResponse) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func init() {
	proto.RegisterType((*AddonKey)(nil), "salesorders.v1.AddonKey")
	proto.RegisterType((*Package)(nil), "salesorders.v1.Package")
	proto.RegisterType((*Field)(nil), "salesorders.v1.Field")
	proto.RegisterType((*CustomField)(nil), "salesorders.v1.CustomField")
	proto.RegisterType((*CommonField)(nil), "salesorders.v1.CommonField")
	proto.RegisterType((*ProductActivation)(nil), "salesorders.v1.ProductActivation")
	proto.RegisterType((*AddonActivation)(nil), "salesorders.v1.AddonActivation")
	proto.RegisterType((*Order)(nil), "salesorders.v1.Order")
	proto.RegisterType((*CreateSalesOrderRequest)(nil), "salesorders.v1.CreateSalesOrderRequest")
	proto.RegisterType((*CreateSalesOrderResponse)(nil), "salesorders.v1.CreateSalesOrderResponse")
	proto.RegisterType((*GetSalesOrderRequest)(nil), "salesorders.v1.GetSalesOrderRequest")
	proto.RegisterType((*GetSalesOrderResponse)(nil), "salesorders.v1.GetSalesOrderResponse")
	proto.RegisterType((*ListSalesOrderRequest)(nil), "salesorders.v1.ListSalesOrderRequest")
	proto.RegisterType((*ListSalesOrderRequest_Filters)(nil), "salesorders.v1.ListSalesOrderRequest.Filters")
	proto.RegisterType((*ListSalesOrderRequest_DateRangeFilter)(nil), "salesorders.v1.ListSalesOrderRequest.DateRangeFilter")
	proto.RegisterType((*ListSalesOrderRequest_SortOption)(nil), "salesorders.v1.ListSalesOrderRequest.SortOption")
	proto.RegisterType((*ListSalesOrderResponse)(nil), "salesorders.v1.ListSalesOrderResponse")
	proto.RegisterType((*ApproveSalesOrderRequest)(nil), "salesorders.v1.ApproveSalesOrderRequest")
	proto.RegisterType((*ApproveSalesOrderResponse)(nil), "salesorders.v1.ApproveSalesOrderResponse")
	proto.RegisterType((*DeclineSalesOrderRequest)(nil), "salesorders.v1.DeclineSalesOrderRequest")
	proto.RegisterType((*DeclineSalesOrderResponse)(nil), "salesorders.v1.DeclineSalesOrderResponse")
	proto.RegisterType((*ActivateProductsRequest)(nil), "salesorders.v1.ActivateProductsRequest")
	proto.RegisterType((*ActivateProductsResponse)(nil), "salesorders.v1.ActivateProductsResponse")
	proto.RegisterEnum("salesorders.v1.Status", Status_name, Status_value)
	proto.RegisterEnum("salesorders.v1.ActivationStatus", ActivationStatus_name, ActivationStatus_value)
	proto.RegisterEnum("salesorders.v1.FieldType", FieldType_name, FieldType_value)
	proto.RegisterEnum("salesorders.v1.ListSalesOrderRequest_SortField", ListSalesOrderRequest_SortField_name, ListSalesOrderRequest_SortField_value)
	proto.RegisterEnum("salesorders.v1.ListSalesOrderRequest_SortDirection", ListSalesOrderRequest_SortDirection_name, ListSalesOrderRequest_SortDirection_value)
}

func init() { proto.RegisterFile("sales_orders/v1/sales_orders.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 1584 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x58, 0xcd, 0x6f, 0xdb, 0x46,
	0x16, 0x0f, 0x25, 0x4b, 0x22, 0x9f, 0xfc, 0x21, 0x4f, 0xec, 0x84, 0x76, 0x76, 0x11, 0x2f, 0x81,
	0xc5, 0x1a, 0x09, 0x22, 0x6f, 0x9c, 0x64, 0x13, 0x60, 0x17, 0x8b, 0x2a, 0x12, 0xed, 0x10, 0x91,
	0x2d, 0x65, 0x24, 0xa7, 0x29, 0x50, 0x80, 0xa0, 0xc5, 0xb1, 0x43, 0x44, 0x26, 0x19, 0x0e, 0xe5,
	0xd6, 0xb9, 0x14, 0x45, 0x0f, 0x01, 0x7a, 0x2c, 0x7a, 0xef, 0xad, 0xa7, 0xfe, 0x43, 0x3d, 0xf4,
	0xd6, 0x3f, 0xa4, 0x98, 0x0f, 0x52, 0x32, 0x25, 0x59, 0x8e, 0x9d, 0x1b, 0xe7, 0xcd, 0x7b, 0x6f,
	0xde, 0xd7, 0xef, 0x37, 0x23, 0x81, 0x41, 0x9d, 0x3e, 0xa1, 0x76, 0x10, 0xb9, 0x24, 0xa2, 0x5b,
	0xa7, 0x0f, 0xb7, 0x46, 0xd7, 0xd5, 0x30, 0x0a, 0xe2, 0x00, 0x2d, 0x72, 0x99, 0x14, 0x9d, 0x3e,
	0x5c, 0xbf, 0x7b, 0x1c, 0x04, 0xc7, 0x7d, 0xb2, 0xc5, 0x77, 0x0f, 0x07, 0x47, 0x5b, 0xb1, 0x77,
	0x42, 0x68, 0xec, 0x9c, 0x84, 0xc2, 0x60, 0xfd, 0x6f, 0x59, 0xa7, 0xbd, 0xe0, 0xe4, 0x24, 0xf0,
	0xc5, 0xae, 0xf1, 0x3f, 0x50, 0x6b, 0xae, 0x1b, 0xf8, 0x2f, 0xc9, 0x19, 0x5a, 0x03, 0xd5, 0x61,
	0xdf, 0xb6, 0xe7, 0xea, 0xca, 0x86, 0xb2, 0xa9, 0xe1, 0x12, 0x5f, 0x5b, 0x2e, 0x5a, 0x85, 0xa2,
	0x13, 0x86, 0x6c, 0x23, 0xc7, 0x37, 0x0a, 0x4e, 0x18, 0x5a, 0xae, 0xf1, 0x31, 0x07, 0xa5, 0xb6,
	0xd3, 0x7b, 0xe7, 0x1c, 0x13, 0xf4, 0x77, 0x80, 0x50, 0x7c, 0x0e, 0xed, 0x35, 0x29, 0xb1, 0x5c,
	0xf4, 0x18, 0xd4, 0xde, 0x20, 0x8a, 0x88, 0xdf, 0x3b, 0xe3, 0x3e, 0x16, 0xb7, 0xf5, 0xea, 0xf9,
	0x54, 0xaa, 0x75, 0xb9, 0x8f, 0x53, 0x4d, 0xf4, 0x10, 0x4a, 0x11, 0x39, 0x25, 0xfe, 0x80, 0xe8,
	0xf9, 0x0d, 0x65, 0xb3, 0xbc, 0x7d, 0x3b, 0x6b, 0x84, 0xc5, 0x36, 0x4e, 0xf4, 0xd0, 0x3a, 0xa8,
	0xef, 0x07, 0x8e, 0x1f, 0x7b, 0xf1, 0x99, 0x3e, 0xb7, 0xa1, 0x6c, 0xe6, 0x71, 0xba, 0x46, 0x77,
	0xa1, 0x1c, 0x46, 0x81, 0x3b, 0xe8, 0xc5, 0xb6, 0xe7, 0x52, 0xbd, 0xb0, 0x91, 0xdf, 0xd4, 0x30,
	0x48, 0x91, 0xe5, 0x52, 0xf4, 0x14, 0x40, 0x94, 0xe0, 0x1d, 0x39, 0xa3, 0x7a, 0x71, 0x23, 0xbf,
	0x59, 0x1e, 0x8f, 0x33, 0x29, 0x18, 0xd6, 0x1c, 0xf9, 0x45, 0x8d, 0xdf, 0x14, 0x28, 0xec, 0x78,
	0xa4, 0xef, 0xb2, 0x2a, 0x1e, 0xb1, 0x8f, 0x91, 0x2a, 0xf2, 0xb5, 0xe5, 0xa2, 0x5b, 0x50, 0x74,
	0x7c, 0xfa, 0x0d, 0x89, 0x64, 0x15, 0xe5, 0x0a, 0x3d, 0x03, 0x10, 0x26, 0xf1, 0x59, 0x28, 0x12,
	0x5d, 0xdc, 0x5e, 0xcb, 0x9e, 0xca, 0xbd, 0x77, 0xcf, 0x42, 0x82, 0xb5, 0xa3, 0xe4, 0x13, 0xad,
	0x40, 0xa1, 0xef, 0x1c, 0x92, 0x3e, 0xcf, 0x54, 0xc3, 0x62, 0x81, 0x36, 0xa0, 0xec, 0x12, 0xda,
	0x8b, 0xbc, 0x30, 0xf6, 0x02, 0x5f, 0x2f, 0xf0, 0xbd, 0x51, 0x91, 0xf1, 0x93, 0x02, 0xe5, 0xfa,
	0x80, 0xc6, 0xc1, 0x89, 0x08, 0xfa, 0x01, 0x14, 0xb9, 0x53, 0xaa, 0x2b, 0x3c, 0xe7, 0xd5, 0x89,
	0xa7, 0x63, 0xa9, 0xc4, 0x7b, 0x9d, 0xd6, 0x51, 0x26, 0xa3, 0xa5, 0x65, 0x44, 0x4f, 0x40, 0x4b,
	0xab, 0x28, 0xfb, 0x36, 0xbd, 0x88, 0x6a, 0x52, 0x44, 0xe3, 0x67, 0x16, 0x14, 0x1f, 0x4e, 0x11,
	0xd4, 0x7d, 0x28, 0xf0, 0xf3, 0x78, 0x19, 0xa7, 0xc6, 0x24, 0x74, 0xb2, 0xad, 0xcd, 0xcd, 0x68,
	0x6d, 0xfe, 0xf2, 0xad, 0xfd, 0x5e, 0x81, 0xe5, 0xb6, 0xf0, 0x53, 0xeb, 0xc5, 0xde, 0xa9, 0xc3,
	0x2a, 0x98, 0x29, 0x81, 0x92, 0x2d, 0xc1, 0x1e, 0x2c, 0x3b, 0xa9, 0xb2, 0x4d, 0x63, 0x27, 0x1e,
	0x50, 0x39, 0xf7, 0x1b, 0x63, 0x87, 0xa6, 0x8a, 0x1d, 0xae, 0x87, 0x2b, 0x4e, 0x46, 0xc2, 0xfa,
	0xb5, 0xc4, 0x63, 0x1b, 0x89, 0xe0, 0x93, 0xe1, 0x3a, 0x39, 0xa8, 0xfc, 0x95, 0x83, 0xfa, 0xa5,
	0x04, 0x85, 0x16, 0x33, 0x60, 0xa1, 0x70, 0xcb, 0x91, 0x50, 0xf8, 0xda, 0x72, 0xd1, 0x3f, 0x41,
	0x30, 0x56, 0x48, 0x22, 0x2a, 0x62, 0x15, 0x21, 0x2d, 0x8c, 0x48, 0x2d, 0x57, 0xb0, 0x47, 0x14,
	0xfb, 0xc2, 0x47, 0x3e, 0x61, 0x0f, 0x2e, 0xb1, 0x78, 0x77, 0x0f, 0x07, 0xd4, 0xf3, 0x09, 0xa5,
	0x6c, 0x5f, 0x4c, 0x3b, 0x24, 0x22, 0xcb, 0x45, 0x77, 0x40, 0x3b, 0x71, 0xa2, 0x77, 0x84, 0x77,
	0x43, 0x0c, 0xbc, 0x2a, 0x04, 0x96, 0x8b, 0xfe, 0x05, 0x4b, 0x41, 0x18, 0x06, 0x51, 0x3c, 0xf0,
	0xbd, 0xf8, 0x8c, 0xcf, 0x47, 0x91, 0xcf, 0xc7, 0xe2, 0x88, 0x98, 0xcd, 0x48, 0x15, 0x8a, 0xb2,
	0x2a, 0x25, 0x5e, 0x95, 0x5b, 0xd9, 0xaa, 0xc8, 0x5a, 0x48, 0x2d, 0xb4, 0x07, 0x2b, 0x11, 0x79,
	0x3f, 0x20, 0x34, 0x26, 0xae, 0x3d, 0xac, 0x8f, 0xae, 0xf2, 0x81, 0x5d, 0xaf, 0x0a, 0x6e, 0xae,
	0x26, 0xdc, 0x5c, 0xed, 0x26, 0xdc, 0x8c, 0x6f, 0xa6, 0x76, 0x23, 0x1d, 0x5d, 0x81, 0x82, 0x1f,
	0xc4, 0x84, 0xea, 0x9a, 0xe8, 0x1a, 0x5f, 0xa0, 0x47, 0xa0, 0x4a, 0x1a, 0xa5, 0x3a, 0xf0, 0xb1,
	0x1d, 0x23, 0x41, 0xc9, 0xc1, 0x38, 0x55, 0x44, 0x5f, 0xc0, 0x42, 0x8f, 0xe3, 0xdb, 0x96, 0xb8,
	0x2e, 0x73, 0xcb, 0x3b, 0xe3, 0x9c, 0x9b, 0x92, 0x00, 0x9e, 0xef, 0x0d, 0x17, 0xc2, 0x03, 0x07,
	0x63, 0xe2, 0x61, 0x7e, 0x8a, 0x87, 0x21, 0x62, 0xf1, 0x7c, 0x6f, 0xb8, 0xa0, 0xe8, 0x31, 0x94,
	0x7a, 0x11, 0x71, 0x62, 0xe2, 0xea, 0x0b, 0x33, 0x0b, 0x92, 0xa8, 0x22, 0x0c, 0x37, 0x13, 0x60,
	0x0d, 0x2b, 0x4a, 0xf5, 0x45, 0x7e, 0xfa, 0x3f, 0xc6, 0x32, 0xcf, 0x02, 0x13, 0xa3, 0x30, 0x2b,
	0xa2, 0xe8, 0x3f, 0xa0, 0x3a, 0x61, 0x18, 0x05, 0xa7, 0xc4, 0xd5, 0x97, 0x66, 0x86, 0x92, 0xea,
	0x32, 0x3b, 0x97, 0xf4, 0xfa, 0x9e, 0x4f, 0x5c, 0xbd, 0x32, 0xdb, 0x2e, 0xd1, 0x45, 0xcf, 0x40,
	0x3b, 0x1a, 0xf4, 0x8f, 0xbc, 0x7e, 0x9f, 0xb8, 0xfa, 0xf2, 0x4c, 0xc3, 0xa1, 0x32, 0x6a, 0xc2,
	0xb2, 0x00, 0xf5, 0x68, 0xee, 0x88, 0xe7, 0x7e, 0x77, 0x22, 0x59, 0x8d, 0x64, 0x5e, 0x71, 0xce,
	0x0b, 0xa8, 0xf1, 0x67, 0x1e, 0x6e, 0xd7, 0x79, 0x5d, 0x3b, 0xcc, 0x94, 0x83, 0x15, 0x8b, 0xc1,
	0x9b, 0x00, 0x4c, 0x65, 0x36, 0x30, 0x73, 0x33, 0x80, 0x99, 0xbf, 0x18, 0x98, 0x73, 0xb3, 0x81,
	0x59, 0x98, 0x08, 0xcc, 0x69, 0x40, 0x2b, 0x5e, 0x13, 0x68, 0xa5, 0x69, 0x40, 0x53, 0xaf, 0x0c,
	0x34, 0xed, 0xda, 0x40, 0x83, 0x4f, 0x04, 0x9a, 0xf1, 0x04, 0xf4, 0xf1, 0x2e, 0xd3, 0x30, 0xf0,
	0x29, 0xb9, 0x80, 0x9a, 0x0d, 0x0c, 0x2b, 0xbb, 0x24, 0x1e, 0x9f, 0x8c, 0x0b, 0xd8, 0x3c, 0xd3,
	0xee, 0x5c, 0xb6, 0xdd, 0x46, 0x03, 0x56, 0x33, 0x3e, 0x65, 0x1c, 0xf7, 0xa1, 0xc0, 0x9d, 0x4c,
	0xbb, 0xcc, 0x85, 0xb6, 0xd0, 0x31, 0x7e, 0x54, 0x61, 0xb5, 0xe9, 0xd1, 0x09, 0xb1, 0x9d, 0x1f,
	0x47, 0x25, 0x3b, 0x8e, 0xbb, 0x50, 0x3a, 0xf2, 0xfa, 0x31, 0x89, 0xc4, 0x65, 0x5b, 0xde, 0x7e,
	0x90, 0x3d, 0x67, 0xa2, 0xdb, 0xea, 0x8e, 0x30, 0xc2, 0x89, 0x35, 0x7a, 0x05, 0x65, 0x1a, 0x44,
	0xb1, 0x1d, 0x88, 0x27, 0x94, 0x78, 0xc4, 0xfc, 0xfb, 0x72, 0xce, 0x3a, 0x41, 0x14, 0xb7, 0xb8,
	0x1d, 0x06, 0x9a, 0x7e, 0xb3, 0xd7, 0x5f, 0x6f, 0x10, 0xd1, 0x20, 0x92, 0x30, 0x90, 0x2b, 0x86,
	0x90, 0x90, 0xbd, 0x9a, 0xa9, 0xf7, 0x81, 0xf0, 0xab, 0x2b, 0xcf, 0xc6, 0xeb, 0x98, 0x74, 0xbc,
	0x0f, 0x64, 0xfd, 0x8f, 0x1c, 0x94, 0x64, 0x70, 0xe7, 0xa1, 0xa4, 0x64, 0xa0, 0x74, 0xc9, 0x7b,
	0xb6, 0x35, 0xe4, 0x64, 0x91, 0xd3, 0x93, 0xcb, 0xe5, 0xd4, 0x70, 0x62, 0x82, 0x1d, 0xff, 0x98,
	0x88, 0x60, 0x86, 0x74, 0xfd, 0x76, 0x0a, 0x32, 0xe7, 0xae, 0xe3, 0x7d, 0x22, 0x68, 0xb7, 0x41,
	0x15, 0xd7, 0x2e, 0x11, 0x2c, 0x31, 0xfd, 0x7a, 0x4e, 0xf5, 0xb2, 0xf3, 0x5a, 0xcc, 0xce, 0xeb,
	0xfa, 0x47, 0x05, 0x96, 0x32, 0xa7, 0xa3, 0xff, 0x42, 0xf9, 0x90, 0x1c, 0x7b, 0xbe, 0x1d, 0x31,
	0xa1, 0x1c, 0xd8, 0x8b, 0x38, 0x06, 0xb8, 0x3a, 0x77, 0x81, 0x9e, 0x82, 0x46, 0x7c, 0x57, 0x9a,
	0xe6, 0x66, 0xdf, 0x19, 0xc4, 0x77, 0xb9, 0xe1, 0xfa, 0xaf, 0x0a, 0xc0, 0x70, 0x72, 0xd0, 0x2b,
	0xd0, 0x5c, 0x2f, 0x22, 0x3d, 0x5e, 0x4c, 0x85, 0xbf, 0x46, 0x1e, 0x5d, 0x7e, 0xfc, 0x1a, 0x89,
	0x29, 0x1e, 0x7a, 0x41, 0x66, 0xf2, 0x9e, 0x16, 0xef, 0xd0, 0xad, 0xcb, 0xbb, 0x1b, 0x7d, 0x69,
	0x1b, 0xff, 0x07, 0x2d, 0x95, 0x21, 0x1d, 0x56, 0xb0, 0xf9, 0xea, 0xc0, 0xec, 0x74, 0xcd, 0x86,
	0x5d, 0xab, 0x77, 0xad, 0xd7, 0xb5, 0xae, 0xd5, 0xda, 0xaf, 0xdc, 0x40, 0x65, 0x28, 0xd5, 0xb1,
	0x59, 0xeb, 0x9a, 0x8d, 0x8a, 0x82, 0x00, 0x8a, 0x9d, 0x6e, 0xad, 0x7b, 0xd0, 0xa9, 0xe4, 0x8c,
	0x2a, 0x2c, 0x9c, 0x0b, 0x11, 0x2d, 0x80, 0x56, 0xeb, 0xd4, 0xcd, 0xfd, 0x86, 0xb5, 0xbf, 0x5b,
	0xb9, 0x81, 0x16, 0x01, 0x1a, 0x66, 0xba, 0x56, 0x8c, 0x1f, 0x14, 0xb8, 0x95, 0x0d, 0x4d, 0x92,
	0xca, 0x03, 0x28, 0x8a, 0xf0, 0xa7, 0xfd, 0x6c, 0x11, 0xea, 0x52, 0x89, 0x4d, 0x83, 0x4f, 0xbe,
	0x8d, 0x6d, 0x09, 0x43, 0xc9, 0x5e, 0x4c, 0x54, 0x17, 0x50, 0x5c, 0x03, 0xf5, 0xad, 0x43, 0xed,
	0x93, 0x20, 0x12, 0x3f, 0xc3, 0x54, 0x5c, 0x7a, 0xeb, 0xd0, 0xbd, 0x20, 0x22, 0xc6, 0x6b, 0xd0,
	0x6b, 0xe2, 0x59, 0xf0, 0x79, 0x09, 0xf3, 0x05, 0xac, 0x4d, 0xf0, 0x7b, 0x15, 0xd2, 0xfc, 0x0e,
	0xf4, 0x86, 0x78, 0x80, 0x7c, 0xd6, 0x08, 0xd9, 0x25, 0x9d, 0x3c, 0x6c, 0xec, 0x88, 0x38, 0x54,
	0xd2, 0xa1, 0x86, 0x17, 0x13, 0x31, 0xe6, 0x52, 0x96, 0xca, 0x84, 0x00, 0xae, 0x92, 0xca, 0xef,
	0x0a, 0xdc, 0x96, 0xc8, 0x27, 0xf2, 0x85, 0x47, 0x3f, 0x47, 0x2a, 0x63, 0x97, 0x75, 0xfe, 0xda,
	0x97, 0xf5, 0xdc, 0xa7, 0x5e, 0xd6, 0xbb, 0xa0, 0x8f, 0xa7, 0x76, 0x85, 0x22, 0xdd, 0x3b, 0x85,
	0xa2, 0xe0, 0x3b, 0x06, 0xa0, 0xce, 0xc1, 0xf3, 0x3d, 0xab, 0xcb, 0xc0, 0x76, 0x03, 0xcd, 0x83,
	0x5a, 0x6b, 0xb7, 0x71, 0xeb, 0x35, 0x87, 0xde, 0x3c, 0xa8, 0x0d, 0xb3, 0xde, 0xb4, 0xf6, 0xcd,
	0x46, 0x25, 0xc7, 0x50, 0xd9, 0xc0, 0xb5, 0x1d, 0xa6, 0x98, 0x67, 0x76, 0x3b, 0x07, 0xcd, 0x1d,
	0xab, 0xd9, 0x34, 0x1b, 0x95, 0x39, 0x06, 0xbc, 0x36, 0x6e, 0xd5, 0xcd, 0x4e, 0x87, 0x01, 0xaf,
	0x80, 0x56, 0x61, 0x79, 0x88, 0x68, 0xdb, 0xc4, 0xb8, 0x85, 0x3b, 0x95, 0xe2, 0x3d, 0x0c, 0x95,
	0xec, 0x8f, 0x43, 0xe6, 0xb6, 0x9d, 0x02, 0x98, 0xe1, 0x59, 0xd8, 0xf1, 0x00, 0xca, 0x50, 0xe2,
	0xb6, 0xfc, 0x7c, 0xe6, 0xb3, 0x89, 0xcd, 0x5a, 0xe3, 0x2b, 0x7b, 0xa8, 0x93, 0xbf, 0xf7, 0x35,
	0x68, 0xe9, 0xff, 0x1b, 0x68, 0x19, 0x16, 0xf6, 0x5b, 0x5d, 0xbb, 0xd3, 0x36, 0xeb, 0xd6, 0x8e,
	0xc5, 0x53, 0x52, 0x61, 0xae, 0x6b, 0xbe, 0xe9, 0x8a, 0x74, 0xd8, 0x57, 0x0d, 0x9b, 0xb5, 0x4a,
	0x8e, 0x27, 0x87, 0x5b, 0xed, 0x46, 0xeb, 0xcb, 0xfd, 0x4a, 0x9e, 0xad, 0xea, 0x2f, 0xcc, 0xfa,
	0xcb, 0xe7, 0xad, 0x37, 0x95, 0x39, 0x66, 0xb3, 0x63, 0x35, 0xcd, 0x4a, 0xe1, 0xb0, 0xc8, 0x89,
	0xf7, 0xd1, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x23, 0x70, 0x32, 0x7d, 0x60, 0x13, 0x00, 0x00,
}
