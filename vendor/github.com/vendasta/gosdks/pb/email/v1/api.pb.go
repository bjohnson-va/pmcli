// Code generated by protoc-gen-go.
// source: api.proto
// DO NOT EDIT!

/*
Package email_v1 is a generated protocol buffer package.

It is generated from these files:
	api.proto
	email_event.proto

It has these top-level messages:
	PagedResponseMetadata
	PagedRequestOptions
	DateRangeFilter
	ListEmailEventsRequest
	ListEmailEventsResponse
	Attribute
	EmailEvent
*/
package email_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Contains metadata about the paged response
type PagedResponseMetadata struct {
	// A cursor that can be provided to retrieve the next page of results
	NextCursor string `protobuf:"bytes,1,opt,name=next_cursor,json=nextCursor" json:"next_cursor,omitempty"`
	// Whether or not more results exist
	HasMore bool `protobuf:"varint,2,opt,name=has_more,json=hasMore" json:"has_more,omitempty"`
	// Total results found by the operation
	TotalResults int64 `protobuf:"varint,3,opt,name=total_results,json=totalResults" json:"total_results,omitempty"`
}

func (m *PagedResponseMetadata) Reset()                    { *m = PagedResponseMetadata{} }
func (m *PagedResponseMetadata) String() string            { return proto.CompactTextString(m) }
func (*PagedResponseMetadata) ProtoMessage()               {}
func (*PagedResponseMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PagedResponseMetadata) GetNextCursor() string {
	if m != nil {
		return m.NextCursor
	}
	return ""
}

func (m *PagedResponseMetadata) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *PagedResponseMetadata) GetTotalResults() int64 {
	if m != nil {
		return m.TotalResults
	}
	return 0
}

// To provide options for the paged request
type PagedRequestOptions struct {
	// cursor can be passed to retrieve the next page of results keyed by the cursor
	Cursor string `protobuf:"bytes,1,opt,name=cursor" json:"cursor,omitempty"`
	// page_size specifies the number of items to return in the next page
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *PagedRequestOptions) Reset()                    { *m = PagedRequestOptions{} }
func (m *PagedRequestOptions) String() string            { return proto.CompactTextString(m) }
func (*PagedRequestOptions) ProtoMessage()               {}
func (*PagedRequestOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PagedRequestOptions) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *PagedRequestOptions) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// Start and end of a date range to filter on
type DateRangeFilter struct {
	// Start of the range
	Start *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=start" json:"start,omitempty"`
	// End of the range
	End *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=end" json:"end,omitempty"`
}

func (m *DateRangeFilter) Reset()                    { *m = DateRangeFilter{} }
func (m *DateRangeFilter) String() string            { return proto.CompactTextString(m) }
func (*DateRangeFilter) ProtoMessage()               {}
func (*DateRangeFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DateRangeFilter) GetStart() *google_protobuf.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *DateRangeFilter) GetEnd() *google_protobuf.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

// List email events matching a set of filters
type ListEmailEventsRequest struct {
	Filters *ListEmailEventsRequest_Filters `protobuf:"bytes,1,opt,name=filters" json:"filters,omitempty"`
	// Options for how to page the response for this request
	PagingOptions *PagedRequestOptions `protobuf:"bytes,2,opt,name=paging_options,json=pagingOptions" json:"paging_options,omitempty"`
}

func (m *ListEmailEventsRequest) Reset()                    { *m = ListEmailEventsRequest{} }
func (m *ListEmailEventsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListEmailEventsRequest) ProtoMessage()               {}
func (*ListEmailEventsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListEmailEventsRequest) GetFilters() *ListEmailEventsRequest_Filters {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *ListEmailEventsRequest) GetPagingOptions() *PagedRequestOptions {
	if m != nil {
		return m.PagingOptions
	}
	return nil
}

// Filters to filter the list of email events on
type ListEmailEventsRequest_Filters struct {
	// Attributes to filter on
	Attributes []*Attribute `protobuf:"bytes,1,rep,name=attributes" json:"attributes,omitempty"`
	// Event time range to filter on
	EventTimeFilter *DateRangeFilter `protobuf:"bytes,2,opt,name=event_time_filter,json=eventTimeFilter" json:"event_time_filter,omitempty"`
	// Event types to filter on
	EventTypes []EventType `protobuf:"varint,3,rep,packed,name=event_types,json=eventTypes,enum=email.v1.EventType" json:"event_types,omitempty"`
}

func (m *ListEmailEventsRequest_Filters) Reset()         { *m = ListEmailEventsRequest_Filters{} }
func (m *ListEmailEventsRequest_Filters) String() string { return proto.CompactTextString(m) }
func (*ListEmailEventsRequest_Filters) ProtoMessage()    {}
func (*ListEmailEventsRequest_Filters) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0}
}

func (m *ListEmailEventsRequest_Filters) GetAttributes() []*Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *ListEmailEventsRequest_Filters) GetEventTimeFilter() *DateRangeFilter {
	if m != nil {
		return m.EventTimeFilter
	}
	return nil
}

func (m *ListEmailEventsRequest_Filters) GetEventTypes() []EventType {
	if m != nil {
		return m.EventTypes
	}
	return nil
}

// Response containing a list of email events and paging metadata
type ListEmailEventsResponse struct {
	// The email events matching the lookup query
	Events []*EmailEvent `protobuf:"bytes,1,rep,name=events" json:"events,omitempty"`
	// Metadata about the paging
	PagingMetadata *PagedResponseMetadata `protobuf:"bytes,3,opt,name=paging_metadata,json=pagingMetadata" json:"paging_metadata,omitempty"`
}

func (m *ListEmailEventsResponse) Reset()                    { *m = ListEmailEventsResponse{} }
func (m *ListEmailEventsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListEmailEventsResponse) ProtoMessage()               {}
func (*ListEmailEventsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListEmailEventsResponse) GetEvents() []*EmailEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *ListEmailEventsResponse) GetPagingMetadata() *PagedResponseMetadata {
	if m != nil {
		return m.PagingMetadata
	}
	return nil
}

func init() {
	proto.RegisterType((*PagedResponseMetadata)(nil), "email.v1.PagedResponseMetadata")
	proto.RegisterType((*PagedRequestOptions)(nil), "email.v1.PagedRequestOptions")
	proto.RegisterType((*DateRangeFilter)(nil), "email.v1.DateRangeFilter")
	proto.RegisterType((*ListEmailEventsRequest)(nil), "email.v1.ListEmailEventsRequest")
	proto.RegisterType((*ListEmailEventsRequest_Filters)(nil), "email.v1.ListEmailEventsRequest.Filters")
	proto.RegisterType((*ListEmailEventsResponse)(nil), "email.v1.ListEmailEventsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ActivityService service

type ActivityServiceClient interface {
	// List email events matching a set of filters
	ListEmailEvents(ctx context.Context, in *ListEmailEventsRequest, opts ...grpc.CallOption) (*ListEmailEventsResponse, error)
}

type activityServiceClient struct {
	cc *grpc.ClientConn
}

func NewActivityServiceClient(cc *grpc.ClientConn) ActivityServiceClient {
	return &activityServiceClient{cc}
}

func (c *activityServiceClient) ListEmailEvents(ctx context.Context, in *ListEmailEventsRequest, opts ...grpc.CallOption) (*ListEmailEventsResponse, error) {
	out := new(ListEmailEventsResponse)
	err := grpc.Invoke(ctx, "/email.v1.ActivityService/ListEmailEvents", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ActivityService service

type ActivityServiceServer interface {
	// List email events matching a set of filters
	ListEmailEvents(context.Context, *ListEmailEventsRequest) (*ListEmailEventsResponse, error)
}

func RegisterActivityServiceServer(s *grpc.Server, srv ActivityServiceServer) {
	s.RegisterService(&_ActivityService_serviceDesc, srv)
}

func _ActivityService_ListEmailEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEmailEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityServiceServer).ListEmailEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/email.v1.ActivityService/ListEmailEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityServiceServer).ListEmailEvents(ctx, req.(*ListEmailEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ActivityService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "email.v1.ActivityService",
	HandlerType: (*ActivityServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListEmailEvents",
			Handler:    _ActivityService_ListEmailEvents_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 512 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x53, 0xdb, 0x6e, 0x13, 0x31,
	0x14, 0x64, 0xbb, 0x22, 0x97, 0x13, 0xda, 0xa8, 0x2e, 0x94, 0x34, 0x08, 0x25, 0x2c, 0x2f, 0xfb,
	0x50, 0x6d, 0x21, 0xe5, 0x07, 0x0a, 0x0d, 0x42, 0x88, 0x0a, 0xe4, 0xf6, 0x81, 0xb7, 0x95, 0x93,
	0x9c, 0x6e, 0x2d, 0x92, 0xf5, 0xd6, 0x3e, 0x89, 0x9a, 0xfe, 0x05, 0xdf, 0xc3, 0xcf, 0xf0, 0x29,
	0x68, 0x6d, 0x2f, 0x49, 0x2f, 0x6a, 0xdf, 0xe2, 0xc9, 0x9c, 0x39, 0xe3, 0xf1, 0x2c, 0x34, 0x45,
	0x21, 0x93, 0x42, 0x2b, 0x52, 0xac, 0x81, 0x33, 0x21, 0xa7, 0xc9, 0xe2, 0x7d, 0xb7, 0x97, 0x29,
	0x95, 0x4d, 0xf1, 0xc0, 0xe2, 0xa3, 0xf9, 0xf9, 0x01, 0xc9, 0x19, 0x1a, 0x12, 0xb3, 0xc2, 0x51,
	0xbb, 0xdb, 0x96, 0x9a, 0xe2, 0x02, 0x73, 0x72, 0x50, 0x74, 0x05, 0x2f, 0x7e, 0x88, 0x0c, 0x27,
	0x1c, 0x4d, 0xa1, 0x72, 0x83, 0x27, 0x48, 0x62, 0x22, 0x48, 0xb0, 0x1e, 0xb4, 0x72, 0xbc, 0xa2,
	0x74, 0x3c, 0xd7, 0x46, 0xe9, 0x4e, 0xd0, 0x0f, 0xe2, 0x26, 0x87, 0x12, 0xfa, 0x64, 0x11, 0xb6,
	0x07, 0x8d, 0x0b, 0x61, 0xd2, 0x99, 0xd2, 0xd8, 0xd9, 0xe8, 0x07, 0x71, 0x83, 0xd7, 0x2f, 0x84,
	0x39, 0x51, 0x1a, 0xd9, 0x5b, 0xd8, 0x24, 0x45, 0x62, 0x9a, 0x6a, 0x34, 0xf3, 0x29, 0x99, 0x4e,
	0xd8, 0x0f, 0xe2, 0x90, 0x3f, 0xb3, 0x20, 0x77, 0x58, 0xf4, 0x15, 0x76, 0xfc, 0xe6, 0xcb, 0x39,
	0x1a, 0xfa, 0x5e, 0x90, 0x54, 0xb9, 0x61, 0xbb, 0x50, 0xbb, 0xb1, 0xd2, 0x9f, 0xd8, 0x2b, 0x68,
	0x16, 0x22, 0xc3, 0xd4, 0xc8, 0x6b, 0xb7, 0x2f, 0xe4, 0x8d, 0x12, 0x38, 0x95, 0xd7, 0x18, 0x5d,
	0x42, 0xfb, 0x58, 0x10, 0x72, 0x91, 0x67, 0xf8, 0x59, 0x4e, 0x09, 0x35, 0x7b, 0x07, 0x4f, 0x0d,
	0x09, 0x4d, 0x56, 0xa6, 0x35, 0xe8, 0x26, 0x2e, 0x9c, 0xa4, 0x0a, 0x27, 0x39, 0xab, 0xc2, 0xe1,
	0x8e, 0xc8, 0xf6, 0x21, 0xc4, 0x7c, 0x62, 0xb5, 0x1f, 0xe6, 0x97, 0xb4, 0xe8, 0xef, 0x06, 0xec,
	0x7e, 0x93, 0x86, 0x86, 0x65, 0xa4, 0xc3, 0x32, 0x51, 0xe3, 0x6f, 0xc2, 0x3e, 0x42, 0xfd, 0xdc,
	0x9a, 0x30, 0x7e, 0x79, 0x9c, 0x54, 0x6f, 0x94, 0xdc, 0x3f, 0x92, 0x38, 0xd3, 0x86, 0x57, 0x83,
	0xec, 0x18, 0xb6, 0x0a, 0x91, 0xc9, 0x3c, 0x4b, 0x95, 0x0b, 0xc6, 0xfb, 0x7a, 0xbd, 0x92, 0xba,
	0x27, 0x3d, 0xbe, 0xe9, 0x86, 0xfc, 0xb1, 0xfb, 0x27, 0x80, 0xba, 0x97, 0x66, 0x87, 0x00, 0x82,
	0x48, 0xcb, 0xd1, 0x9c, 0xb0, 0x34, 0x16, 0xc6, 0xad, 0xc1, 0xce, 0x4a, 0xed, 0xa8, 0xfa, 0x8f,
	0xaf, 0xd1, 0xd8, 0x10, 0xb6, 0x6d, 0x5b, 0xd2, 0xb2, 0x4a, 0xa9, 0x33, 0xe7, 0x9d, 0xec, 0xad,
	0x66, 0x6f, 0x65, 0xcf, 0xdb, 0x76, 0xa6, 0x0c, 0xcc, 0x3f, 0xc6, 0x07, 0x68, 0x79, 0x99, 0x65,
	0x81, 0x65, 0x1d, 0xc2, 0x78, 0x6b, 0x7d, 0xb9, 0x0d, 0xe3, 0x6c, 0x59, 0x20, 0x07, 0xac, 0x7e,
	0x9a, 0xe8, 0x77, 0x00, 0x2f, 0xef, 0xe4, 0xe5, 0x6a, 0xca, 0xf6, 0xa1, 0x66, 0x99, 0xd5, 0x4d,
	0x9e, 0xaf, 0x89, 0xfd, 0xa7, 0x73, 0xcf, 0x61, 0x5f, 0xa0, 0xed, 0xd3, 0x9c, 0xf9, 0x7e, 0xdb,
	0x4a, 0xb6, 0x06, 0xbd, 0x3b, 0x71, 0xde, 0xfc, 0x0c, 0xb8, 0x7f, 0x85, 0xea, 0x3c, 0xf8, 0x05,
	0xed, 0xa3, 0x31, 0xc9, 0x85, 0xa4, 0xe5, 0x29, 0xea, 0x85, 0x1c, 0x23, 0xfb, 0x09, 0xed, 0x5b,
	0x2e, 0x59, 0xff, 0xb1, 0x07, 0xef, 0xbe, 0x79, 0x80, 0xe1, 0x2c, 0x44, 0x4f, 0x46, 0x35, 0x5b,
	0xbe, 0xc3, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x36, 0x89, 0x74, 0x1a, 0xee, 0x03, 0x00, 0x00,
}
