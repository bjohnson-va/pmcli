syntax = "proto3";

package nap.v1;

import "google/protobuf/wrappers.proto";

message ParseResult {
    // The unformatted national representation of the number
    string national_number = 1;
    // The extension of the number
    string extension = 2;
    // The country code of the number
    string country_code = 3;
    // The source of the country code, which explains how it was determined
    CountryCodeSource country_code_source = 4;
}

message ValidationResult {
    // If the number is possible. This is the most lenient and fast validation, always performed
    bool is_possible = 1;
    // If the number is valid, if requested
    google.protobuf.BoolValue is_valid = 2;
    // If the number is valid for the specified region, if requested
    google.protobuf.BoolValue is_valid_for_region = 3;
}

message FormatResult {
    string national = 1;
    string international = 2;
    string E164 = 3;
    string RFC3966 = 4;
}

message MetaDataResult {
    // The approximate timezones relevant to this number
    repeated string timezones = 1;
    // A description of where the number is located -- may contain varying levels of specificity from country to city
    string location_description = 2;
    // The type of number -- mobile, landline, etc
    PhoneNumberType type = 3;
}

enum PhoneNumberType {
    FIXED_LINE = 0;
    FIXED_LINE_OR_MOBILE = 1;
    MOBILE = 2;
    PAGER = 3;
    PERSONAL_NUMBER = 4;
    PREMIUM_RATE = 5;
    SHARED_COST = 6;
    TOLL_FREE = 7;
    UAN = 8;
    UNKNOWN = 9;
    VOICEMAIL = 10;
    VOIP = 11;
}

enum PhoneNumberFormat {
    NATIONAL = 0;
    INTERNATIONAL = 1;
    E164 = 2;
    RFC3966 = 3;
}

enum PhoneNumberValidators {
    IsValid = 0;
    IsValidForRegion = 1;
}

enum CountryCodeSource {
    FROM_DEFAULT_COUNTRY = 0;
    FROM_NUMBER_WITH_IDD = 1;
    FROM_NUMBER_WITH_PLUS_SIGN = 2;
    FROM_NUMBER_WITHOUT_PLUS_SIGN = 3;
}

message ParsePhoneNumberRequest {
    // The number to parse
    string number = 1;
    // The is the region we are expecting this number to be from, but is only used if the number is is not written in international format.
    // The country calling code for the number in this case would be that of the default region supplied.
    // In most cases, this should be a ISO 3166-1 two letters country code, like `US`.
    string default_region = 2;
    repeated PhoneNumberFormat formats = 3;
    repeated PhoneNumberValidators validators = 4;
}


message ParsePhoneNumberResponse {
    ParseResult parse_result = 1;
    ValidationResult validation_result = 2;
    FormatResult format_result = 3;
    MetaDataResult metadata_result = 4;
}