// Code generated by protoc-gen-go.
// source: listing.proto
// DO NOT EDIT!

package vendasta_listingsproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Geo struct {
	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *Geo) Reset()                    { *m = Geo{} }
func (m *Geo) String() string            { return proto.CompactTextString(m) }
func (*Geo) ProtoMessage()               {}
func (*Geo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Geo) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Geo) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

// based on RawListing VObject
// Modified for datariver to remove the number_of_reviews and average_review_rating from the listing information
type Listing struct {
	ListingId  string `protobuf:"bytes,1,opt,name=listing_id,json=listingId" json:"listing_id,omitempty"`
	ExternalId string `protobuf:"bytes,2,opt,name=external_id,json=externalId" json:"external_id,omitempty"`
	Url        string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	// Basic NAP data
	CompanyName            string   `protobuf:"bytes,4,opt,name=company_name,json=companyName" json:"company_name,omitempty"`
	Address                string   `protobuf:"bytes,5,opt,name=address" json:"address,omitempty"`
	City                   string   `protobuf:"bytes,6,opt,name=city" json:"city,omitempty"`
	State                  string   `protobuf:"bytes,7,opt,name=state" json:"state,omitempty"`
	Country                string   `protobuf:"bytes,8,opt,name=country" json:"country,omitempty"`
	ZipCode                string   `protobuf:"bytes,9,opt,name=zip_code,json=zipCode" json:"zip_code,omitempty"`
	Location               *Geo     `protobuf:"bytes,10,opt,name=location" json:"location,omitempty"`
	Phone                  string   `protobuf:"bytes,11,opt,name=phone" json:"phone,omitempty"`
	AdditionalPhoneNumbers []string `protobuf:"bytes,12,rep,name=additional_phone_numbers,json=additionalPhoneNumbers" json:"additional_phone_numbers,omitempty"`
	Website                string   `protobuf:"bytes,13,opt,name=website" json:"website,omitempty"`
	// Extended NAP data
	// int32 number_of_reviews = 14;
	// float average_review_rating = 15;
	BusinessCategories []string `protobuf:"bytes,16,rep,name=business_categories,json=businessCategories" json:"business_categories,omitempty"`
}

func (m *Listing) Reset()                    { *m = Listing{} }
func (m *Listing) String() string            { return proto.CompactTextString(m) }
func (*Listing) ProtoMessage()               {}
func (*Listing) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Listing) GetListingId() string {
	if m != nil {
		return m.ListingId
	}
	return ""
}

func (m *Listing) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *Listing) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Listing) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *Listing) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Listing) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Listing) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Listing) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Listing) GetZipCode() string {
	if m != nil {
		return m.ZipCode
	}
	return ""
}

func (m *Listing) GetLocation() *Geo {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Listing) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Listing) GetAdditionalPhoneNumbers() []string {
	if m != nil {
		return m.AdditionalPhoneNumbers
	}
	return nil
}

func (m *Listing) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *Listing) GetBusinessCategories() []string {
	if m != nil {
		return m.BusinessCategories
	}
	return nil
}

type Stats struct {
	NumberOfListings int64 `protobuf:"varint,1,opt,name=number_of_listings,json=numberOfListings" json:"number_of_listings,omitempty"`
}

func (m *Stats) Reset()                    { *m = Stats{} }
func (m *Stats) String() string            { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()               {}
func (*Stats) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Stats) GetNumberOfListings() int64 {
	if m != nil {
		return m.NumberOfListings
	}
	return 0
}

type GetListingRequest struct {
	ListingId  string `protobuf:"bytes,1,opt,name=listing_id,json=listingId" json:"listing_id,omitempty"`
	ExternalId string `protobuf:"bytes,2,opt,name=external_id,json=externalId" json:"external_id,omitempty"`
}

func (m *GetListingRequest) Reset()                    { *m = GetListingRequest{} }
func (m *GetListingRequest) String() string            { return proto.CompactTextString(m) }
func (*GetListingRequest) ProtoMessage()               {}
func (*GetListingRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *GetListingRequest) GetListingId() string {
	if m != nil {
		return m.ListingId
	}
	return ""
}

func (m *GetListingRequest) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

type DeleteListingRequest struct {
	ListingId  string `protobuf:"bytes,1,opt,name=listing_id,json=listingId" json:"listing_id,omitempty"`
	ExternalId string `protobuf:"bytes,2,opt,name=external_id,json=externalId" json:"external_id,omitempty"`
}

func (m *DeleteListingRequest) Reset()                    { *m = DeleteListingRequest{} }
func (m *DeleteListingRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteListingRequest) ProtoMessage()               {}
func (*DeleteListingRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *DeleteListingRequest) GetListingId() string {
	if m != nil {
		return m.ListingId
	}
	return ""
}

func (m *DeleteListingRequest) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

type SearchListingRequest struct {
	CompanyName string `protobuf:"bytes,1,opt,name=company_name,json=companyName" json:"company_name,omitempty"`
	State       string `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	Zipcode     string `protobuf:"bytes,3,opt,name=zipcode" json:"zipcode,omitempty"`
	Phone       string `protobuf:"bytes,4,opt,name=phone" json:"phone,omitempty"`
	Address     string `protobuf:"bytes,5,opt,name=address" json:"address,omitempty"`
	City        string `protobuf:"bytes,6,opt,name=city" json:"city,omitempty"`
	PageSize    int64  `protobuf:"varint,7,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	Cursor      string `protobuf:"bytes,9,opt,name=cursor" json:"cursor,omitempty"`
}

func (m *SearchListingRequest) Reset()                    { *m = SearchListingRequest{} }
func (m *SearchListingRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchListingRequest) ProtoMessage()               {}
func (*SearchListingRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *SearchListingRequest) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *SearchListingRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *SearchListingRequest) GetZipcode() string {
	if m != nil {
		return m.Zipcode
	}
	return ""
}

func (m *SearchListingRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *SearchListingRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *SearchListingRequest) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *SearchListingRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchListingRequest) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

type SearchListingResponse struct {
	Results []*Listing `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
	HasMore bool       `protobuf:"varint,2,opt,name=has_more,json=hasMore" json:"has_more,omitempty"`
	Cursor  string     `protobuf:"bytes,3,opt,name=cursor" json:"cursor,omitempty"`
}

func (m *SearchListingResponse) Reset()                    { *m = SearchListingResponse{} }
func (m *SearchListingResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchListingResponse) ProtoMessage()               {}
func (*SearchListingResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *SearchListingResponse) GetResults() []*Listing {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *SearchListingResponse) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *SearchListingResponse) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func init() {
	proto.RegisterType((*Geo)(nil), "vendasta.listingsproto.Geo")
	proto.RegisterType((*Listing)(nil), "vendasta.listingsproto.Listing")
	proto.RegisterType((*Stats)(nil), "vendasta.listingsproto.Stats")
	proto.RegisterType((*GetListingRequest)(nil), "vendasta.listingsproto.GetListingRequest")
	proto.RegisterType((*DeleteListingRequest)(nil), "vendasta.listingsproto.DeleteListingRequest")
	proto.RegisterType((*SearchListingRequest)(nil), "vendasta.listingsproto.SearchListingRequest")
	proto.RegisterType((*SearchListingResponse)(nil), "vendasta.listingsproto.SearchListingResponse")
}

func init() { proto.RegisterFile("listing.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 542 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x93, 0xc1, 0x6f, 0xd3, 0x30,
	0x14, 0xc6, 0x95, 0x65, 0x6b, 0x93, 0xd7, 0x4d, 0x2a, 0xa6, 0x54, 0x86, 0x81, 0x56, 0x72, 0xea,
	0x01, 0x15, 0x69, 0x08, 0x01, 0x27, 0x0e, 0x43, 0xaa, 0x26, 0xc1, 0x40, 0xa9, 0xc4, 0x35, 0x72,
	0x93, 0xb7, 0xd6, 0x52, 0x6a, 0x07, 0xdb, 0x01, 0xda, 0x3b, 0x7f, 0x1d, 0xff, 0x05, 0x7f, 0x09,
	0xb2, 0x9d, 0xb4, 0x55, 0x81, 0x03, 0x82, 0x5b, 0xbe, 0xef, 0xe7, 0x7e, 0x7d, 0xf1, 0xfb, 0x02,
	0x67, 0x25, 0xd7, 0x86, 0x8b, 0xc5, 0xa4, 0x52, 0xd2, 0x48, 0x32, 0xfc, 0x8c, 0xa2, 0x60, 0xda,
	0xb0, 0x49, 0xe3, 0x6b, 0xe7, 0x27, 0xaf, 0x21, 0x9c, 0xa2, 0x24, 0x0f, 0x20, 0x2a, 0x99, 0xe1,
	0xa6, 0x2e, 0x90, 0x06, 0xa3, 0x60, 0x1c, 0xa4, 0x5b, 0x4d, 0x1e, 0x42, 0x5c, 0x4a, 0xb1, 0xf0,
	0xf0, 0xc8, 0xc1, 0x9d, 0x91, 0x7c, 0x0f, 0xa1, 0xfb, 0xd6, 0x47, 0x92, 0x47, 0x00, 0x4d, 0x7a,
	0xc6, 0x0b, 0x97, 0x13, 0xa7, 0x71, 0xe3, 0x5c, 0x17, 0xe4, 0x02, 0x7a, 0xf8, 0xd5, 0xa0, 0x12,
	0xac, 0xb4, 0xfc, 0xc8, 0x71, 0x68, 0xad, 0xeb, 0x82, 0xf4, 0x21, 0xac, 0x55, 0x49, 0x43, 0x07,
	0xec, 0x23, 0x79, 0x0c, 0xa7, 0xb9, 0x5c, 0x55, 0x4c, 0xac, 0x33, 0xc1, 0x56, 0x48, 0x8f, 0x1d,
	0xea, 0x35, 0xde, 0x0d, 0x5b, 0x21, 0xa1, 0xd0, 0x65, 0x45, 0xa1, 0x50, 0x6b, 0x7a, 0xe2, 0x68,
	0x2b, 0x09, 0x81, 0xe3, 0x9c, 0x9b, 0x35, 0xed, 0x38, 0xdb, 0x3d, 0x93, 0x01, 0x9c, 0x68, 0xc3,
	0x0c, 0xd2, 0xae, 0x33, 0xbd, 0xb0, 0x19, 0xb9, 0xac, 0x85, 0x51, 0x6b, 0x1a, 0xf9, 0x8c, 0x46,
	0x92, 0xfb, 0x10, 0x6d, 0x78, 0x95, 0xe5, 0xb2, 0x40, 0x1a, 0x7b, 0xb4, 0xe1, 0xd5, 0x95, 0x2c,
	0x90, 0xbc, 0x80, 0xa8, 0x94, 0x39, 0x33, 0x5c, 0x0a, 0x0a, 0xa3, 0x60, 0xdc, 0xbb, 0x3c, 0x9f,
	0xfc, 0xfe, 0x96, 0x27, 0x53, 0x94, 0xe9, 0xf6, 0xb0, 0x9d, 0xa1, 0x5a, 0x4a, 0x81, 0xb4, 0xe7,
	0x67, 0x70, 0x82, 0xbc, 0x04, 0xca, 0x8a, 0x82, 0xdb, 0x13, 0xac, 0xcc, 0x9c, 0x97, 0x89, 0x7a,
	0x35, 0x47, 0xa5, 0xe9, 0xe9, 0x28, 0x1c, 0xc7, 0xe9, 0x70, 0xc7, 0x3f, 0x58, 0x7c, 0xe3, 0xa9,
	0x9d, 0xfe, 0x0b, 0xce, 0x35, 0x37, 0x48, 0xcf, 0xfc, 0x88, 0x8d, 0x24, 0x4f, 0xe1, 0xee, 0xbc,
	0xd6, 0x5c, 0xa0, 0xd6, 0x59, 0xce, 0x0c, 0x2e, 0xa4, 0xe2, 0xa8, 0x69, 0xdf, 0xc5, 0x91, 0x16,
	0x5d, 0x6d, 0x49, 0xf2, 0x1c, 0x4e, 0x66, 0x86, 0x19, 0x4d, 0x9e, 0x00, 0xf1, 0x7f, 0x9e, 0xc9,
	0xdb, 0xac, 0x7d, 0x19, 0xb7, 0xd2, 0x30, 0xed, 0x7b, 0xf2, 0xfe, 0xb6, 0xd9, 0xbb, 0x4e, 0x66,
	0x70, 0x67, 0x8a, 0xa6, 0x91, 0x29, 0x7e, 0xaa, 0x51, 0x9b, 0x7f, 0x6d, 0x43, 0xf2, 0x11, 0x06,
	0x6f, 0xb0, 0x44, 0x83, 0xff, 0x39, 0xf7, 0x47, 0x00, 0x83, 0x19, 0x32, 0x95, 0x2f, 0x0f, 0x82,
	0x0f, 0xcb, 0x16, 0xfc, 0x5a, 0xb6, 0x6d, 0x7d, 0x8e, 0x0e, 0xea, 0xb3, 0xe1, 0x95, 0xeb, 0x48,
	0xb8, 0xed, 0x88, 0x95, 0xbb, 0x55, 0x1f, 0xef, 0xaf, 0xfa, 0xef, 0x2a, 0x7b, 0x0e, 0x71, 0xc5,
	0x16, 0x98, 0x69, 0xbe, 0xf1, 0xb5, 0x0d, 0xd3, 0xc8, 0x1a, 0x33, 0xbe, 0x41, 0x32, 0x84, 0x4e,
	0x5e, 0x2b, 0x2d, 0x55, 0xd3, 0xce, 0x46, 0x25, 0xdf, 0x02, 0xb8, 0x77, 0xf0, 0x92, 0xba, 0x92,
	0x42, 0x23, 0x79, 0x05, 0x5d, 0x85, 0xba, 0x2e, 0x8d, 0x5d, 0x67, 0x38, 0xee, 0x5d, 0x5e, 0xfc,
	0xa9, 0xb5, 0xed, 0x2f, 0xdb, 0xf3, 0xf6, 0x63, 0x58, 0x32, 0x9d, 0xad, 0xa4, 0xf2, 0x17, 0x10,
	0xa5, 0xdd, 0x25, 0xd3, 0xef, 0xa4, 0xda, 0x9f, 0x23, 0xdc, 0x9f, 0x63, 0xde, 0x71, 0x51, 0xcf,
	0x7e, 0x06, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x3f, 0xc3, 0x8c, 0x8f, 0x04, 0x00, 0x00,
}
