// Code generated by protoc-gen-go.
// source: listing.proto
// DO NOT EDIT!

/*
Package datariver is a generated protocol buffer package.

It is generated from these files:
	listing.proto
	review.proto

It has these top-level messages:
	Geo
	Listing
	GetListingRequest
	DeleteListingRequest
	Review
	GetReviewRequest
	DeleteReviewRequest
	ListReviewsRequest
	ListReviewsResponse
*/
package datariver

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Geo struct {
	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *Geo) Reset()                    { *m = Geo{} }
func (m *Geo) String() string            { return proto.CompactTextString(m) }
func (*Geo) ProtoMessage()               {}
func (*Geo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Geo) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Geo) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

// based on RawListing VObject
type Listing struct {
	ListingId  string `protobuf:"bytes,1,opt,name=listing_id,json=listingId" json:"listing_id,omitempty"`
	ExternalId string `protobuf:"bytes,2,opt,name=external_id,json=externalId" json:"external_id,omitempty"`
	Url        string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	// Basic NAP data
	CompanyName            string   `protobuf:"bytes,4,opt,name=company_name,json=companyName" json:"company_name,omitempty"`
	Address                string   `protobuf:"bytes,5,opt,name=address" json:"address,omitempty"`
	City                   string   `protobuf:"bytes,6,opt,name=city" json:"city,omitempty"`
	State                  string   `protobuf:"bytes,7,opt,name=state" json:"state,omitempty"`
	Country                string   `protobuf:"bytes,8,opt,name=country" json:"country,omitempty"`
	ZipCode                string   `protobuf:"bytes,9,opt,name=zip_code,json=zipCode" json:"zip_code,omitempty"`
	Location               *Geo     `protobuf:"bytes,10,opt,name=location" json:"location,omitempty"`
	Phone                  string   `protobuf:"bytes,11,opt,name=phone" json:"phone,omitempty"`
	AdditionalPhoneNumbers []string `protobuf:"bytes,12,rep,name=additional_phone_numbers,json=additionalPhoneNumbers" json:"additional_phone_numbers,omitempty"`
	Website                string   `protobuf:"bytes,13,opt,name=website" json:"website,omitempty"`
	// Extended NAP data
	NumberOfReviews     int32    `protobuf:"varint,14,opt,name=number_of_reviews,json=numberOfReviews" json:"number_of_reviews,omitempty"`
	AverageReviewRating float32  `protobuf:"fixed32,15,opt,name=average_review_rating,json=averageReviewRating" json:"average_review_rating,omitempty"`
	BusinessCategories  []string `protobuf:"bytes,16,rep,name=business_categories,json=businessCategories" json:"business_categories,omitempty"`
}

func (m *Listing) Reset()                    { *m = Listing{} }
func (m *Listing) String() string            { return proto.CompactTextString(m) }
func (*Listing) ProtoMessage()               {}
func (*Listing) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Listing) GetListingId() string {
	if m != nil {
		return m.ListingId
	}
	return ""
}

func (m *Listing) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *Listing) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Listing) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *Listing) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Listing) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Listing) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Listing) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Listing) GetZipCode() string {
	if m != nil {
		return m.ZipCode
	}
	return ""
}

func (m *Listing) GetLocation() *Geo {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Listing) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Listing) GetAdditionalPhoneNumbers() []string {
	if m != nil {
		return m.AdditionalPhoneNumbers
	}
	return nil
}

func (m *Listing) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *Listing) GetNumberOfReviews() int32 {
	if m != nil {
		return m.NumberOfReviews
	}
	return 0
}

func (m *Listing) GetAverageReviewRating() float32 {
	if m != nil {
		return m.AverageReviewRating
	}
	return 0
}

func (m *Listing) GetBusinessCategories() []string {
	if m != nil {
		return m.BusinessCategories
	}
	return nil
}

type GetListingRequest struct {
	ListingId string `protobuf:"bytes,1,opt,name=listing_id,json=listingId" json:"listing_id,omitempty"`
}

func (m *GetListingRequest) Reset()                    { *m = GetListingRequest{} }
func (m *GetListingRequest) String() string            { return proto.CompactTextString(m) }
func (*GetListingRequest) ProtoMessage()               {}
func (*GetListingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetListingRequest) GetListingId() string {
	if m != nil {
		return m.ListingId
	}
	return ""
}

type DeleteListingRequest struct {
	ListingId string `protobuf:"bytes,1,opt,name=listing_id,json=listingId" json:"listing_id,omitempty"`
}

func (m *DeleteListingRequest) Reset()                    { *m = DeleteListingRequest{} }
func (m *DeleteListingRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteListingRequest) ProtoMessage()               {}
func (*DeleteListingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeleteListingRequest) GetListingId() string {
	if m != nil {
		return m.ListingId
	}
	return ""
}

func init() {
	proto.RegisterType((*Geo)(nil), "datariver.Geo")
	proto.RegisterType((*Listing)(nil), "datariver.Listing")
	proto.RegisterType((*GetListingRequest)(nil), "datariver.GetListingRequest")
	proto.RegisterType((*DeleteListingRequest)(nil), "datariver.DeleteListingRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ListingService service

type ListingServiceClient interface {
	Put(ctx context.Context, in *Listing, opts ...grpc.CallOption) (*Listing, error)
	Get(ctx context.Context, in *GetListingRequest, opts ...grpc.CallOption) (*Listing, error)
	Delete(ctx context.Context, in *DeleteListingRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type listingServiceClient struct {
	cc *grpc.ClientConn
}

func NewListingServiceClient(cc *grpc.ClientConn) ListingServiceClient {
	return &listingServiceClient{cc}
}

func (c *listingServiceClient) Put(ctx context.Context, in *Listing, opts ...grpc.CallOption) (*Listing, error) {
	out := new(Listing)
	err := grpc.Invoke(ctx, "/datariver.ListingService/Put", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listingServiceClient) Get(ctx context.Context, in *GetListingRequest, opts ...grpc.CallOption) (*Listing, error) {
	out := new(Listing)
	err := grpc.Invoke(ctx, "/datariver.ListingService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listingServiceClient) Delete(ctx context.Context, in *DeleteListingRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/datariver.ListingService/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ListingService service

type ListingServiceServer interface {
	Put(context.Context, *Listing) (*Listing, error)
	Get(context.Context, *GetListingRequest) (*Listing, error)
	Delete(context.Context, *DeleteListingRequest) (*google_protobuf.Empty, error)
}

func RegisterListingServiceServer(s *grpc.Server, srv ListingServiceServer) {
	s.RegisterService(&_ListingService_serviceDesc, srv)
}

func _ListingService_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Listing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListingServiceServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datariver.ListingService/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListingServiceServer).Put(ctx, req.(*Listing))
	}
	return interceptor(ctx, in, info, handler)
}

func _ListingService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListingServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datariver.ListingService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListingServiceServer).Get(ctx, req.(*GetListingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ListingService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteListingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListingServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datariver.ListingService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListingServiceServer).Delete(ctx, req.(*DeleteListingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ListingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "datariver.ListingService",
	HandlerType: (*ListingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Put",
			Handler:    _ListingService_Put_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ListingService_Get_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ListingService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "listing.proto",
}

func init() { proto.RegisterFile("listing.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 519 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x93, 0xef, 0x6a, 0xdb, 0x3c,
	0x14, 0xc6, 0x71, 0xfe, 0xfb, 0xa4, 0x4d, 0xdb, 0xd3, 0xbe, 0x45, 0x6f, 0xd6, 0xd1, 0x2c, 0x9f,
	0x42, 0x61, 0x0e, 0x64, 0x8c, 0xed, 0xdb, 0x18, 0xdd, 0x08, 0x85, 0xd1, 0x15, 0xef, 0x02, 0x8c,
	0x62, 0x9f, 0x78, 0x02, 0xc7, 0xf2, 0x24, 0x39, 0x5d, 0x7a, 0x31, 0xbb, 0x91, 0xdd, 0xdc, 0xb0,
	0xe4, 0xa4, 0xdd, 0x08, 0x8c, 0x7d, 0xd3, 0xf3, 0xfc, 0x8e, 0x8e, 0x1e, 0x5b, 0x3a, 0x70, 0x98,
	0x09, 0x6d, 0x44, 0x9e, 0x06, 0x85, 0x92, 0x46, 0xa2, 0x9f, 0x70, 0xc3, 0x95, 0x58, 0x93, 0x1a,
	0x3e, 0x4b, 0xa5, 0x4c, 0x33, 0x9a, 0x5a, 0xb0, 0x28, 0x97, 0x53, 0x5a, 0x15, 0x66, 0xe3, 0xea,
	0xc6, 0xef, 0xa0, 0x39, 0x27, 0x89, 0x43, 0xe8, 0x65, 0xdc, 0x08, 0x53, 0x26, 0xc4, 0xbc, 0x91,
	0x37, 0xf1, 0xc2, 0x9d, 0xc6, 0x0b, 0xf0, 0x33, 0x99, 0xa7, 0x0e, 0x36, 0x2c, 0x7c, 0x34, 0xc6,
	0x3f, 0x5a, 0xd0, 0xfd, 0xe4, 0x8e, 0xc6, 0xe7, 0x00, 0x75, 0x8a, 0x48, 0x24, 0xb6, 0x8f, 0x1f,
	0xfa, 0xb5, 0x73, 0x93, 0xe0, 0x25, 0xf4, 0xe9, 0xbb, 0x21, 0x95, 0xf3, 0xac, 0xe2, 0x0d, 0xcb,
	0x61, 0x6b, 0xdd, 0x24, 0x78, 0x0c, 0xcd, 0x52, 0x65, 0xac, 0x69, 0x41, 0xb5, 0xc4, 0x17, 0x70,
	0x10, 0xcb, 0x55, 0xc1, 0xf3, 0x4d, 0x94, 0xf3, 0x15, 0xb1, 0x96, 0x45, 0xfd, 0xda, 0xbb, 0xe5,
	0x2b, 0x42, 0x06, 0x5d, 0x9e, 0x24, 0x8a, 0xb4, 0x66, 0x6d, 0x4b, 0xb7, 0x12, 0x11, 0x5a, 0xb1,
	0x30, 0x1b, 0xd6, 0xb1, 0xb6, 0x5d, 0xe3, 0x19, 0xb4, 0xb5, 0xe1, 0x86, 0x58, 0xd7, 0x9a, 0x4e,
	0x54, 0x3d, 0x62, 0x59, 0xe6, 0x46, 0x6d, 0x58, 0xcf, 0xf5, 0xa8, 0x25, 0xfe, 0x0f, 0xbd, 0x07,
	0x51, 0x44, 0xb1, 0x4c, 0x88, 0xf9, 0x0e, 0x3d, 0x88, 0xe2, 0x5a, 0x26, 0x84, 0x57, 0xd0, 0xcb,
	0x64, 0xcc, 0x8d, 0x90, 0x39, 0x83, 0x91, 0x37, 0xe9, 0xcf, 0x06, 0xc1, 0xee, 0xaf, 0x07, 0x73,
	0x92, 0xe1, 0x8e, 0x57, 0xc7, 0x16, 0x5f, 0x65, 0x4e, 0xac, 0xef, 0x8e, 0xb5, 0x02, 0xdf, 0x02,
	0xe3, 0x49, 0x22, 0xaa, 0x0a, 0x9e, 0x45, 0xd6, 0x8b, 0xf2, 0x72, 0xb5, 0x20, 0xa5, 0xd9, 0xc1,
	0xa8, 0x39, 0xf1, 0xc3, 0xf3, 0x47, 0x7e, 0x57, 0xe1, 0x5b, 0x47, 0xab, 0xc0, 0xf7, 0xb4, 0xd0,
	0xc2, 0x10, 0x3b, 0x74, 0xa9, 0x6a, 0x89, 0x57, 0x70, 0xe2, 0x5a, 0x44, 0x72, 0x19, 0x29, 0x5a,
	0x0b, 0xba, 0xd7, 0x6c, 0x30, 0xf2, 0x26, 0xed, 0xf0, 0xc8, 0x81, 0xcf, 0xcb, 0xd0, 0xd9, 0x38,
	0x83, 0xff, 0xf8, 0x9a, 0x14, 0x4f, 0xa9, 0xae, 0x8c, 0x14, 0xaf, 0xee, 0x8a, 0x1d, 0x8d, 0xbc,
	0x49, 0x23, 0x3c, 0xad, 0xa1, 0x2b, 0x0f, 0x2d, 0xc2, 0x29, 0x9c, 0x2e, 0x4a, 0x2d, 0x72, 0xd2,
	0x3a, 0x8a, 0xb9, 0xa1, 0x54, 0x2a, 0x41, 0x9a, 0x1d, 0xdb, 0xb8, 0xb8, 0x45, 0xd7, 0x3b, 0x32,
	0x9e, 0xc1, 0xc9, 0x9c, 0x4c, 0xfd, 0x44, 0x42, 0xfa, 0x56, 0x92, 0x36, 0x7f, 0x79, 0x29, 0xe3,
	0xd7, 0x70, 0xf6, 0x81, 0x32, 0x32, 0xf4, 0x4f, 0xdb, 0x66, 0x3f, 0x3d, 0x18, 0xd4, 0x3b, 0xbe,
	0x90, 0x5a, 0x8b, 0x98, 0xf0, 0x25, 0x34, 0xef, 0x4a, 0x83, 0xf8, 0xe4, 0x66, 0xea, 0x8a, 0xe1,
	0x1e, 0x0f, 0xdf, 0x54, 0xe3, 0x60, 0xf0, 0xe2, 0xb7, 0x8b, 0xfc, 0x23, 0xfc, 0xde, 0x8d, 0xef,
	0xa1, 0xe3, 0x12, 0xe3, 0xe5, 0x13, 0xba, 0xef, 0x23, 0x86, 0xe7, 0x81, 0x1b, 0xc8, 0x60, 0x3b,
	0x90, 0xc1, 0xc7, 0x6a, 0x20, 0x17, 0x1d, 0xab, 0x5f, 0xfd, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x1c,
	0x0d, 0x72, 0x4a, 0xca, 0x03, 0x00, 0x00,
}
