// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sso/v1/service_provider.proto

package sso_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GetSSOUrlsRequest struct {
	// The ID of the app the to get the SSO urls for.
	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
}

func (m *GetSSOUrlsRequest) Reset()                    { *m = GetSSOUrlsRequest{} }
func (m *GetSSOUrlsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSSOUrlsRequest) ProtoMessage()               {}
func (*GetSSOUrlsRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *GetSSOUrlsRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

type GetSSOUrlsResponse struct {
	// The entry URL of the service provider.
	EntryUrl string `protobuf:"bytes,1,opt,name=entry_url,json=entryUrl" json:"entry_url,omitempty"`
	// The session transfer URL of the service provider.
	SessionUrl string `protobuf:"bytes,2,opt,name=session_url,json=sessionUrl" json:"session_url,omitempty"`
}

func (m *GetSSOUrlsResponse) Reset()                    { *m = GetSSOUrlsResponse{} }
func (m *GetSSOUrlsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetSSOUrlsResponse) ProtoMessage()               {}
func (*GetSSOUrlsResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *GetSSOUrlsResponse) GetEntryUrl() string {
	if m != nil {
		return m.EntryUrl
	}
	return ""
}

func (m *GetSSOUrlsResponse) GetSessionUrl() string {
	if m != nil {
		return m.SessionUrl
	}
	return ""
}

type SetSSOUrlsRequest struct {
	// The ID of the service provider the to get the SSO urls for.
	ServiceProviderId string `protobuf:"bytes,1,opt,name=service_provider_id,json=serviceProviderId" json:"service_provider_id,omitempty"`
	// The entry URL of the service provider.
	EntryUrl string `protobuf:"bytes,2,opt,name=entry_url,json=entryUrl" json:"entry_url,omitempty"`
	// The session transfer URL of the service provider.
	SessionUrl string `protobuf:"bytes,3,opt,name=session_url,json=sessionUrl" json:"session_url,omitempty"`
}

func (m *SetSSOUrlsRequest) Reset()                    { *m = SetSSOUrlsRequest{} }
func (m *SetSSOUrlsRequest) String() string            { return proto.CompactTextString(m) }
func (*SetSSOUrlsRequest) ProtoMessage()               {}
func (*SetSSOUrlsRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *SetSSOUrlsRequest) GetServiceProviderId() string {
	if m != nil {
		return m.ServiceProviderId
	}
	return ""
}

func (m *SetSSOUrlsRequest) GetEntryUrl() string {
	if m != nil {
		return m.EntryUrl
	}
	return ""
}

func (m *SetSSOUrlsRequest) GetSessionUrl() string {
	if m != nil {
		return m.SessionUrl
	}
	return ""
}

// The service context is used to determine which identity provider to use. This context is used in conjunction with
// the identity context, provided by the identity provider. The two contexts require domain logic to be glued together;
// for example, when the service provider provides an account, we can determine the partner from that account, then
// match that up to an identity provider Partner context.
type ServiceContext struct {
	// Types that are valid to be assigned to Context:
	//	*ServiceContext_Account_
	//	*ServiceContext_Partner_
	Context isServiceContext_Context `protobuf_oneof:"context"`
}

func (m *ServiceContext) Reset()                    { *m = ServiceContext{} }
func (m *ServiceContext) String() string            { return proto.CompactTextString(m) }
func (*ServiceContext) ProtoMessage()               {}
func (*ServiceContext) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

type isServiceContext_Context interface {
	isServiceContext_Context()
}

type ServiceContext_Account_ struct {
	Account *ServiceContext_Account `protobuf:"bytes,1,opt,name=account,oneof"`
}
type ServiceContext_Partner_ struct {
	Partner *ServiceContext_Partner `protobuf:"bytes,2,opt,name=partner,oneof"`
}

func (*ServiceContext_Account_) isServiceContext_Context() {}
func (*ServiceContext_Partner_) isServiceContext_Context() {}

func (m *ServiceContext) GetContext() isServiceContext_Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *ServiceContext) GetAccount() *ServiceContext_Account {
	if x, ok := m.GetContext().(*ServiceContext_Account_); ok {
		return x.Account
	}
	return nil
}

func (m *ServiceContext) GetPartner() *ServiceContext_Partner {
	if x, ok := m.GetContext().(*ServiceContext_Partner_); ok {
		return x.Partner
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ServiceContext) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ServiceContext_OneofMarshaler, _ServiceContext_OneofUnmarshaler, _ServiceContext_OneofSizer, []interface{}{
		(*ServiceContext_Account_)(nil),
		(*ServiceContext_Partner_)(nil),
	}
}

func _ServiceContext_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ServiceContext)
	// context
	switch x := m.Context.(type) {
	case *ServiceContext_Account_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Account); err != nil {
			return err
		}
	case *ServiceContext_Partner_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Partner); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ServiceContext.Context has unexpected type %T", x)
	}
	return nil
}

func _ServiceContext_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ServiceContext)
	switch tag {
	case 1: // context.account
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceContext_Account)
		err := b.DecodeMessage(msg)
		m.Context = &ServiceContext_Account_{msg}
		return true, err
	case 2: // context.partner
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServiceContext_Partner)
		err := b.DecodeMessage(msg)
		m.Context = &ServiceContext_Partner_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ServiceContext_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ServiceContext)
	// context
	switch x := m.Context.(type) {
	case *ServiceContext_Account_:
		s := proto.Size(x.Account)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ServiceContext_Partner_:
		s := proto.Size(x.Partner)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ServiceContext_Account struct {
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (m *ServiceContext_Account) Reset()                    { *m = ServiceContext_Account{} }
func (m *ServiceContext_Account) String() string            { return proto.CompactTextString(m) }
func (*ServiceContext_Account) ProtoMessage()               {}
func (*ServiceContext_Account) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3, 0} }

func (m *ServiceContext_Account) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type ServiceContext_Partner struct {
	PartnerId string `protobuf:"bytes,1,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
}

func (m *ServiceContext_Partner) Reset()                    { *m = ServiceContext_Partner{} }
func (m *ServiceContext_Partner) String() string            { return proto.CompactTextString(m) }
func (*ServiceContext_Partner) ProtoMessage()               {}
func (*ServiceContext_Partner) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3, 1} }

func (m *ServiceContext_Partner) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

type GetSessionTransferURLRequest struct {
	// An ID unique to a service/application (such as a marketplace application ID)
	ServiceProviderId string `protobuf:"bytes,1,opt,name=service_provider_id,json=serviceProviderId" json:"service_provider_id,omitempty"`
	// The service context.
	Context *ServiceContext `protobuf:"bytes,2,opt,name=context" json:"context,omitempty"`
}

func (m *GetSessionTransferURLRequest) Reset()                    { *m = GetSessionTransferURLRequest{} }
func (m *GetSessionTransferURLRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSessionTransferURLRequest) ProtoMessage()               {}
func (*GetSessionTransferURLRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *GetSessionTransferURLRequest) GetServiceProviderId() string {
	if m != nil {
		return m.ServiceProviderId
	}
	return ""
}

func (m *GetSessionTransferURLRequest) GetContext() *ServiceContext {
	if m != nil {
		return m.Context
	}
	return nil
}

type GetSessionTransferURLResponse struct {
	// The session transfer URL to send the user to (which may result in a redirect to a login screen).
	SessionTransferUrl string `protobuf:"bytes,1,opt,name=session_transfer_url,json=sessionTransferUrl" json:"session_transfer_url,omitempty"`
}

func (m *GetSessionTransferURLResponse) Reset()                    { *m = GetSessionTransferURLResponse{} }
func (m *GetSessionTransferURLResponse) String() string            { return proto.CompactTextString(m) }
func (*GetSessionTransferURLResponse) ProtoMessage()               {}
func (*GetSessionTransferURLResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *GetSessionTransferURLResponse) GetSessionTransferUrl() string {
	if m != nil {
		return m.SessionTransferUrl
	}
	return ""
}

func init() {
	proto.RegisterType((*GetSSOUrlsRequest)(nil), "sso.v1.GetSSOUrlsRequest")
	proto.RegisterType((*GetSSOUrlsResponse)(nil), "sso.v1.GetSSOUrlsResponse")
	proto.RegisterType((*SetSSOUrlsRequest)(nil), "sso.v1.SetSSOUrlsRequest")
	proto.RegisterType((*ServiceContext)(nil), "sso.v1.ServiceContext")
	proto.RegisterType((*ServiceContext_Account)(nil), "sso.v1.ServiceContext.Account")
	proto.RegisterType((*ServiceContext_Partner)(nil), "sso.v1.ServiceContext.Partner")
	proto.RegisterType((*GetSessionTransferURLRequest)(nil), "sso.v1.GetSessionTransferURLRequest")
	proto.RegisterType((*GetSessionTransferURLResponse)(nil), "sso.v1.GetSessionTransferURLResponse")
}

func init() { proto.RegisterFile("sso/v1/service_provider.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 370 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x92, 0x3f, 0x4f, 0xe3, 0x40,
	0x10, 0xc5, 0xcf, 0x39, 0x5d, 0x72, 0x9e, 0x48, 0x77, 0xca, 0xe6, 0x0e, 0x21, 0x20, 0x80, 0x5c,
	0xa0, 0x88, 0xc2, 0x49, 0xa0, 0xa3, 0x23, 0x14, 0x60, 0x09, 0x89, 0x60, 0xe3, 0x3a, 0x32, 0xf6,
	0x22, 0x59, 0x32, 0xbb, 0xcb, 0xce, 0xc6, 0x82, 0x0e, 0x3e, 0x2d, 0x5f, 0x03, 0xd9, 0x9e, 0xfc,
	0x27, 0x14, 0xb4, 0xf3, 0xde, 0x9b, 0xfd, 0xcd, 0xce, 0x40, 0x07, 0x51, 0xf6, 0xf2, 0x41, 0x0f,
	0xb9, 0xce, 0xd3, 0x98, 0x8f, 0x95, 0x96, 0x79, 0x9a, 0x70, 0xed, 0x2a, 0x2d, 0x8d, 0x64, 0x75,
	0x44, 0xe9, 0xe6, 0x03, 0xe7, 0x18, 0x5a, 0x97, 0xdc, 0x04, 0xc1, 0x4d, 0xa8, 0x33, 0xf4, 0xf9,
	0xd3, 0x84, 0xa3, 0x61, 0xff, 0xa1, 0x1e, 0x29, 0x35, 0x4e, 0x93, 0x6d, 0xeb, 0xd0, 0xea, 0xda,
	0xfe, 0xaf, 0x48, 0x29, 0x2f, 0x71, 0x7c, 0x60, 0x8b, 0x5e, 0x54, 0x52, 0x20, 0x67, 0xbb, 0x60,
	0x73, 0x61, 0xf4, 0xcb, 0x78, 0xa2, 0x33, 0xf2, 0xff, 0x2e, 0x0b, 0xa1, 0xce, 0xd8, 0x01, 0x34,
	0x91, 0x23, 0xa6, 0x52, 0x94, 0x72, 0xad, 0x94, 0x81, 0x4a, 0xa1, 0xce, 0x9c, 0x37, 0x0b, 0x5a,
	0xc1, 0x1a, 0x80, 0x0b, 0xed, 0x55, 0xee, 0x39, 0x4d, 0x8b, 0xa4, 0x11, 0x29, 0x5e, 0xb2, 0xcc,
	0x50, 0xfb, 0x9a, 0xe1, 0xe7, 0x1a, 0xc3, 0xbb, 0x05, 0x7f, 0x82, 0xaa, 0xe7, 0x85, 0x14, 0x86,
	0x3f, 0x1b, 0x76, 0x06, 0x8d, 0x28, 0x8e, 0xe5, 0x44, 0x98, 0xf2, 0xd1, 0xe6, 0xc9, 0xbe, 0x5b,
	0x7d, 0x98, 0xbb, 0x6c, 0x74, 0xcf, 0x2b, 0xd7, 0xd5, 0x0f, 0x7f, 0x1a, 0x28, 0xb2, 0x2a, 0xd2,
	0x46, 0x70, 0x5d, 0xa2, 0x6c, 0xce, 0x8e, 0x2a, 0x57, 0x91, 0xa5, 0xc0, 0x4e, 0x17, 0x1a, 0xd4,
	0x91, 0x75, 0x00, 0xa8, 0xe3, 0x7c, 0x74, 0x9b, 0x2a, 0x5e, 0x52, 0x38, 0x29, 0x5f, 0x38, 0x29,
	0xbf, 0xe0, 0xa4, 0x8a, 0x97, 0x0c, 0x6d, 0x68, 0xc4, 0xd5, 0x8b, 0xce, 0xab, 0x05, 0x7b, 0xc5,
	0x0a, 0xab, 0xd9, 0xef, 0x74, 0x24, 0xf0, 0x81, 0xeb, 0xd0, 0xbf, 0xfe, 0xee, 0xc7, 0xf7, 0x67,
	0xbd, 0x69, 0xd6, 0xad, 0xcf, 0x67, 0xf5, 0x67, 0x08, 0xb7, 0xd0, 0xd9, 0x40, 0x40, 0xf7, 0xd4,
	0x87, 0x7f, 0xd3, 0x75, 0x19, 0x92, 0x17, 0x4e, 0x8b, 0xe1, 0x4a, 0x52, 0x67, 0xc3, 0x23, 0x68,
	0xc7, 0xf2, 0xd1, 0xcd, 0xb9, 0x48, 0x22, 0x34, 0x11, 0x11, 0x0c, 0xff, 0x06, 0xcb, 0xb8, 0xf7,
	0xf5, 0xf2, 0xf4, 0x4f, 0x3f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x15, 0xa1, 0x26, 0x05, 0x1b, 0x03,
	0x00, 0x00,
}
