// Code generated by protoc-gen-go. DO NOT EDIT.
// source: medical_compare/v1/provider.proto

package medicalcompare_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// An example of a provider is a hospital - providers describe the institution,
// not a singular person such as a doctor.
type Provider struct {
	// The provider's identifier
	ProviderId string `protobuf:"bytes,1,opt,name=provider_id,json=providerId" json:"provider_id,omitempty"`
	// The name of the provider
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The address of the provider
	Address string `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	// The city of the provider
	City string `protobuf:"bytes,4,opt,name=city" json:"city,omitempty"`
	// The state of the provider
	State string `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
	// The zip code of the provider
	ZipCode string `protobuf:"bytes,6,opt,name=zip_code,json=zipCode" json:"zip_code,omitempty"`
	// The county name of the provider
	CountyName string `protobuf:"bytes,7,opt,name=county_name,json=countyName" json:"county_name,omitempty"`
}

func (m *Provider) Reset()                    { *m = Provider{} }
func (m *Provider) String() string            { return proto.CompactTextString(m) }
func (*Provider) ProtoMessage()               {}
func (*Provider) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *Provider) GetProviderId() string {
	if m != nil {
		return m.ProviderId
	}
	return ""
}

func (m *Provider) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Provider) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Provider) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Provider) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Provider) GetZipCode() string {
	if m != nil {
		return m.ZipCode
	}
	return ""
}

func (m *Provider) GetCountyName() string {
	if m != nil {
		return m.CountyName
	}
	return ""
}

func init() {
	proto.RegisterType((*Provider)(nil), "medicalcompare.v1.Provider")
}

func init() { proto.RegisterFile("medical_compare/v1/provider.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x34, 0x8f, 0xbf, 0x6e, 0xc3, 0x20,
	0x10, 0xc6, 0xe5, 0xd6, 0xff, 0x7a, 0x9d, 0x8a, 0x3a, 0xd0, 0xa9, 0x6d, 0xa6, 0x4c, 0xb6, 0xac,
	0x3c, 0x42, 0xa6, 0x2c, 0x51, 0x94, 0x17, 0x40, 0x84, 0xbb, 0x01, 0x29, 0x18, 0x84, 0x89, 0x25,
	0xfb, 0xe5, 0xf2, 0x6a, 0x91, 0xc1, 0xde, 0xee, 0xfb, 0xf1, 0x03, 0xbe, 0x83, 0x7f, 0x43, 0xa8,
	0x95, 0xbc, 0x0b, 0x65, 0x8d, 0x93, 0x9e, 0xda, 0xb1, 0x6b, 0x9d, 0xb7, 0xa3, 0x46, 0xf2, 0x8d,
	0xf3, 0x36, 0x58, 0xf6, 0xb5, 0x2a, 0xab, 0xd1, 0x8c, 0xdd, 0xee, 0x99, 0x41, 0x7d, 0x59, 0x2d,
	0xf6, 0x0b, 0x9f, 0xdb, 0x0d, 0xa1, 0x91, 0x67, 0x7f, 0xd9, 0xfe, 0xe3, 0x0a, 0x1b, 0x3a, 0x21,
	0x63, 0x90, 0xf7, 0xd2, 0x10, 0x7f, 0x8b, 0x27, 0x71, 0x66, 0x1c, 0x2a, 0x89, 0xe8, 0x69, 0x18,
	0xf8, 0x7b, 0xc4, 0x5b, 0x5c, 0x6c, 0xa5, 0xc3, 0xc4, 0xf3, 0x64, 0x2f, 0x33, 0xfb, 0x86, 0x62,
	0x08, 0x32, 0x10, 0x2f, 0x22, 0x4c, 0x81, 0xfd, 0x40, 0x3d, 0x6b, 0x27, 0x94, 0x45, 0xe2, 0x65,
	0x7a, 0x64, 0xd6, 0xee, 0x68, 0x91, 0x96, 0x4e, 0xca, 0x3e, 0xfa, 0x30, 0x89, 0xf8, 0x73, 0x95,
	0x3a, 0x25, 0x74, 0x96, 0x86, 0x6e, 0x65, 0xdc, 0xed, 0xf0, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x98,
	0x9a, 0x6a, 0x45, 0x00, 0x01, 0x00, 0x00,
}
