// Code generated by protoc-gen-go.
// source: api.proto
// DO NOT EDIT!

/*
Package snapshotwidget_v1 is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	WidgetStyles
	SnapshotWidget
	AutocompletePrediction
	Location
	CreateSnapshotWidgetRequest
	GetSnapshotWidgetRequest
	UpdateSnapshotWidgetRequest
	DeleteSnapshotWidgetRequest
	ListSnapshotWidgetRequest
	UpdateStylesRequest
	GetEmbedCodeRequest
	SnapshotAutocompleteRequest
	CreateSnapshotFromPlaceIDRequest
	CreateSnapshotRequest
	GetSnapshotWidgetConfigRequest
	CreateSnapshotWidgetResponse
	GetSnapshotWidgetResponse
	ListSnapshotWidgetResponse
	GetEmbedCodeResponse
	SnapshotAutocompleteResponse
	GetSnapshotWidgetConfigResponse
*/
package snapshotwidget_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"
import google_protobuf2 "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetSnapshotWidgetConfigResponse_Status int32

const (
	GetSnapshotWidgetConfigResponse_ENABLED      GetSnapshotWidgetConfigResponse_Status = 0
	GetSnapshotWidgetConfigResponse_DISABLED     GetSnapshotWidgetConfigResponse_Status = 1
	GetSnapshotWidgetConfigResponse_RATE_LIMITED GetSnapshotWidgetConfigResponse_Status = 2
)

var GetSnapshotWidgetConfigResponse_Status_name = map[int32]string{
	0: "ENABLED",
	1: "DISABLED",
	2: "RATE_LIMITED",
}
var GetSnapshotWidgetConfigResponse_Status_value = map[string]int32{
	"ENABLED":      0,
	"DISABLED":     1,
	"RATE_LIMITED": 2,
}

func (x GetSnapshotWidgetConfigResponse_Status) String() string {
	return proto.EnumName(GetSnapshotWidgetConfigResponse_Status_name, int32(x))
}
func (GetSnapshotWidgetConfigResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{20, 0}
}

// Style attributes for a snapshot widget
type WidgetStyles struct {
	// Width of the widget
	Width float32 `protobuf:"fixed32,1,opt,name=width" json:"width,omitempty"`
	// Background color of the widget
	BackgroundColor string `protobuf:"bytes,2,opt,name=background_color,json=backgroundColor" json:"background_color,omitempty"`
	// Border color around the widget
	BorderColor string `protobuf:"bytes,3,opt,name=border_color,json=borderColor" json:"border_color,omitempty"`
	// Border radius around the widget
	BorderRadius float32 `protobuf:"fixed32,4,opt,name=border_radius,json=borderRadius" json:"border_radius,omitempty"`
	// Boolean indicating whether or not a drop shadow should be included in the rendered widget
	DropShadow bool `protobuf:"varint,5,opt,name=drop_shadow,json=dropShadow" json:"drop_shadow,omitempty"`
	// Primary font color of the widget
	PrimaryFontColor string `protobuf:"bytes,6,opt,name=primary_font_color,json=primaryFontColor" json:"primary_font_color,omitempty"`
	// Secondary font color of the widget
	SecondaryFontColor string `protobuf:"bytes,7,opt,name=secondary_font_color,json=secondaryFontColor" json:"secondary_font_color,omitempty"`
	// Button color in the widget
	ButtonColor string `protobuf:"bytes,8,opt,name=button_color,json=buttonColor" json:"button_color,omitempty"`
	// Button font color in the widget
	ButtonFontColor string `protobuf:"bytes,9,opt,name=button_font_color,json=buttonFontColor" json:"button_font_color,omitempty"`
	// Title text for first page
	TitleText string `protobuf:"bytes,10,opt,name=title_text,json=titleText" json:"title_text,omitempty"`
	// Button text for submitting
	ButtonText string `protobuf:"bytes,11,opt,name=button_text,json=buttonText" json:"button_text,omitempty"`
}

func (m *WidgetStyles) Reset()                    { *m = WidgetStyles{} }
func (m *WidgetStyles) String() string            { return proto.CompactTextString(m) }
func (*WidgetStyles) ProtoMessage()               {}
func (*WidgetStyles) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *WidgetStyles) GetWidth() float32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *WidgetStyles) GetBackgroundColor() string {
	if m != nil {
		return m.BackgroundColor
	}
	return ""
}

func (m *WidgetStyles) GetBorderColor() string {
	if m != nil {
		return m.BorderColor
	}
	return ""
}

func (m *WidgetStyles) GetBorderRadius() float32 {
	if m != nil {
		return m.BorderRadius
	}
	return 0
}

func (m *WidgetStyles) GetDropShadow() bool {
	if m != nil {
		return m.DropShadow
	}
	return false
}

func (m *WidgetStyles) GetPrimaryFontColor() string {
	if m != nil {
		return m.PrimaryFontColor
	}
	return ""
}

func (m *WidgetStyles) GetSecondaryFontColor() string {
	if m != nil {
		return m.SecondaryFontColor
	}
	return ""
}

func (m *WidgetStyles) GetButtonColor() string {
	if m != nil {
		return m.ButtonColor
	}
	return ""
}

func (m *WidgetStyles) GetButtonFontColor() string {
	if m != nil {
		return m.ButtonFontColor
	}
	return ""
}

func (m *WidgetStyles) GetTitleText() string {
	if m != nil {
		return m.TitleText
	}
	return ""
}

func (m *WidgetStyles) GetButtonText() string {
	if m != nil {
		return m.ButtonText
	}
	return ""
}

// A snapshot widget
type SnapshotWidget struct {
	// A unique identifier for the widget
	WidgetId string `protobuf:"bytes,1,opt,name=widget_id,json=widgetId" json:"widget_id,omitempty"`
	// An identifier for the partner
	PartnerId string `protobuf:"bytes,2,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// An identifier for the market the accounts created by the widget will be assigned to
	MarketId string `protobuf:"bytes,3,opt,name=market_id,json=marketId" json:"market_id,omitempty"`
	// An identifier for the campaign that should be started for accounts created via the widget
	CampaignId string `protobuf:"bytes,4,opt,name=campaign_id,json=campaignId" json:"campaign_id,omitempty"`
	// The name of the widget
	Name string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	// Identifiers for the salespeople who will be assigned accounts created by the widget
	SalespersonIds []string `protobuf:"bytes,6,rep,name=salesperson_ids,json=salespersonIds" json:"salesperson_ids,omitempty"`
	// An API key that is used in conjunction with the domain to validate API calls from the widget
	ApiKey string `protobuf:"bytes,8,opt,name=api_key,json=apiKey" json:"api_key,omitempty"`
	// The style attributes for the widget
	Styles *WidgetStyles `protobuf:"bytes,9,opt,name=styles" json:"styles,omitempty"`
	// Delete UTC timestamp
	Deleted *google_protobuf2.Timestamp `protobuf:"bytes,10,opt,name=deleted" json:"deleted,omitempty"`
	// Created UTC timestamp
	Created *google_protobuf2.Timestamp `protobuf:"bytes,11,opt,name=created" json:"created,omitempty"`
	// Updated UTC timestamp
	Updated *google_protobuf2.Timestamp `protobuf:"bytes,12,opt,name=updated" json:"updated,omitempty"`
	// The number of accounts created by this widget
	AccountsCreated int64 `protobuf:"varint,13,opt,name=accounts_created,json=accountsCreated" json:"accounts_created,omitempty"`
	// Whether the widget is disabled
	Disabled bool `protobuf:"varint,14,opt,name=disabled" json:"disabled,omitempty"`
}

func (m *SnapshotWidget) Reset()                    { *m = SnapshotWidget{} }
func (m *SnapshotWidget) String() string            { return proto.CompactTextString(m) }
func (*SnapshotWidget) ProtoMessage()               {}
func (*SnapshotWidget) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SnapshotWidget) GetWidgetId() string {
	if m != nil {
		return m.WidgetId
	}
	return ""
}

func (m *SnapshotWidget) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *SnapshotWidget) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *SnapshotWidget) GetCampaignId() string {
	if m != nil {
		return m.CampaignId
	}
	return ""
}

func (m *SnapshotWidget) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SnapshotWidget) GetSalespersonIds() []string {
	if m != nil {
		return m.SalespersonIds
	}
	return nil
}

func (m *SnapshotWidget) GetApiKey() string {
	if m != nil {
		return m.ApiKey
	}
	return ""
}

func (m *SnapshotWidget) GetStyles() *WidgetStyles {
	if m != nil {
		return m.Styles
	}
	return nil
}

func (m *SnapshotWidget) GetDeleted() *google_protobuf2.Timestamp {
	if m != nil {
		return m.Deleted
	}
	return nil
}

func (m *SnapshotWidget) GetCreated() *google_protobuf2.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *SnapshotWidget) GetUpdated() *google_protobuf2.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *SnapshotWidget) GetAccountsCreated() int64 {
	if m != nil {
		return m.AccountsCreated
	}
	return 0
}

func (m *SnapshotWidget) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

// A single autocomplete prediction
type AutocompletePrediction struct {
	// Details of a place with name and address
	Description string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	// Google place id
	PlaceId string `protobuf:"bytes,2,opt,name=place_id,json=placeId" json:"place_id,omitempty"`
	// Main text of the prediction, likely the business name
	MainText string `protobuf:"bytes,3,opt,name=main_text,json=mainText" json:"main_text,omitempty"`
	// Secondary text of the prediction, likely the business address
	SecondaryText string `protobuf:"bytes,4,opt,name=secondary_text,json=secondaryText" json:"secondary_text,omitempty"`
}

func (m *AutocompletePrediction) Reset()                    { *m = AutocompletePrediction{} }
func (m *AutocompletePrediction) String() string            { return proto.CompactTextString(m) }
func (*AutocompletePrediction) ProtoMessage()               {}
func (*AutocompletePrediction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AutocompletePrediction) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AutocompletePrediction) GetPlaceId() string {
	if m != nil {
		return m.PlaceId
	}
	return ""
}

func (m *AutocompletePrediction) GetMainText() string {
	if m != nil {
		return m.MainText
	}
	return ""
}

func (m *AutocompletePrediction) GetSecondaryText() string {
	if m != nil {
		return m.SecondaryText
	}
	return ""
}

// A latitude/longitude location
type Location struct {
	// Latitude of a location
	Latitude float32 `protobuf:"fixed32,1,opt,name=latitude" json:"latitude,omitempty"`
	// Longitude of a location
	Longitude float32 `protobuf:"fixed32,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Location) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Location) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

// *******************
// Requests
// *******************
// A request for creating a new snapshot widget
type CreateSnapshotWidgetRequest struct {
	// An identifier for the partner the accounts created by the widget will be assigned to
	PartnerId string `protobuf:"bytes,1,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// An identifier for the market the accounts created by the widget will be assigned to
	MarketId string `protobuf:"bytes,2,opt,name=market_id,json=marketId" json:"market_id,omitempty"`
	// An identifier for the campaign that should be started for accounts created via the widget
	CampaignId string `protobuf:"bytes,3,opt,name=campaign_id,json=campaignId" json:"campaign_id,omitempty"`
	// The name of the widget
	Name string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	// Identifiers for the salespeople who will be assigned accounts created by the widget
	SalespersonIds []string `protobuf:"bytes,5,rep,name=salesperson_ids,json=salespersonIds" json:"salesperson_ids,omitempty"`
	// Whether the widget is disabled
	Disabled bool `protobuf:"varint,7,opt,name=disabled" json:"disabled,omitempty"`
}

func (m *CreateSnapshotWidgetRequest) Reset()                    { *m = CreateSnapshotWidgetRequest{} }
func (m *CreateSnapshotWidgetRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateSnapshotWidgetRequest) ProtoMessage()               {}
func (*CreateSnapshotWidgetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateSnapshotWidgetRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *CreateSnapshotWidgetRequest) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *CreateSnapshotWidgetRequest) GetCampaignId() string {
	if m != nil {
		return m.CampaignId
	}
	return ""
}

func (m *CreateSnapshotWidgetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateSnapshotWidgetRequest) GetSalespersonIds() []string {
	if m != nil {
		return m.SalespersonIds
	}
	return nil
}

func (m *CreateSnapshotWidgetRequest) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

// A request for retrieving a single snapshot widget
type GetSnapshotWidgetRequest struct {
	// A unique identifier for the widget
	WidgetId string `protobuf:"bytes,1,opt,name=widget_id,json=widgetId" json:"widget_id,omitempty"`
	// An identifier for the partner the widget belong to
	PartnerId string `protobuf:"bytes,2,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
}

func (m *GetSnapshotWidgetRequest) Reset()                    { *m = GetSnapshotWidgetRequest{} }
func (m *GetSnapshotWidgetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSnapshotWidgetRequest) ProtoMessage()               {}
func (*GetSnapshotWidgetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetSnapshotWidgetRequest) GetWidgetId() string {
	if m != nil {
		return m.WidgetId
	}
	return ""
}

func (m *GetSnapshotWidgetRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

// A request to update a snapshot widget
type UpdateSnapshotWidgetRequest struct {
	// A unique identifier for the widget
	WidgetId string `protobuf:"bytes,1,opt,name=widget_id,json=widgetId" json:"widget_id,omitempty"`
	// An identifier for the partner
	PartnerId string `protobuf:"bytes,2,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// An identifier for the market the accounts created by the widget will be assigned to
	MarketId string `protobuf:"bytes,3,opt,name=market_id,json=marketId" json:"market_id,omitempty"`
	// An identifier for the campaign that should be started for accounts created via the widget
	CampaignId string `protobuf:"bytes,4,opt,name=campaign_id,json=campaignId" json:"campaign_id,omitempty"`
	// The name of the widget
	Name string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	// Identifiers for the salespeople who will be assigned accounts created by the widget
	SalespersonIds []string `protobuf:"bytes,6,rep,name=salesperson_ids,json=salespersonIds" json:"salesperson_ids,omitempty"`
	// The style attributes for the widget
	Styles *WidgetStyles `protobuf:"bytes,8,opt,name=styles" json:"styles,omitempty"`
	// Whether the widget is disabled
	Disabled bool `protobuf:"varint,9,opt,name=disabled" json:"disabled,omitempty"`
}

func (m *UpdateSnapshotWidgetRequest) Reset()                    { *m = UpdateSnapshotWidgetRequest{} }
func (m *UpdateSnapshotWidgetRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateSnapshotWidgetRequest) ProtoMessage()               {}
func (*UpdateSnapshotWidgetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateSnapshotWidgetRequest) GetWidgetId() string {
	if m != nil {
		return m.WidgetId
	}
	return ""
}

func (m *UpdateSnapshotWidgetRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *UpdateSnapshotWidgetRequest) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *UpdateSnapshotWidgetRequest) GetCampaignId() string {
	if m != nil {
		return m.CampaignId
	}
	return ""
}

func (m *UpdateSnapshotWidgetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateSnapshotWidgetRequest) GetSalespersonIds() []string {
	if m != nil {
		return m.SalespersonIds
	}
	return nil
}

func (m *UpdateSnapshotWidgetRequest) GetStyles() *WidgetStyles {
	if m != nil {
		return m.Styles
	}
	return nil
}

func (m *UpdateSnapshotWidgetRequest) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

// A request to delete a single snapshot widget
type DeleteSnapshotWidgetRequest struct {
	// A unique identifier for the widget
	WidgetId string `protobuf:"bytes,1,opt,name=widget_id,json=widgetId" json:"widget_id,omitempty"`
	// An identifier for the partner the widget belong to
	PartnerId string `protobuf:"bytes,2,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
}

func (m *DeleteSnapshotWidgetRequest) Reset()                    { *m = DeleteSnapshotWidgetRequest{} }
func (m *DeleteSnapshotWidgetRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteSnapshotWidgetRequest) ProtoMessage()               {}
func (*DeleteSnapshotWidgetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeleteSnapshotWidgetRequest) GetWidgetId() string {
	if m != nil {
		return m.WidgetId
	}
	return ""
}

func (m *DeleteSnapshotWidgetRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

// A request to list snapshot widgets matching some set of filters
type ListSnapshotWidgetRequest struct {
	// The filters to apply to the list request
	Filters *ListSnapshotWidgetRequest_Filters `protobuf:"bytes,1,opt,name=filters" json:"filters,omitempty"`
	// A cursor to be provided when fetching additional pages of results beyond the first
	Cursor string `protobuf:"bytes,2,opt,name=cursor" json:"cursor,omitempty"`
	// Size of the page to return
	PageSize int64 `protobuf:"varint,3,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *ListSnapshotWidgetRequest) Reset()                    { *m = ListSnapshotWidgetRequest{} }
func (m *ListSnapshotWidgetRequest) String() string            { return proto.CompactTextString(m) }
func (*ListSnapshotWidgetRequest) ProtoMessage()               {}
func (*ListSnapshotWidgetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ListSnapshotWidgetRequest) GetFilters() *ListSnapshotWidgetRequest_Filters {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *ListSnapshotWidgetRequest) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *ListSnapshotWidgetRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// Attributes by which to filter the list of snapshot widgets retrieved
type ListSnapshotWidgetRequest_Filters struct {
	// A partner identifier
	PartnerId string `protobuf:"bytes,1,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// A market identifier
	MarketId string `protobuf:"bytes,2,opt,name=market_id,json=marketId" json:"market_id,omitempty"`
}

func (m *ListSnapshotWidgetRequest_Filters) Reset()         { *m = ListSnapshotWidgetRequest_Filters{} }
func (m *ListSnapshotWidgetRequest_Filters) String() string { return proto.CompactTextString(m) }
func (*ListSnapshotWidgetRequest_Filters) ProtoMessage()    {}
func (*ListSnapshotWidgetRequest_Filters) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8, 0}
}

func (m *ListSnapshotWidgetRequest_Filters) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *ListSnapshotWidgetRequest_Filters) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

// A request to update the style attributes on a snapshot widget
type UpdateStylesRequest struct {
	// A unique identifier for the widget
	WidgetId string `protobuf:"bytes,1,opt,name=widget_id,json=widgetId" json:"widget_id,omitempty"`
	// An identifier for the partner the widget belongs to
	PartnerId string `protobuf:"bytes,2,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// The style attributes to be updated on the widget
	Styles *WidgetStyles `protobuf:"bytes,3,opt,name=styles" json:"styles,omitempty"`
}

func (m *UpdateStylesRequest) Reset()                    { *m = UpdateStylesRequest{} }
func (m *UpdateStylesRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateStylesRequest) ProtoMessage()               {}
func (*UpdateStylesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *UpdateStylesRequest) GetWidgetId() string {
	if m != nil {
		return m.WidgetId
	}
	return ""
}

func (m *UpdateStylesRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *UpdateStylesRequest) GetStyles() *WidgetStyles {
	if m != nil {
		return m.Styles
	}
	return nil
}

// A request to retrieve the embed code for a snapshot widget
type GetEmbedCodeRequest struct {
	// A unique identifier for the widget
	WidgetId string `protobuf:"bytes,1,opt,name=widget_id,json=widgetId" json:"widget_id,omitempty"`
	// An identifier for the partner the widget belongs to
	PartnerId string `protobuf:"bytes,2,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// The style attributes to be included with the embed code
	Styles *WidgetStyles `protobuf:"bytes,3,opt,name=styles" json:"styles,omitempty"`
}

func (m *GetEmbedCodeRequest) Reset()                    { *m = GetEmbedCodeRequest{} }
func (m *GetEmbedCodeRequest) String() string            { return proto.CompactTextString(m) }
func (*GetEmbedCodeRequest) ProtoMessage()               {}
func (*GetEmbedCodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *GetEmbedCodeRequest) GetWidgetId() string {
	if m != nil {
		return m.WidgetId
	}
	return ""
}

func (m *GetEmbedCodeRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *GetEmbedCodeRequest) GetStyles() *WidgetStyles {
	if m != nil {
		return m.Styles
	}
	return nil
}

// A request to fetch autocomplete predictions
type SnapshotAutocompleteRequest struct {
	// A unique identifier for the widget
	WidgetId string `protobuf:"bytes,1,opt,name=widget_id,json=widgetId" json:"widget_id,omitempty"`
	// An identifier for the partner the widget belongs to
	PartnerId string `protobuf:"bytes,2,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// The search term to provide autocomplete results for
	SearchTerm string `protobuf:"bytes,3,opt,name=search_term,json=searchTerm" json:"search_term,omitempty"`
	// A location to prioritize search results around
	Location *Location `protobuf:"bytes,4,opt,name=location" json:"location,omitempty"`
}

func (m *SnapshotAutocompleteRequest) Reset()                    { *m = SnapshotAutocompleteRequest{} }
func (m *SnapshotAutocompleteRequest) String() string            { return proto.CompactTextString(m) }
func (*SnapshotAutocompleteRequest) ProtoMessage()               {}
func (*SnapshotAutocompleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *SnapshotAutocompleteRequest) GetWidgetId() string {
	if m != nil {
		return m.WidgetId
	}
	return ""
}

func (m *SnapshotAutocompleteRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *SnapshotAutocompleteRequest) GetSearchTerm() string {
	if m != nil {
		return m.SearchTerm
	}
	return ""
}

func (m *SnapshotAutocompleteRequest) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

// A request to create a snapshot report from a Google Place ID
type CreateSnapshotFromPlaceIDRequest struct {
	// A unique identifier for the widget
	WidgetId string `protobuf:"bytes,1,opt,name=widget_id,json=widgetId" json:"widget_id,omitempty"`
	// An identifier for the partner the widget belongs to
	PartnerId string `protobuf:"bytes,2,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// A Google Place identifier for the business the snapshot is to be created for
	PlaceId string `protobuf:"bytes,3,opt,name=place_id,json=placeId" json:"place_id,omitempty"`
	// First name of the contact for the business
	ContactFirstName string `protobuf:"bytes,4,opt,name=contact_first_name,json=contactFirstName" json:"contact_first_name,omitempty"`
	// Email address of the contact for the business
	ContactEmail string `protobuf:"bytes,5,opt,name=contact_email,json=contactEmail" json:"contact_email,omitempty"`
}

func (m *CreateSnapshotFromPlaceIDRequest) Reset()         { *m = CreateSnapshotFromPlaceIDRequest{} }
func (m *CreateSnapshotFromPlaceIDRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSnapshotFromPlaceIDRequest) ProtoMessage()    {}
func (*CreateSnapshotFromPlaceIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12}
}

func (m *CreateSnapshotFromPlaceIDRequest) GetWidgetId() string {
	if m != nil {
		return m.WidgetId
	}
	return ""
}

func (m *CreateSnapshotFromPlaceIDRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *CreateSnapshotFromPlaceIDRequest) GetPlaceId() string {
	if m != nil {
		return m.PlaceId
	}
	return ""
}

func (m *CreateSnapshotFromPlaceIDRequest) GetContactFirstName() string {
	if m != nil {
		return m.ContactFirstName
	}
	return ""
}

func (m *CreateSnapshotFromPlaceIDRequest) GetContactEmail() string {
	if m != nil {
		return m.ContactEmail
	}
	return ""
}

// A request to create a snapshot report
type CreateSnapshotRequest struct {
	// A unique identifier for the widget
	WidgetId string `protobuf:"bytes,1,opt,name=widget_id,json=widgetId" json:"widget_id,omitempty"`
	// An identifier for the partner the widget belongs to
	PartnerId string `protobuf:"bytes,2,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// First name of the contact for the business
	ContactFirstName string `protobuf:"bytes,3,opt,name=contact_first_name,json=contactFirstName" json:"contact_first_name,omitempty"`
	// Last name of the contact for the business
	ContactLastName string `protobuf:"bytes,4,opt,name=contact_last_name,json=contactLastName" json:"contact_last_name,omitempty"`
	// Email address of the contact for the business
	ContactEmail string `protobuf:"bytes,5,opt,name=contact_email,json=contactEmail" json:"contact_email,omitempty"`
	// Name of the business
	BusinessName string `protobuf:"bytes,6,opt,name=business_name,json=businessName" json:"business_name,omitempty"`
	// Website for the business
	Website string `protobuf:"bytes,7,opt,name=website" json:"website,omitempty"`
	// Street address of the business
	StreetAddress string `protobuf:"bytes,8,opt,name=street_address,json=streetAddress" json:"street_address,omitempty"`
	// City of the business
	City string `protobuf:"bytes,9,opt,name=city" json:"city,omitempty"`
	// State of the business
	State string `protobuf:"bytes,10,opt,name=state" json:"state,omitempty"`
	// Zip code of the business
	Zip string `protobuf:"bytes,11,opt,name=zip" json:"zip,omitempty"`
	// Country of the business
	Country string `protobuf:"bytes,12,opt,name=country" json:"country,omitempty"`
	// Business category for the business
	BusinessCategory string `protobuf:"bytes,13,opt,name=business_category,json=businessCategory" json:"business_category,omitempty"`
	// Phone number of the business
	Phone string `protobuf:"bytes,14,opt,name=phone" json:"phone,omitempty"`
	// Facebook URL of the business
	FacebookUrl string `protobuf:"bytes,15,opt,name=facebook_url,json=facebookUrl" json:"facebook_url,omitempty"`
	// Twitter URL of the business
	TwitterUrl string `protobuf:"bytes,16,opt,name=twitter_url,json=twitterUrl" json:"twitter_url,omitempty"`
}

func (m *CreateSnapshotRequest) Reset()                    { *m = CreateSnapshotRequest{} }
func (m *CreateSnapshotRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateSnapshotRequest) ProtoMessage()               {}
func (*CreateSnapshotRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *CreateSnapshotRequest) GetWidgetId() string {
	if m != nil {
		return m.WidgetId
	}
	return ""
}

func (m *CreateSnapshotRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *CreateSnapshotRequest) GetContactFirstName() string {
	if m != nil {
		return m.ContactFirstName
	}
	return ""
}

func (m *CreateSnapshotRequest) GetContactLastName() string {
	if m != nil {
		return m.ContactLastName
	}
	return ""
}

func (m *CreateSnapshotRequest) GetContactEmail() string {
	if m != nil {
		return m.ContactEmail
	}
	return ""
}

func (m *CreateSnapshotRequest) GetBusinessName() string {
	if m != nil {
		return m.BusinessName
	}
	return ""
}

func (m *CreateSnapshotRequest) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *CreateSnapshotRequest) GetStreetAddress() string {
	if m != nil {
		return m.StreetAddress
	}
	return ""
}

func (m *CreateSnapshotRequest) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *CreateSnapshotRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *CreateSnapshotRequest) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *CreateSnapshotRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *CreateSnapshotRequest) GetBusinessCategory() string {
	if m != nil {
		return m.BusinessCategory
	}
	return ""
}

func (m *CreateSnapshotRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *CreateSnapshotRequest) GetFacebookUrl() string {
	if m != nil {
		return m.FacebookUrl
	}
	return ""
}

func (m *CreateSnapshotRequest) GetTwitterUrl() string {
	if m != nil {
		return m.TwitterUrl
	}
	return ""
}

// A request for retrieving a single snapshot widget configurations
type GetSnapshotWidgetConfigRequest struct {
	// A unique identifier for the widget
	WidgetId string `protobuf:"bytes,1,opt,name=widget_id,json=widgetId" json:"widget_id,omitempty"`
	// An identifier for the partner the widget belong to
	PartnerId string `protobuf:"bytes,2,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
}

func (m *GetSnapshotWidgetConfigRequest) Reset()                    { *m = GetSnapshotWidgetConfigRequest{} }
func (m *GetSnapshotWidgetConfigRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSnapshotWidgetConfigRequest) ProtoMessage()               {}
func (*GetSnapshotWidgetConfigRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *GetSnapshotWidgetConfigRequest) GetWidgetId() string {
	if m != nil {
		return m.WidgetId
	}
	return ""
}

func (m *GetSnapshotWidgetConfigRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

// *******************
// Response
// *******************
// Response to a CreateSnapshotWidget request
type CreateSnapshotWidgetResponse struct {
	// A snapshot widget
	SnapshotWidget *SnapshotWidget `protobuf:"bytes,1,opt,name=snapshot_widget,json=snapshotWidget" json:"snapshot_widget,omitempty"`
}

func (m *CreateSnapshotWidgetResponse) Reset()                    { *m = CreateSnapshotWidgetResponse{} }
func (m *CreateSnapshotWidgetResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateSnapshotWidgetResponse) ProtoMessage()               {}
func (*CreateSnapshotWidgetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *CreateSnapshotWidgetResponse) GetSnapshotWidget() *SnapshotWidget {
	if m != nil {
		return m.SnapshotWidget
	}
	return nil
}

// Response to a GetSnapshotWidget request
type GetSnapshotWidgetResponse struct {
	// A snapshot widget
	SnapshotWidget *SnapshotWidget `protobuf:"bytes,1,opt,name=snapshot_widget,json=snapshotWidget" json:"snapshot_widget,omitempty"`
}

func (m *GetSnapshotWidgetResponse) Reset()                    { *m = GetSnapshotWidgetResponse{} }
func (m *GetSnapshotWidgetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetSnapshotWidgetResponse) ProtoMessage()               {}
func (*GetSnapshotWidgetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *GetSnapshotWidgetResponse) GetSnapshotWidget() *SnapshotWidget {
	if m != nil {
		return m.SnapshotWidget
	}
	return nil
}

// Response to a ListSnapshotWidget request
type ListSnapshotWidgetResponse struct {
	// A list of snapshot widgets
	SnapshotWidgets []*SnapshotWidget `protobuf:"bytes,1,rep,name=snapshot_widgets,json=snapshotWidgets" json:"snapshot_widgets,omitempty"`
	// A cursor for the next page of results
	NextCursor string `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor" json:"next_cursor,omitempty"`
	// A flag to indicate there are more pages
	HasMore bool `protobuf:"varint,3,opt,name=has_more,json=hasMore" json:"has_more,omitempty"`
	// The total number of results based on the filter provided
	TotalResults int64 `protobuf:"varint,4,opt,name=total_results,json=totalResults" json:"total_results,omitempty"`
}

func (m *ListSnapshotWidgetResponse) Reset()                    { *m = ListSnapshotWidgetResponse{} }
func (m *ListSnapshotWidgetResponse) String() string            { return proto.CompactTextString(m) }
func (*ListSnapshotWidgetResponse) ProtoMessage()               {}
func (*ListSnapshotWidgetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ListSnapshotWidgetResponse) GetSnapshotWidgets() []*SnapshotWidget {
	if m != nil {
		return m.SnapshotWidgets
	}
	return nil
}

func (m *ListSnapshotWidgetResponse) GetNextCursor() string {
	if m != nil {
		return m.NextCursor
	}
	return ""
}

func (m *ListSnapshotWidgetResponse) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *ListSnapshotWidgetResponse) GetTotalResults() int64 {
	if m != nil {
		return m.TotalResults
	}
	return 0
}

// Response to a GetEmbedCode request
type GetEmbedCodeResponse struct {
	// The HTML embed code for the widget
	EmbedCode string `protobuf:"bytes,1,opt,name=embed_code,json=embedCode" json:"embed_code,omitempty"`
}

func (m *GetEmbedCodeResponse) Reset()                    { *m = GetEmbedCodeResponse{} }
func (m *GetEmbedCodeResponse) String() string            { return proto.CompactTextString(m) }
func (*GetEmbedCodeResponse) ProtoMessage()               {}
func (*GetEmbedCodeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *GetEmbedCodeResponse) GetEmbedCode() string {
	if m != nil {
		return m.EmbedCode
	}
	return ""
}

// Response to a BusinessAutocomplete request
type SnapshotAutocompleteResponse struct {
	// A list of autocomplete predictions
	Predictions []*AutocompletePrediction `protobuf:"bytes,1,rep,name=predictions" json:"predictions,omitempty"`
}

func (m *SnapshotAutocompleteResponse) Reset()                    { *m = SnapshotAutocompleteResponse{} }
func (m *SnapshotAutocompleteResponse) String() string            { return proto.CompactTextString(m) }
func (*SnapshotAutocompleteResponse) ProtoMessage()               {}
func (*SnapshotAutocompleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *SnapshotAutocompleteResponse) GetPredictions() []*AutocompletePrediction {
	if m != nil {
		return m.Predictions
	}
	return nil
}

// Response to a GetSnapshotWidgetConfig Response
type GetSnapshotWidgetConfigResponse struct {
	// The style attributes for the widget
	Styles *WidgetStyles `protobuf:"bytes,1,opt,name=styles" json:"styles,omitempty"`
	// The status of the widget
	Status GetSnapshotWidgetConfigResponse_Status `protobuf:"varint,2,opt,name=status,enum=snapshotwidget.v1.GetSnapshotWidgetConfigResponse_Status" json:"status,omitempty"`
}

func (m *GetSnapshotWidgetConfigResponse) Reset()         { *m = GetSnapshotWidgetConfigResponse{} }
func (m *GetSnapshotWidgetConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetSnapshotWidgetConfigResponse) ProtoMessage()    {}
func (*GetSnapshotWidgetConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{20}
}

func (m *GetSnapshotWidgetConfigResponse) GetStyles() *WidgetStyles {
	if m != nil {
		return m.Styles
	}
	return nil
}

func (m *GetSnapshotWidgetConfigResponse) GetStatus() GetSnapshotWidgetConfigResponse_Status {
	if m != nil {
		return m.Status
	}
	return GetSnapshotWidgetConfigResponse_ENABLED
}

func init() {
	proto.RegisterType((*WidgetStyles)(nil), "snapshotwidget.v1.WidgetStyles")
	proto.RegisterType((*SnapshotWidget)(nil), "snapshotwidget.v1.SnapshotWidget")
	proto.RegisterType((*AutocompletePrediction)(nil), "snapshotwidget.v1.AutocompletePrediction")
	proto.RegisterType((*Location)(nil), "snapshotwidget.v1.Location")
	proto.RegisterType((*CreateSnapshotWidgetRequest)(nil), "snapshotwidget.v1.CreateSnapshotWidgetRequest")
	proto.RegisterType((*GetSnapshotWidgetRequest)(nil), "snapshotwidget.v1.GetSnapshotWidgetRequest")
	proto.RegisterType((*UpdateSnapshotWidgetRequest)(nil), "snapshotwidget.v1.UpdateSnapshotWidgetRequest")
	proto.RegisterType((*DeleteSnapshotWidgetRequest)(nil), "snapshotwidget.v1.DeleteSnapshotWidgetRequest")
	proto.RegisterType((*ListSnapshotWidgetRequest)(nil), "snapshotwidget.v1.ListSnapshotWidgetRequest")
	proto.RegisterType((*ListSnapshotWidgetRequest_Filters)(nil), "snapshotwidget.v1.ListSnapshotWidgetRequest.Filters")
	proto.RegisterType((*UpdateStylesRequest)(nil), "snapshotwidget.v1.UpdateStylesRequest")
	proto.RegisterType((*GetEmbedCodeRequest)(nil), "snapshotwidget.v1.GetEmbedCodeRequest")
	proto.RegisterType((*SnapshotAutocompleteRequest)(nil), "snapshotwidget.v1.SnapshotAutocompleteRequest")
	proto.RegisterType((*CreateSnapshotFromPlaceIDRequest)(nil), "snapshotwidget.v1.CreateSnapshotFromPlaceIDRequest")
	proto.RegisterType((*CreateSnapshotRequest)(nil), "snapshotwidget.v1.CreateSnapshotRequest")
	proto.RegisterType((*GetSnapshotWidgetConfigRequest)(nil), "snapshotwidget.v1.GetSnapshotWidgetConfigRequest")
	proto.RegisterType((*CreateSnapshotWidgetResponse)(nil), "snapshotwidget.v1.CreateSnapshotWidgetResponse")
	proto.RegisterType((*GetSnapshotWidgetResponse)(nil), "snapshotwidget.v1.GetSnapshotWidgetResponse")
	proto.RegisterType((*ListSnapshotWidgetResponse)(nil), "snapshotwidget.v1.ListSnapshotWidgetResponse")
	proto.RegisterType((*GetEmbedCodeResponse)(nil), "snapshotwidget.v1.GetEmbedCodeResponse")
	proto.RegisterType((*SnapshotAutocompleteResponse)(nil), "snapshotwidget.v1.SnapshotAutocompleteResponse")
	proto.RegisterType((*GetSnapshotWidgetConfigResponse)(nil), "snapshotwidget.v1.GetSnapshotWidgetConfigResponse")
	proto.RegisterEnum("snapshotwidget.v1.GetSnapshotWidgetConfigResponse_Status", GetSnapshotWidgetConfigResponse_Status_name, GetSnapshotWidgetConfigResponse_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SnapshotWidgetService service

type SnapshotWidgetServiceClient interface {
	// Create a snapshot widget
	Create(ctx context.Context, in *CreateSnapshotWidgetRequest, opts ...grpc.CallOption) (*CreateSnapshotWidgetResponse, error)
	// Get a snapshot widget
	Get(ctx context.Context, in *GetSnapshotWidgetRequest, opts ...grpc.CallOption) (*GetSnapshotWidgetResponse, error)
	// Update a snapshot widget
	Update(ctx context.Context, in *UpdateSnapshotWidgetRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// Delete a snapshot widget
	Delete(ctx context.Context, in *DeleteSnapshotWidgetRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// List snapshot widgets matching some filters
	List(ctx context.Context, in *ListSnapshotWidgetRequest, opts ...grpc.CallOption) (*ListSnapshotWidgetResponse, error)
	// Update the styles of a snapshot widget
	UpdateStyles(ctx context.Context, in *UpdateStylesRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// Get the embed code for a widget
	GetEmbedCode(ctx context.Context, in *GetEmbedCodeRequest, opts ...grpc.CallOption) (*GetEmbedCodeResponse, error)
	// Get suggested autocomplete results for a search term
	SnapshotAutocomplete(ctx context.Context, in *SnapshotAutocompleteRequest, opts ...grpc.CallOption) (*SnapshotAutocompleteResponse, error)
	// Create a snapshot from a Google Place ID
	CreateSnapshotFromPlaceID(ctx context.Context, in *CreateSnapshotFromPlaceIDRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// Create a snapshot
	CreateSnapshot(ctx context.Context, in *CreateSnapshotRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// Get the Configuration for a snapshot widget
	GetSnapshotWidgetConfig(ctx context.Context, in *GetSnapshotWidgetConfigRequest, opts ...grpc.CallOption) (*GetSnapshotWidgetConfigResponse, error)
}

type snapshotWidgetServiceClient struct {
	cc *grpc.ClientConn
}

func NewSnapshotWidgetServiceClient(cc *grpc.ClientConn) SnapshotWidgetServiceClient {
	return &snapshotWidgetServiceClient{cc}
}

func (c *snapshotWidgetServiceClient) Create(ctx context.Context, in *CreateSnapshotWidgetRequest, opts ...grpc.CallOption) (*CreateSnapshotWidgetResponse, error) {
	out := new(CreateSnapshotWidgetResponse)
	err := grpc.Invoke(ctx, "/snapshotwidget.v1.SnapshotWidgetService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *snapshotWidgetServiceClient) Get(ctx context.Context, in *GetSnapshotWidgetRequest, opts ...grpc.CallOption) (*GetSnapshotWidgetResponse, error) {
	out := new(GetSnapshotWidgetResponse)
	err := grpc.Invoke(ctx, "/snapshotwidget.v1.SnapshotWidgetService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *snapshotWidgetServiceClient) Update(ctx context.Context, in *UpdateSnapshotWidgetRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/snapshotwidget.v1.SnapshotWidgetService/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *snapshotWidgetServiceClient) Delete(ctx context.Context, in *DeleteSnapshotWidgetRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/snapshotwidget.v1.SnapshotWidgetService/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *snapshotWidgetServiceClient) List(ctx context.Context, in *ListSnapshotWidgetRequest, opts ...grpc.CallOption) (*ListSnapshotWidgetResponse, error) {
	out := new(ListSnapshotWidgetResponse)
	err := grpc.Invoke(ctx, "/snapshotwidget.v1.SnapshotWidgetService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *snapshotWidgetServiceClient) UpdateStyles(ctx context.Context, in *UpdateStylesRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/snapshotwidget.v1.SnapshotWidgetService/UpdateStyles", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *snapshotWidgetServiceClient) GetEmbedCode(ctx context.Context, in *GetEmbedCodeRequest, opts ...grpc.CallOption) (*GetEmbedCodeResponse, error) {
	out := new(GetEmbedCodeResponse)
	err := grpc.Invoke(ctx, "/snapshotwidget.v1.SnapshotWidgetService/GetEmbedCode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *snapshotWidgetServiceClient) SnapshotAutocomplete(ctx context.Context, in *SnapshotAutocompleteRequest, opts ...grpc.CallOption) (*SnapshotAutocompleteResponse, error) {
	out := new(SnapshotAutocompleteResponse)
	err := grpc.Invoke(ctx, "/snapshotwidget.v1.SnapshotWidgetService/SnapshotAutocomplete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *snapshotWidgetServiceClient) CreateSnapshotFromPlaceID(ctx context.Context, in *CreateSnapshotFromPlaceIDRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/snapshotwidget.v1.SnapshotWidgetService/CreateSnapshotFromPlaceID", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *snapshotWidgetServiceClient) CreateSnapshot(ctx context.Context, in *CreateSnapshotRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/snapshotwidget.v1.SnapshotWidgetService/CreateSnapshot", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *snapshotWidgetServiceClient) GetSnapshotWidgetConfig(ctx context.Context, in *GetSnapshotWidgetConfigRequest, opts ...grpc.CallOption) (*GetSnapshotWidgetConfigResponse, error) {
	out := new(GetSnapshotWidgetConfigResponse)
	err := grpc.Invoke(ctx, "/snapshotwidget.v1.SnapshotWidgetService/GetSnapshotWidgetConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SnapshotWidgetService service

type SnapshotWidgetServiceServer interface {
	// Create a snapshot widget
	Create(context.Context, *CreateSnapshotWidgetRequest) (*CreateSnapshotWidgetResponse, error)
	// Get a snapshot widget
	Get(context.Context, *GetSnapshotWidgetRequest) (*GetSnapshotWidgetResponse, error)
	// Update a snapshot widget
	Update(context.Context, *UpdateSnapshotWidgetRequest) (*google_protobuf1.Empty, error)
	// Delete a snapshot widget
	Delete(context.Context, *DeleteSnapshotWidgetRequest) (*google_protobuf1.Empty, error)
	// List snapshot widgets matching some filters
	List(context.Context, *ListSnapshotWidgetRequest) (*ListSnapshotWidgetResponse, error)
	// Update the styles of a snapshot widget
	UpdateStyles(context.Context, *UpdateStylesRequest) (*google_protobuf1.Empty, error)
	// Get the embed code for a widget
	GetEmbedCode(context.Context, *GetEmbedCodeRequest) (*GetEmbedCodeResponse, error)
	// Get suggested autocomplete results for a search term
	SnapshotAutocomplete(context.Context, *SnapshotAutocompleteRequest) (*SnapshotAutocompleteResponse, error)
	// Create a snapshot from a Google Place ID
	CreateSnapshotFromPlaceID(context.Context, *CreateSnapshotFromPlaceIDRequest) (*google_protobuf1.Empty, error)
	// Create a snapshot
	CreateSnapshot(context.Context, *CreateSnapshotRequest) (*google_protobuf1.Empty, error)
	// Get the Configuration for a snapshot widget
	GetSnapshotWidgetConfig(context.Context, *GetSnapshotWidgetConfigRequest) (*GetSnapshotWidgetConfigResponse, error)
}

func RegisterSnapshotWidgetServiceServer(s *grpc.Server, srv SnapshotWidgetServiceServer) {
	s.RegisterService(&_SnapshotWidgetService_serviceDesc, srv)
}

func _SnapshotWidgetService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSnapshotWidgetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnapshotWidgetServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/snapshotwidget.v1.SnapshotWidgetService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnapshotWidgetServiceServer).Create(ctx, req.(*CreateSnapshotWidgetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SnapshotWidgetService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSnapshotWidgetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnapshotWidgetServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/snapshotwidget.v1.SnapshotWidgetService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnapshotWidgetServiceServer).Get(ctx, req.(*GetSnapshotWidgetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SnapshotWidgetService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSnapshotWidgetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnapshotWidgetServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/snapshotwidget.v1.SnapshotWidgetService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnapshotWidgetServiceServer).Update(ctx, req.(*UpdateSnapshotWidgetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SnapshotWidgetService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSnapshotWidgetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnapshotWidgetServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/snapshotwidget.v1.SnapshotWidgetService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnapshotWidgetServiceServer).Delete(ctx, req.(*DeleteSnapshotWidgetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SnapshotWidgetService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSnapshotWidgetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnapshotWidgetServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/snapshotwidget.v1.SnapshotWidgetService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnapshotWidgetServiceServer).List(ctx, req.(*ListSnapshotWidgetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SnapshotWidgetService_UpdateStyles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStylesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnapshotWidgetServiceServer).UpdateStyles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/snapshotwidget.v1.SnapshotWidgetService/UpdateStyles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnapshotWidgetServiceServer).UpdateStyles(ctx, req.(*UpdateStylesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SnapshotWidgetService_GetEmbedCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEmbedCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnapshotWidgetServiceServer).GetEmbedCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/snapshotwidget.v1.SnapshotWidgetService/GetEmbedCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnapshotWidgetServiceServer).GetEmbedCode(ctx, req.(*GetEmbedCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SnapshotWidgetService_SnapshotAutocomplete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SnapshotAutocompleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnapshotWidgetServiceServer).SnapshotAutocomplete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/snapshotwidget.v1.SnapshotWidgetService/SnapshotAutocomplete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnapshotWidgetServiceServer).SnapshotAutocomplete(ctx, req.(*SnapshotAutocompleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SnapshotWidgetService_CreateSnapshotFromPlaceID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSnapshotFromPlaceIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnapshotWidgetServiceServer).CreateSnapshotFromPlaceID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/snapshotwidget.v1.SnapshotWidgetService/CreateSnapshotFromPlaceID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnapshotWidgetServiceServer).CreateSnapshotFromPlaceID(ctx, req.(*CreateSnapshotFromPlaceIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SnapshotWidgetService_CreateSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnapshotWidgetServiceServer).CreateSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/snapshotwidget.v1.SnapshotWidgetService/CreateSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnapshotWidgetServiceServer).CreateSnapshot(ctx, req.(*CreateSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SnapshotWidgetService_GetSnapshotWidgetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSnapshotWidgetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnapshotWidgetServiceServer).GetSnapshotWidgetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/snapshotwidget.v1.SnapshotWidgetService/GetSnapshotWidgetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnapshotWidgetServiceServer).GetSnapshotWidgetConfig(ctx, req.(*GetSnapshotWidgetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SnapshotWidgetService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "snapshotwidget.v1.SnapshotWidgetService",
	HandlerType: (*SnapshotWidgetServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _SnapshotWidgetService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _SnapshotWidgetService_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _SnapshotWidgetService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _SnapshotWidgetService_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _SnapshotWidgetService_List_Handler,
		},
		{
			MethodName: "UpdateStyles",
			Handler:    _SnapshotWidgetService_UpdateStyles_Handler,
		},
		{
			MethodName: "GetEmbedCode",
			Handler:    _SnapshotWidgetService_GetEmbedCode_Handler,
		},
		{
			MethodName: "SnapshotAutocomplete",
			Handler:    _SnapshotWidgetService_SnapshotAutocomplete_Handler,
		},
		{
			MethodName: "CreateSnapshotFromPlaceID",
			Handler:    _SnapshotWidgetService_CreateSnapshotFromPlaceID_Handler,
		},
		{
			MethodName: "CreateSnapshot",
			Handler:    _SnapshotWidgetService_CreateSnapshot_Handler,
		},
		{
			MethodName: "GetSnapshotWidgetConfig",
			Handler:    _SnapshotWidgetService_GetSnapshotWidgetConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1767 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xc4, 0x57, 0xcd, 0x6f, 0x1b, 0xc7,
	0x15, 0xcf, 0x8a, 0x32, 0x3f, 0x1e, 0x29, 0x89, 0x9e, 0x38, 0x36, 0x45, 0xc9, 0x96, 0xbc, 0x6e,
	0x62, 0xd9, 0x91, 0xc8, 0x5a, 0x49, 0x10, 0xb4, 0x37, 0x57, 0x1f, 0x86, 0x12, 0xc5, 0x48, 0x57,
	0x72, 0x8b, 0x02, 0x05, 0x16, 0xa3, 0xdd, 0x11, 0x35, 0xd5, 0xee, 0xce, 0x76, 0x66, 0x68, 0x99,
	0x46, 0x4f, 0x41, 0x0f, 0x41, 0x0f, 0x45, 0x81, 0xa0, 0x87, 0x1e, 0x7a, 0xee, 0xb1, 0x87, 0xfe,
	0x19, 0xed, 0xad, 0xa7, 0xde, 0x03, 0xf4, 0xd2, 0x3f, 0xa2, 0x98, 0x8f, 0x25, 0x97, 0xd2, 0x92,
	0x92, 0x1a, 0x15, 0xb9, 0xed, 0xfc, 0xde, 0x7b, 0xf3, 0xde, 0xcc, 0xfb, 0x98, 0xdf, 0x42, 0x0d,
	0xa7, 0xb4, 0x93, 0x72, 0x26, 0x19, 0xba, 0x2d, 0x12, 0x9c, 0x8a, 0x13, 0x26, 0xcf, 0x68, 0xd8,
	0x23, 0xb2, 0xf3, 0xfa, 0x59, 0x7b, 0xb9, 0xc7, 0x58, 0x2f, 0x22, 0x5d, 0x9c, 0xd2, 0x2e, 0x4e,
	0x12, 0x26, 0xb1, 0xa4, 0x2c, 0x11, 0xc6, 0xa0, 0xbd, 0x64, 0xa5, 0x7a, 0x75, 0xd4, 0x3f, 0xee,
	0x92, 0x38, 0x95, 0x03, 0x2b, 0x5c, 0x39, 0x2f, 0x94, 0x34, 0x26, 0x42, 0xe2, 0x38, 0x35, 0x0a,
	0xee, 0x5f, 0x4a, 0xd0, 0xf8, 0xb9, 0xf6, 0x74, 0x20, 0x07, 0x11, 0x11, 0xe8, 0x0e, 0xdc, 0x3a,
	0xa3, 0xa1, 0x3c, 0x69, 0x39, 0xab, 0xce, 0xda, 0x8c, 0x67, 0x16, 0xe8, 0x09, 0x34, 0x8f, 0x70,
	0x70, 0xda, 0xe3, 0xac, 0x9f, 0x84, 0x7e, 0xc0, 0x22, 0xc6, 0x5b, 0x33, 0xab, 0xce, 0x5a, 0xcd,
	0x5b, 0x18, 0xe1, 0x5b, 0x0a, 0x46, 0x0f, 0xa1, 0x71, 0xc4, 0x78, 0x48, 0xb8, 0x55, 0x2b, 0x69,
	0xb5, 0xba, 0xc1, 0x8c, 0xca, 0x23, 0x98, 0xb3, 0x2a, 0x1c, 0x87, 0xb4, 0x2f, 0x5a, 0xb3, 0xda,
	0x97, 0xb5, 0xf3, 0x34, 0x86, 0x56, 0xa0, 0x1e, 0x72, 0x96, 0xfa, 0xe2, 0x04, 0x87, 0xec, 0xac,
	0x75, 0x6b, 0xd5, 0x59, 0xab, 0x7a, 0xa0, 0xa0, 0x03, 0x8d, 0xa0, 0x75, 0x40, 0x29, 0xa7, 0x31,
	0xe6, 0x03, 0xff, 0x98, 0x25, 0xd2, 0xba, 0x2b, 0x6b, 0x77, 0x4d, 0x2b, 0xd9, 0x65, 0x89, 0x34,
	0x3e, 0x7f, 0x08, 0x77, 0x04, 0x09, 0x58, 0x12, 0x9e, 0xd3, 0xaf, 0x68, 0x7d, 0x34, 0x94, 0x8d,
	0x2c, 0xd4, 0x41, 0xfa, 0x52, 0xb2, 0xc4, 0x6a, 0x56, 0xed, 0x41, 0x34, 0x66, 0x54, 0x9e, 0xc2,
	0x6d, 0xab, 0x92, 0xdb, 0xb1, 0x66, 0xef, 0x45, 0x0b, 0x46, 0xdb, 0xdd, 0x07, 0x90, 0x54, 0x46,
	0xc4, 0x97, 0xe4, 0x8d, 0x6c, 0x81, 0x56, 0xaa, 0x69, 0xe4, 0x90, 0xbc, 0x91, 0xea, 0xb8, 0x76,
	0x2b, 0x2d, 0xaf, 0x6b, 0x39, 0x18, 0x48, 0x29, 0xb8, 0x5f, 0xcf, 0xc2, 0xfc, 0x81, 0xad, 0x0d,
	0x93, 0x31, 0xb4, 0x04, 0x35, 0x53, 0x25, 0x3e, 0x0d, 0x75, 0xbe, 0x6a, 0x5e, 0xd5, 0x00, 0x7b,
	0xa1, 0xf2, 0x97, 0x62, 0x2e, 0x13, 0xc2, 0x95, 0xd4, 0x24, 0xab, 0x66, 0x91, 0xbd, 0x50, 0xd9,
	0xc6, 0x98, 0x9f, 0x1a, 0x5b, 0x93, 0xa3, 0xaa, 0x01, 0xf6, 0x42, 0x15, 0x4c, 0x80, 0xe3, 0x14,
	0xd3, 0x5e, 0xa2, 0xc4, 0xb3, 0x26, 0x98, 0x0c, 0xda, 0x0b, 0x11, 0x82, 0xd9, 0x04, 0xc7, 0x44,
	0x67, 0xa5, 0xe6, 0xe9, 0x6f, 0xf4, 0x18, 0x16, 0x04, 0x8e, 0x88, 0x48, 0x09, 0x17, 0x4c, 0xd9,
	0x89, 0x56, 0x79, 0xb5, 0xb4, 0x56, 0xf3, 0xe6, 0x73, 0xf0, 0x5e, 0x28, 0xd0, 0x3d, 0xa8, 0xe0,
	0x94, 0xfa, 0xa7, 0x64, 0x60, 0xef, 0xb4, 0x8c, 0x53, 0xfa, 0x39, 0x19, 0xa0, 0x4f, 0xa1, 0x2c,
	0x74, 0x15, 0xea, 0x3b, 0xac, 0x6f, 0xae, 0x74, 0x2e, 0x34, 0x43, 0x27, 0x5f, 0xac, 0x9e, 0x55,
	0x47, 0x1f, 0x43, 0x25, 0x24, 0x11, 0x91, 0x24, 0xd4, 0x17, 0x5b, 0xdf, 0x6c, 0x77, 0x4c, 0xe1,
	0x77, 0xb2, 0xc2, 0xef, 0x1c, 0x66, 0x85, 0xef, 0x65, 0xaa, 0xca, 0x2a, 0xe0, 0x04, 0x2b, 0xab,
	0xfa, 0xe5, 0x56, 0x56, 0x55, 0x59, 0xf5, 0xd3, 0x50, 0x5b, 0x35, 0x2e, 0xb7, 0xb2, 0xaa, 0xaa,
	0x81, 0x70, 0x10, 0xb0, 0x7e, 0x22, 0x85, 0x9f, 0x39, 0x9d, 0x5b, 0x75, 0xd6, 0x4a, 0xde, 0x42,
	0x86, 0x6f, 0x59, 0x07, 0x6d, 0xa8, 0x86, 0x54, 0xe0, 0xa3, 0x88, 0x84, 0xad, 0x79, 0x5d, 0xf5,
	0xc3, 0xf5, 0x67, 0xb3, 0xd5, 0x4a, 0xb3, 0xea, 0xfe, 0xc9, 0x81, 0xbb, 0xcf, 0xfb, 0x92, 0x05,
	0x2c, 0x4e, 0xd5, 0x51, 0xbe, 0xe4, 0x24, 0xa4, 0x81, 0x1a, 0x0a, 0x68, 0x15, 0xea, 0x21, 0x11,
	0x01, 0xa7, 0xa9, 0x5a, 0xda, 0xa2, 0xc8, 0x43, 0x68, 0x11, 0xaa, 0x69, 0x84, 0x03, 0x32, 0xaa,
	0x8a, 0x8a, 0x5e, 0x67, 0x35, 0x41, 0x6d, 0x05, 0x0e, 0x6b, 0x82, 0xea, 0xfa, 0x43, 0xef, 0xc3,
	0xfc, 0xa8, 0x81, 0xb4, 0x86, 0x29, 0x8b, 0xb9, 0x21, 0xaa, 0xcb, 0x74, 0x1b, 0xaa, 0xfb, 0x2c,
	0xd0, 0x13, 0x4a, 0x9d, 0x24, 0xc2, 0x92, 0xca, 0x7e, 0x48, 0xec, 0x38, 0x19, 0xae, 0xd1, 0x32,
	0xd4, 0x22, 0x96, 0xf4, 0x8c, 0x70, 0x46, 0x0b, 0x47, 0x80, 0xfb, 0x2f, 0x07, 0x96, 0xcc, 0x7d,
	0x8c, 0x97, 0xbc, 0x47, 0x7e, 0xdd, 0x27, 0x42, 0x9e, 0x2b, 0x6e, 0x67, 0x6a, 0x71, 0xcf, 0x4c,
	0x2f, 0xee, 0xd2, 0xc4, 0xe2, 0x9e, 0x9d, 0x5e, 0xdc, 0xb7, 0x0a, 0x8b, 0x3b, 0x9f, 0xbd, 0xca,
	0x85, 0xec, 0x95, 0x9b, 0x15, 0xf7, 0x67, 0xd0, 0x7a, 0x41, 0x64, 0xf1, 0xb9, 0xbe, 0x43, 0x47,
	0xbb, 0x7f, 0x9d, 0x81, 0xa5, 0x57, 0xba, 0xdc, 0x6e, 0x7c, 0xef, 0xef, 0x73, 0x5a, 0x8c, 0x86,
	0x42, 0xf5, 0x7a, 0x43, 0x21, 0x9f, 0x89, 0x5a, 0x61, 0x1f, 0xfd, 0x02, 0x96, 0xb6, 0xf5, 0x2c,
	0xb8, 0xf9, 0x64, 0xfc, 0xdb, 0x81, 0xc5, 0x7d, 0x2a, 0x26, 0xa4, 0xf9, 0x25, 0x54, 0x8e, 0x69,
	0x24, 0x09, 0x17, 0x7a, 0xdf, 0xfa, 0xe6, 0xc7, 0x05, 0x87, 0x9a, 0x68, 0xde, 0xd9, 0x35, 0xb6,
	0x5e, 0xb6, 0x09, 0xba, 0x0b, 0xe5, 0xa0, 0xcf, 0xc5, 0xf0, 0x51, 0xb6, 0x2b, 0x75, 0x82, 0x14,
	0xf7, 0x88, 0x2f, 0xe8, 0x5b, 0xa2, 0xd3, 0x56, 0xf2, 0xaa, 0x0a, 0x38, 0xa0, 0x6f, 0x49, 0x7b,
	0x07, 0x2a, 0x76, 0xa3, 0xef, 0xd2, 0x4e, 0xee, 0xef, 0x1c, 0x78, 0xd7, 0x96, 0x9d, 0xb9, 0xff,
	0x1b, 0x28, 0xb7, 0x51, 0xce, 0x4b, 0xd7, 0xca, 0xb9, 0x0e, 0xe6, 0x05, 0x91, 0x3b, 0xf1, 0x11,
	0x09, 0xb7, 0x58, 0x48, 0xbe, 0xd7, 0x60, 0xfe, 0xe6, 0xc0, 0x52, 0x96, 0xc0, 0xfc, 0xb8, 0xbe,
	0x89, 0xa0, 0x56, 0xa0, 0x2e, 0x08, 0xe6, 0xc1, 0x89, 0x2f, 0x09, 0x8f, 0xb3, 0x21, 0x66, 0xa0,
	0x43, 0xc2, 0x63, 0xf4, 0x29, 0x54, 0x23, 0x3b, 0x87, 0x75, 0x47, 0xd6, 0x37, 0x97, 0x8a, 0x6a,
	0xcc, 0xaa, 0x78, 0x43, 0x65, 0xf7, 0x1f, 0x0e, 0xac, 0x8e, 0x8f, 0xde, 0x5d, 0xce, 0xe2, 0x2f,
	0xf5, 0x13, 0xb1, 0x7d, 0x13, 0xa1, 0xe7, 0x1f, 0xa0, 0xd2, 0xf8, 0x03, 0xb4, 0x0e, 0x28, 0x60,
	0x89, 0xc4, 0x81, 0xf4, 0x8f, 0x29, 0x17, 0xd2, 0xcf, 0xcd, 0xe1, 0xa6, 0x95, 0xec, 0x2a, 0xc1,
	0x4b, 0x35, 0x42, 0x1e, 0xc1, 0x5c, 0xa6, 0x4d, 0x62, 0x4c, 0x23, 0x3b, 0x5f, 0x1a, 0x16, 0xdc,
	0x51, 0x98, 0xfb, 0xc7, 0x59, 0x78, 0x6f, 0xfc, 0x38, 0x37, 0x71, 0x86, 0xe2, 0x40, 0x4b, 0x13,
	0x02, 0x7d, 0x0a, 0xb7, 0x33, 0xed, 0x08, 0x8f, 0x9f, 0x6a, 0xc1, 0x0a, 0xf6, 0xf1, 0x35, 0x0e,
	0xa5, 0x09, 0x74, 0x5f, 0xd0, 0x84, 0x08, 0x61, 0x36, 0x33, 0xac, 0xb7, 0x91, 0x81, 0x7a, 0xa7,
	0x16, 0x54, 0xce, 0xc8, 0x91, 0xa0, 0x92, 0x58, 0x92, 0x9b, 0x2d, 0xf5, 0x53, 0x2e, 0x39, 0x21,
	0xd2, 0xc7, 0x61, 0xc8, 0x89, 0x10, 0x96, 0x87, 0xcd, 0x19, 0xf4, 0xb9, 0x01, 0xd5, 0xd8, 0x0e,
	0xa8, 0x1c, 0x58, 0x42, 0xab, 0xbf, 0xd5, 0xef, 0x81, 0x90, 0x58, 0x12, 0x4b, 0x60, 0xcd, 0x02,
	0x35, 0xa1, 0xf4, 0x96, 0xa6, 0x96, 0xb4, 0xaa, 0x4f, 0xe5, 0x5c, 0xb3, 0x1a, 0x3e, 0xd0, 0x2c,
	0xa9, 0xe6, 0x65, 0x4b, 0xf4, 0xa1, 0xe2, 0xcc, 0x36, 0xf6, 0x00, 0x4b, 0xd2, 0x63, 0x7c, 0xa0,
	0xa9, 0x50, 0xcd, 0x6b, 0x66, 0x82, 0x2d, 0x8b, 0x2b, 0x77, 0xe9, 0x09, 0x4b, 0x88, 0x26, 0x42,
	0x35, 0xcf, 0x2c, 0x14, 0x33, 0x3f, 0xc6, 0x01, 0x39, 0x62, 0xec, 0xd4, 0xef, 0xf3, 0xa8, 0xb5,
	0x60, 0x58, 0x4e, 0x86, 0xbd, 0xe2, 0x91, 0xea, 0x0f, 0x79, 0x46, 0xa5, 0x24, 0x5c, 0x6b, 0x34,
	0x4d, 0x7f, 0x58, 0xe8, 0x15, 0x8f, 0xdc, 0x5f, 0xc2, 0x83, 0x0b, 0xaf, 0xf0, 0x16, 0x4b, 0x8e,
	0x69, 0xef, 0x26, 0xc6, 0xff, 0xaf, 0x60, 0xb9, 0x98, 0xbe, 0x88, 0x94, 0x25, 0x82, 0xa0, 0xcf,
	0x60, 0x21, 0x6b, 0x46, 0xdf, 0xec, 0x69, 0x1f, 0x82, 0x87, 0x05, 0x4d, 0x7a, 0x6e, 0x8f, 0x79,
	0x31, 0xb6, 0x76, 0x7b, 0xb0, 0x58, 0xc0, 0x27, 0xfe, 0x0f, 0x8e, 0xfe, 0xee, 0x40, 0xbb, 0xe8,
	0x51, 0xb2, 0xae, 0xf6, 0xa1, 0x79, 0xce, 0x95, 0x7a, 0xdd, 0x4a, 0x57, 0xf3, 0xb5, 0x30, 0xee,
	0x4b, 0xff, 0xfe, 0x25, 0xe4, 0x8d, 0xf4, 0xc7, 0xde, 0x35, 0x50, 0xd0, 0x96, 0x79, 0xdb, 0x16,
	0xa1, 0x7a, 0x82, 0x85, 0x1f, 0x33, 0x6e, 0x1a, 0xaf, 0xea, 0x55, 0x4e, 0xb0, 0xf8, 0x82, 0x71,
	0xdd, 0x43, 0x92, 0x49, 0x1c, 0xf9, 0x9c, 0x88, 0x7e, 0x24, 0xcd, 0xff, 0x65, 0xc9, 0x6b, 0x68,
	0xd0, 0x33, 0x98, 0xfb, 0x09, 0xdc, 0x19, 0x7f, 0x29, 0xec, 0x31, 0xee, 0x03, 0x10, 0x05, 0xfa,
	0x01, 0xb3, 0xb4, 0xb5, 0xe6, 0xd5, 0x48, 0xa6, 0xe6, 0x9e, 0xc2, 0x72, 0xf1, 0x4c, 0xb7, 0xe6,
	0x9f, 0x43, 0x3d, 0x1d, 0xd2, 0xf1, 0xec, 0x02, 0x9e, 0x14, 0x5c, 0x40, 0x31, 0x81, 0xf7, 0xf2,
	0xd6, 0xee, 0xb7, 0x0e, 0xac, 0x4c, 0xac, 0x52, 0xeb, 0x70, 0xf4, 0x3c, 0x39, 0xd7, 0xe3, 0x47,
	0x3f, 0x55, 0x86, 0x58, 0xf6, 0x85, 0xbe, 0xdc, 0xf9, 0xcd, 0x1f, 0x15, 0x18, 0x5e, 0xe2, 0xbc,
	0x73, 0xa0, 0x37, 0xf0, 0xec, 0x46, 0xee, 0x27, 0x50, 0x36, 0x08, 0xaa, 0x43, 0x65, 0xe7, 0xe5,
	0xf3, 0x9f, 0xec, 0xef, 0x6c, 0x37, 0xdf, 0x41, 0x0d, 0xa8, 0x6e, 0xef, 0x1d, 0x98, 0x95, 0x83,
	0x9a, 0xd0, 0xf0, 0x9e, 0x1f, 0xee, 0xf8, 0xfb, 0x7b, 0x5f, 0xec, 0x1d, 0xee, 0x6c, 0x37, 0x67,
	0x36, 0xff, 0x53, 0x87, 0xf7, 0xc6, 0xdd, 0x1c, 0x10, 0xfe, 0x9a, 0x06, 0x04, 0xfd, 0xc1, 0x81,
	0xb2, 0x69, 0x24, 0xd4, 0x29, 0x08, 0x6f, 0xca, 0x2f, 0x42, 0xbb, 0x7b, 0x65, 0x7d, 0x73, 0x16,
	0xf7, 0xfd, 0xaf, 0xfe, 0xf9, 0xed, 0x37, 0x33, 0x2b, 0x6e, 0xbb, 0xfb, 0xfa, 0x59, 0x37, 0xb3,
	0xdd, 0x30, 0xc6, 0x5d, 0xf3, 0xcf, 0xf6, 0x63, 0xe7, 0x29, 0xfa, 0xad, 0x03, 0xa5, 0x17, 0x44,
	0xa2, 0x0f, 0xaf, 0x72, 0x5d, 0x59, 0x30, 0xeb, 0x57, 0x53, 0xb6, 0x91, 0xb8, 0x3a, 0x92, 0x65,
	0xf7, 0x5e, 0x51, 0x24, 0x3d, 0x22, 0x55, 0x18, 0x67, 0x50, 0x36, 0xac, 0xab, 0xf0, 0x62, 0xa6,
	0xfc, 0x07, 0xb4, 0xef, 0x5e, 0xf8, 0x5f, 0xdd, 0x89, 0x53, 0x39, 0x98, 0x7e, 0x7e, 0xf3, 0x1f,
	0x6b, 0x1d, 0x1b, 0xd2, 0x5c, 0xe8, 0x78, 0x0a, 0x9f, 0xfe, 0xdf, 0x1c, 0x9b, 0x9f, 0x75, 0xe5,
	0xf8, 0x6b, 0x07, 0x66, 0xd5, 0xf8, 0x41, 0xeb, 0xd7, 0x21, 0xcb, 0xed, 0x8d, 0x2b, 0x6a, 0xdb,
	0xbb, 0x7f, 0xa4, 0x83, 0xb9, 0xef, 0xb6, 0x8a, 0x82, 0x89, 0xa8, 0xd0, 0x97, 0xff, 0x1b, 0x68,
	0xe4, 0x29, 0x2f, 0xfa, 0x60, 0x72, 0x0a, 0xf2, 0x9c, 0x78, 0xe2, 0x0d, 0xac, 0x6b, 0xa7, 0x1f,
	0xb8, 0x0f, 0x8b, 0x9c, 0x9a, 0x76, 0xcd, 0x65, 0xe0, 0xf7, 0x0e, 0x34, 0xf2, 0xa3, 0xab, 0xd0,
	0x7d, 0x01, 0x0b, 0x6e, 0x3f, 0xbe, 0x54, 0xcf, 0x5e, 0xc2, 0x86, 0x8e, 0xe7, 0xb1, 0xeb, 0x16,
	0xc5, 0xa3, 0x67, 0xe1, 0x86, 0x9a, 0x8e, 0x59, 0x2d, 0xfe, 0xd9, 0x81, 0x3b, 0x45, 0x43, 0xb1,
	0xb0, 0x42, 0xa6, 0x30, 0xe2, 0xc2, 0x9e, 0x9d, 0x36, 0x6d, 0xdd, 0x1f, 0xe8, 0x40, 0x1f, 0xb8,
	0x8b, 0xf9, 0x40, 0xbb, 0x38, 0xa7, 0xaa, 0xe2, 0xfb, 0xc6, 0x81, 0xc5, 0x89, 0x94, 0x16, 0x7d,
	0x74, 0xe9, 0xa0, 0xb8, 0x48, 0x80, 0x27, 0x66, 0xf2, 0x89, 0x0e, 0xe8, 0x91, 0xfb, 0x60, 0x2c,
	0x20, 0x33, 0x3d, 0xba, 0xc7, 0x9c, 0xc5, 0x1b, 0x9a, 0xeb, 0xaa, 0xa8, 0x38, 0xcc, 0x8f, 0xbb,
	0x41, 0x6b, 0x97, 0x46, 0x72, 0x99, 0xfb, 0x07, 0xda, 0x7d, 0xcb, 0x7d, 0xb7, 0xc0, 0xbd, 0xf2,
	0xf9, 0x95, 0x03, 0xf7, 0x26, 0xcc, 0x74, 0xf4, 0xec, 0x3a, 0xf3, 0xdf, 0x84, 0xb1, 0x79, 0xfd,
	0x27, 0xc3, 0x7d, 0xe7, 0xa8, 0xac, 0x83, 0xfe, 0xe8, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x6d,
	0x78, 0x7c, 0x17, 0xf6, 0x16, 0x00, 0x00,
}
