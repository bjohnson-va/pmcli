// Code generated by protoc-gen-go. DO NOT EDIT.
// source: billing/v1/payment_card.proto

package billing_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// the card type, ex. Visa, Mastercard, AMEX
type PaymentCard_CARD_TYPE int32

const (
	PaymentCard_UNKNOWN     PaymentCard_CARD_TYPE = 0
	PaymentCard_VISA        PaymentCard_CARD_TYPE = 1
	PaymentCard_MASTERCARD  PaymentCard_CARD_TYPE = 2
	PaymentCard_AMEX        PaymentCard_CARD_TYPE = 3
	PaymentCard_DISCOVER    PaymentCard_CARD_TYPE = 4
	PaymentCard_JCB         PaymentCard_CARD_TYPE = 5
	PaymentCard_DINERS_CLUB PaymentCard_CARD_TYPE = 6
)

var PaymentCard_CARD_TYPE_name = map[int32]string{
	0: "UNKNOWN",
	1: "VISA",
	2: "MASTERCARD",
	3: "AMEX",
	4: "DISCOVER",
	5: "JCB",
	6: "DINERS_CLUB",
}
var PaymentCard_CARD_TYPE_value = map[string]int32{
	"UNKNOWN":     0,
	"VISA":        1,
	"MASTERCARD":  2,
	"AMEX":        3,
	"DISCOVER":    4,
	"JCB":         5,
	"DINERS_CLUB": 6,
}

func (x PaymentCard_CARD_TYPE) String() string {
	return proto.EnumName(PaymentCard_CARD_TYPE_name, int32(x))
}
func (PaymentCard_CARD_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{0, 0} }

type PaymentCard struct {
	// last 4 digits of the credit card
	LastFourDigits string                `protobuf:"bytes,1,opt,name=last_four_digits,json=lastFourDigits" json:"last_four_digits,omitempty"`
	CardType       PaymentCard_CARD_TYPE `protobuf:"varint,3,opt,name=card_type,json=cardType,enum=billing.v1.PaymentCard_CARD_TYPE" json:"card_type,omitempty"`
	// the billing address of the card
	Address string `protobuf:"bytes,4,opt,name=address" json:"address,omitempty"`
	// city of the billing address of the card
	City string `protobuf:"bytes,5,opt,name=city" json:"city,omitempty"`
	// state of the billing address of the card
	State string `protobuf:"bytes,6,opt,name=state" json:"state,omitempty"`
	// country of the billing address of the card
	Country string `protobuf:"bytes,7,opt,name=country" json:"country,omitempty"`
	// zip/postal code of the billing address of the card
	ZipCode string `protobuf:"bytes,8,opt,name=zip_code,json=zipCode" json:"zip_code,omitempty"`
	// card_id that stripe returns when creating a card
	CardId string `protobuf:"bytes,9,opt,name=card_id,json=cardId" json:"card_id,omitempty"`
	// name of the cardholder
	CardholderName string `protobuf:"bytes,10,opt,name=cardholder_name,json=cardholderName" json:"cardholder_name,omitempty"`
	// The expiry month of the credit card
	ExpiryMonth int32 `protobuf:"varint,11,opt,name=expiry_month,json=expiryMonth" json:"expiry_month,omitempty"`
	// The expiry year of the credit card
	ExpiryYear int32 `protobuf:"varint,12,opt,name=expiry_year,json=expiryYear" json:"expiry_year,omitempty"`
}

func (m *PaymentCard) Reset()                    { *m = PaymentCard{} }
func (m *PaymentCard) String() string            { return proto.CompactTextString(m) }
func (*PaymentCard) ProtoMessage()               {}
func (*PaymentCard) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *PaymentCard) GetLastFourDigits() string {
	if m != nil {
		return m.LastFourDigits
	}
	return ""
}

func (m *PaymentCard) GetCardType() PaymentCard_CARD_TYPE {
	if m != nil {
		return m.CardType
	}
	return PaymentCard_UNKNOWN
}

func (m *PaymentCard) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *PaymentCard) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *PaymentCard) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *PaymentCard) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *PaymentCard) GetZipCode() string {
	if m != nil {
		return m.ZipCode
	}
	return ""
}

func (m *PaymentCard) GetCardId() string {
	if m != nil {
		return m.CardId
	}
	return ""
}

func (m *PaymentCard) GetCardholderName() string {
	if m != nil {
		return m.CardholderName
	}
	return ""
}

func (m *PaymentCard) GetExpiryMonth() int32 {
	if m != nil {
		return m.ExpiryMonth
	}
	return 0
}

func (m *PaymentCard) GetExpiryYear() int32 {
	if m != nil {
		return m.ExpiryYear
	}
	return 0
}

func init() {
	proto.RegisterType((*PaymentCard)(nil), "billing.v1.PaymentCard")
	proto.RegisterEnum("billing.v1.PaymentCard_CARD_TYPE", PaymentCard_CARD_TYPE_name, PaymentCard_CARD_TYPE_value)
}

func init() { proto.RegisterFile("billing/v1/payment_card.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 414 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x91, 0x5f, 0x6f, 0xd3, 0x30,
	0x14, 0xc5, 0x29, 0xfd, 0x93, 0xf4, 0xa6, 0xea, 0xa2, 0x2b, 0x24, 0x0c, 0x12, 0x5a, 0xb7, 0x17,
	0xfa, 0x94, 0x6a, 0xf0, 0x8e, 0xd4, 0xa5, 0x41, 0x2a, 0xd0, 0x6c, 0x4a, 0xbb, 0xc1, 0x9e, 0x2c,
	0xb7, 0xf6, 0x3a, 0x4b, 0x49, 0x1c, 0x39, 0xee, 0x44, 0xf6, 0x59, 0xf9, 0x30, 0xc8, 0x4e, 0x61,
	0x7b, 0xbb, 0xe7, 0x77, 0x6e, 0xce, 0x89, 0x6d, 0xf8, 0xb0, 0x95, 0x79, 0x2e, 0xcb, 0xfd, 0xec,
	0xf1, 0x62, 0x56, 0xb1, 0xa6, 0x10, 0xa5, 0xa1, 0x3b, 0xa6, 0x79, 0x54, 0x69, 0x65, 0x14, 0xc2,
	0xd1, 0x8e, 0x1e, 0x2f, 0xde, 0x9f, 0xee, 0x95, 0xda, 0xe7, 0x62, 0xe6, 0x9c, 0xed, 0xe1, 0x7e,
	0x66, 0x64, 0x21, 0x6a, 0xc3, 0x8a, 0xaa, 0x5d, 0x3e, 0xff, 0xd3, 0x85, 0xe0, 0xba, 0xcd, 0x88,
	0x99, 0xe6, 0x38, 0x85, 0x30, 0x67, 0xb5, 0xa1, 0xf7, 0xea, 0xa0, 0x29, 0x97, 0x7b, 0x69, 0x6a,
	0xd2, 0x99, 0x74, 0xa6, 0xc3, 0x6c, 0x6c, 0xf9, 0x57, 0x75, 0xd0, 0x0b, 0x47, 0xf1, 0x0b, 0x0c,
	0x6d, 0x29, 0x35, 0x4d, 0x25, 0x48, 0x77, 0xd2, 0x99, 0x8e, 0x3f, 0x9d, 0x45, 0xcf, 0xd5, 0xd1,
	0x8b, 0xd4, 0x28, 0x9e, 0x67, 0x0b, 0xba, 0xb9, 0xbb, 0x4e, 0x32, 0xdf, 0x7e, 0xb3, 0x69, 0x2a,
	0x81, 0x04, 0x3c, 0xc6, 0xb9, 0x16, 0x75, 0x4d, 0x7a, 0xae, 0xe0, 0x9f, 0x44, 0x84, 0xde, 0x4e,
	0x9a, 0x86, 0xf4, 0x1d, 0x76, 0x33, 0xbe, 0x81, 0x7e, 0x6d, 0x98, 0x11, 0x64, 0xe0, 0x60, 0x2b,
	0x6c, 0xc6, 0x4e, 0x1d, 0x4a, 0xa3, 0x1b, 0xe2, 0xb5, 0x19, 0x47, 0x89, 0xef, 0xc0, 0x7f, 0x92,
	0x15, 0xdd, 0x29, 0x2e, 0x88, 0xdf, 0x5a, 0x4f, 0xb2, 0x8a, 0x15, 0x17, 0xf8, 0x16, 0x3c, 0xf7,
	0xe3, 0x92, 0x93, 0xa1, 0x73, 0x06, 0x56, 0x2e, 0x39, 0x7e, 0x84, 0x13, 0x3b, 0x3d, 0xa8, 0x9c,
	0x0b, 0x4d, 0x4b, 0x56, 0x08, 0x02, 0xed, 0xd1, 0x9f, 0x71, 0xca, 0x0a, 0x81, 0x67, 0x30, 0x12,
	0xbf, 0x2b, 0xa9, 0x1b, 0x5a, 0xa8, 0xd2, 0x3c, 0x90, 0x60, 0xd2, 0x99, 0xf6, 0xb3, 0xa0, 0x65,
	0x2b, 0x8b, 0xf0, 0x14, 0x8e, 0x92, 0x36, 0x82, 0x69, 0x32, 0x72, 0x1b, 0xd0, 0xa2, 0x3b, 0xc1,
	0xf4, 0x39, 0x87, 0xe1, 0xff, 0x5b, 0xc1, 0x00, 0xbc, 0x9b, 0xf4, 0x7b, 0x7a, 0xf5, 0x33, 0x0d,
	0x5f, 0xa1, 0x0f, 0xbd, 0xdb, 0xe5, 0x7a, 0x1e, 0x76, 0x70, 0x0c, 0xb0, 0x9a, 0xaf, 0x37, 0x49,
	0x66, 0x37, 0xc3, 0xd7, 0xd6, 0x99, 0xaf, 0x92, 0x5f, 0x61, 0x17, 0x47, 0xe0, 0x2f, 0x96, 0xeb,
	0xf8, 0xea, 0x36, 0xc9, 0xc2, 0x1e, 0x7a, 0xd0, 0xfd, 0x16, 0x5f, 0x86, 0x7d, 0x3c, 0x81, 0x60,
	0xb1, 0x4c, 0x93, 0x6c, 0x4d, 0xe3, 0x1f, 0x37, 0x97, 0xe1, 0x60, 0x3b, 0x70, 0xaf, 0xfc, 0xf9,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x55, 0x31, 0x22, 0xaa, 0x33, 0x02, 0x00, 0x00,
}
