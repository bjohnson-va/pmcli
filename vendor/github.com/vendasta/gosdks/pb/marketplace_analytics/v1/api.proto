syntax = "proto3";

package marketplaceanalytics.v1;

import "marketplace_analytics/v1/engagement.proto";

// The directions that a result set can be sorted in.
enum SortDirection {
  DESCENDING = 0;
  ASCENDING = 1;
}

// The field to sort a result set on.
enum SortField {
  TOTAL_ACTIVATIONS = 0;
  PARTNER_NAME = 1;
  ENABLED_ON = 2;
  SELLING = 3;
  TOTAL_STORE_VIEWS = 4;
  TOTAL_STORE_CALL_TO_ACTION_EVENTS = 5;
  TOTAL_DEACTIVATIONS = 6;
  TOTAL_PARTNER_VIEWS = 7;
}

// Options for controlling the order of query results
message SortOptions {
  // A direction to sort results in
  SortDirection direction = 1;
  // Field to sort on
  SortField field = 2;
}

message GetPartnerEngagementRequest {
  // the app id to get engagement for
  string app_id = 1;
  // the partner id to get engagement for
  string partner_id = 2;
  // the date to get engagement for
}

message GetPartnerEngagementResponse {
  PartnerEngagement partner_engagement = 1;
}

message ListPartnerEngagementRequest {
    // the app id to get engagement for
    string app_id = 1;
    // A cursor to be provided when fetching additional pages of results beyond the first
    string cursor = 2;
    // Size of the page to return
    int64 page_size = 3;
    // The options you can sort a table on
    SortOptions sort_options = 4;
}

message ListPartnerEngagementResponse {
 repeated PartnerEngagement partner_engagement = 1;
}

service PartnerEngagementService {
  // Get all of the partner engagement for a partner and app
  rpc GetPartnerEngagement(GetPartnerEngagementRequest) returns (GetPartnerEngagementResponse) {}

  // List all of the partner engagements for an app
  rpc ListPartnerEngagement(ListPartnerEngagementRequest) returns (ListPartnerEngagementResponse) {}
}
