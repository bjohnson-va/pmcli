// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vstatic/v1/api.proto

/*
Package vstatic_v1 is a generated protocol buffer package.

It is generated from these files:
	vstatic/v1/api.proto

It has these top-level messages:
	Application
	CreateApplicationRequest
	PagedResponseMetadata
	PagedRequestOptions
	ListApplicationsResponse
	ListApplicationsRequest
	Artifacts
	CreateDeploymentRequest
	CreateDeploymentResponse
	ListDeploymentsRequest
	GetDeploymentsResponse
	GetDeploymentsRequest
	Strategy
	CreateDeliveryStrategyRequest
	GithubCommitUser
	GitCommitDetails
	Deployment
	ListDeploymentsResponse
	CreateDeliveryStrategyResponse
	UpdateDeliveryStrategyRequest
	ListDeliveryStrategiesRequest
	DeliveryStrategy
	ListDeliveryStrategiesResponse
	DeleteDeliveryStrategyRequest
	CreateStaticResourceRequest
	GetIndexRequest
	GetIndexResponse
	GetAssetURLRequest
	GetAssetURLResponse
*/
package vstatic_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Environment represents a vStatic environment that segments an application into test, demo, and production deliveries.
type Environment int32

const (
	Environment_Test Environment = 0
	Environment_Demo Environment = 1
	Environment_Prod Environment = 2
	Environment_All  Environment = 3
)

var Environment_name = map[int32]string{
	0: "Test",
	1: "Demo",
	2: "Prod",
	3: "All",
}
var Environment_value = map[string]int32{
	"Test": 0,
	"Demo": 1,
	"Prod": 2,
	"All":  3,
}

func (x Environment) String() string {
	return proto.EnumName(Environment_name, int32(x))
}
func (Environment) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Application represents a piece of software that can have only a single delivered artifact at any given time.
// For example: the Partner Center has a single vStatic application called `partner-center-client`
type Application struct {
	// unique identifier for the application (example: partner-center-client)
	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// human readable name for the application (example: Partner Center Client)
	AppName string `protobuf:"bytes,2,opt,name=app_name,json=appName" json:"app_name,omitempty"`
	// The Github Repository URL (example: https://github.com/vendasta/IAM)
	GithubRepoUrl string `protobuf:"bytes,3,opt,name=github_repo_url,json=githubRepoUrl" json:"github_repo_url,omitempty"`
	// A entry url to the application which contains the string <depolyment>.
	// This will be used to create a deployment view link in mission control,
	// and <deployment> will be replaced with the specific deployment id.
	EntryUrlTemplate string `protobuf:"bytes,4,opt,name=entry_url_template,json=entryUrlTemplate" json:"entry_url_template,omitempty"`
}

func (m *Application) Reset()                    { *m = Application{} }
func (m *Application) String() string            { return proto.CompactTextString(m) }
func (*Application) ProtoMessage()               {}
func (*Application) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Application) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *Application) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *Application) GetGithubRepoUrl() string {
	if m != nil {
		return m.GithubRepoUrl
	}
	return ""
}

func (m *Application) GetEntryUrlTemplate() string {
	if m != nil {
		return m.EntryUrlTemplate
	}
	return ""
}

// Request message for vStatic.CreateApplication
type CreateApplicationRequest struct {
	Application *Application `protobuf:"bytes,1,opt,name=application" json:"application,omitempty"`
}

func (m *CreateApplicationRequest) Reset()                    { *m = CreateApplicationRequest{} }
func (m *CreateApplicationRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateApplicationRequest) ProtoMessage()               {}
func (*CreateApplicationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateApplicationRequest) GetApplication() *Application {
	if m != nil {
		return m.Application
	}
	return nil
}

// Metadata for paging through a list/search endpoint.
type PagedResponseMetadata struct {
	// A cursor that can be provided to retrieve the next page of results
	NextCursor string `protobuf:"bytes,1,opt,name=next_cursor,json=nextCursor" json:"next_cursor,omitempty"`
	// Whether or not more results exist
	HasMore bool `protobuf:"varint,2,opt,name=has_more,json=hasMore" json:"has_more,omitempty"`
}

func (m *PagedResponseMetadata) Reset()                    { *m = PagedResponseMetadata{} }
func (m *PagedResponseMetadata) String() string            { return proto.CompactTextString(m) }
func (*PagedResponseMetadata) ProtoMessage()               {}
func (*PagedResponseMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PagedResponseMetadata) GetNextCursor() string {
	if m != nil {
		return m.NextCursor
	}
	return ""
}

func (m *PagedResponseMetadata) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

// Metadata for paging through a list/search endpoint.
type PagedRequestOptions struct {
	// cursor can be passed to retrieve the next page of results keyed by the cursor
	Cursor string `protobuf:"bytes,1,opt,name=cursor" json:"cursor,omitempty"`
	// page_size specifies the number of items to return in the next page
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *PagedRequestOptions) Reset()                    { *m = PagedRequestOptions{} }
func (m *PagedRequestOptions) String() string            { return proto.CompactTextString(m) }
func (*PagedRequestOptions) ProtoMessage()               {}
func (*PagedRequestOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PagedRequestOptions) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *PagedRequestOptions) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// Response message for vStatic.ListApplications
type ListApplicationsResponse struct {
	Applications   []*Application         `protobuf:"bytes,1,rep,name=applications" json:"applications,omitempty"`
	PagingMetadata *PagedResponseMetadata `protobuf:"bytes,2,opt,name=paging_metadata,json=pagingMetadata" json:"paging_metadata,omitempty"`
}

func (m *ListApplicationsResponse) Reset()                    { *m = ListApplicationsResponse{} }
func (m *ListApplicationsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListApplicationsResponse) ProtoMessage()               {}
func (*ListApplicationsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListApplicationsResponse) GetApplications() []*Application {
	if m != nil {
		return m.Applications
	}
	return nil
}

func (m *ListApplicationsResponse) GetPagingMetadata() *PagedResponseMetadata {
	if m != nil {
		return m.PagingMetadata
	}
	return nil
}

// Request message for vStatic.ListApplicationsRequest
type ListApplicationsRequest struct {
	PagingOptions *PagedRequestOptions `protobuf:"bytes,1,opt,name=paging_options,json=pagingOptions" json:"paging_options,omitempty"`
}

func (m *ListApplicationsRequest) Reset()                    { *m = ListApplicationsRequest{} }
func (m *ListApplicationsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListApplicationsRequest) ProtoMessage()               {}
func (*ListApplicationsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ListApplicationsRequest) GetPagingOptions() *PagedRequestOptions {
	if m != nil {
		return m.PagingOptions
	}
	return nil
}

// Code artifacts used for an application deployment
type Artifacts struct {
	// Types that are valid to be assigned to Location:
	//	*Artifacts_GcsBucket
	Location isArtifacts_Location `protobuf_oneof:"location"`
}

func (m *Artifacts) Reset()                    { *m = Artifacts{} }
func (m *Artifacts) String() string            { return proto.CompactTextString(m) }
func (*Artifacts) ProtoMessage()               {}
func (*Artifacts) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type isArtifacts_Location interface {
	isArtifacts_Location()
}

type Artifacts_GcsBucket struct {
	GcsBucket string `protobuf:"bytes,1,opt,name=gcs_bucket,json=gcsBucket,oneof"`
}

func (*Artifacts_GcsBucket) isArtifacts_Location() {}

func (m *Artifacts) GetLocation() isArtifacts_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Artifacts) GetGcsBucket() string {
	if x, ok := m.GetLocation().(*Artifacts_GcsBucket); ok {
		return x.GcsBucket
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Artifacts) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Artifacts_OneofMarshaler, _Artifacts_OneofUnmarshaler, _Artifacts_OneofSizer, []interface{}{
		(*Artifacts_GcsBucket)(nil),
	}
}

func _Artifacts_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Artifacts)
	// location
	switch x := m.Location.(type) {
	case *Artifacts_GcsBucket:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.GcsBucket)
	case nil:
	default:
		return fmt.Errorf("Artifacts.Location has unexpected type %T", x)
	}
	return nil
}

func _Artifacts_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Artifacts)
	switch tag {
	case 1: // location.gcs_bucket
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Location = &Artifacts_GcsBucket{x}
		return true, err
	default:
		return false, nil
	}
}

func _Artifacts_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Artifacts)
	// location
	switch x := m.Location.(type) {
	case *Artifacts_GcsBucket:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.GcsBucket)))
		n += len(x.GcsBucket)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Request message for vStatic.CreateDeployment
type CreateDeploymentRequest struct {
	Deployment *Deployment `protobuf:"bytes,1,opt,name=deployment" json:"deployment,omitempty"`
}

func (m *CreateDeploymentRequest) Reset()                    { *m = CreateDeploymentRequest{} }
func (m *CreateDeploymentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateDeploymentRequest) ProtoMessage()               {}
func (*CreateDeploymentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CreateDeploymentRequest) GetDeployment() *Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

// Response message for vStatic.CreateDeployment
type CreateDeploymentResponse struct {
	// The unique identifier for the created deployment
	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId" json:"deployment_id,omitempty"`
}

func (m *CreateDeploymentResponse) Reset()                    { *m = CreateDeploymentResponse{} }
func (m *CreateDeploymentResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateDeploymentResponse) ProtoMessage()               {}
func (*CreateDeploymentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CreateDeploymentResponse) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

// Request message for vStatic.ListDeployments
type ListDeploymentsRequest struct {
	// The unique identifier of the application
	ApplicationId string `protobuf:"bytes,1,opt,name=application_id,json=applicationId" json:"application_id,omitempty"`
	// The environment to scope the deployments to
	Environment   Environment          `protobuf:"varint,2,opt,name=environment,enum=vstatic.v1.Environment" json:"environment,omitempty"`
	PagingOptions *PagedRequestOptions `protobuf:"bytes,3,opt,name=paging_options,json=pagingOptions" json:"paging_options,omitempty"`
}

func (m *ListDeploymentsRequest) Reset()                    { *m = ListDeploymentsRequest{} }
func (m *ListDeploymentsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListDeploymentsRequest) ProtoMessage()               {}
func (*ListDeploymentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ListDeploymentsRequest) GetApplicationId() string {
	if m != nil {
		return m.ApplicationId
	}
	return ""
}

func (m *ListDeploymentsRequest) GetEnvironment() Environment {
	if m != nil {
		return m.Environment
	}
	return Environment_Test
}

func (m *ListDeploymentsRequest) GetPagingOptions() *PagedRequestOptions {
	if m != nil {
		return m.PagingOptions
	}
	return nil
}

type GetDeploymentsResponse struct {
	// The list of requested Deployment
	Deployments []*GetDeploymentsResponse_DeploymentContainer `protobuf:"bytes,1,rep,name=deployments" json:"deployments,omitempty"`
}

func (m *GetDeploymentsResponse) Reset()                    { *m = GetDeploymentsResponse{} }
func (m *GetDeploymentsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDeploymentsResponse) ProtoMessage()               {}
func (*GetDeploymentsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *GetDeploymentsResponse) GetDeployments() []*GetDeploymentsResponse_DeploymentContainer {
	if m != nil {
		return m.Deployments
	}
	return nil
}

type GetDeploymentsResponse_DeploymentContainer struct {
	Deployment *Deployment `protobuf:"bytes,1,opt,name=deployment" json:"deployment,omitempty"`
}

func (m *GetDeploymentsResponse_DeploymentContainer) Reset() {
	*m = GetDeploymentsResponse_DeploymentContainer{}
}
func (m *GetDeploymentsResponse_DeploymentContainer) String() string {
	return proto.CompactTextString(m)
}
func (*GetDeploymentsResponse_DeploymentContainer) ProtoMessage() {}
func (*GetDeploymentsResponse_DeploymentContainer) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{10, 0}
}

func (m *GetDeploymentsResponse_DeploymentContainer) GetDeployment() *Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

type GetDeploymentsRequest struct {
	// The unique identifier of the application
	ApplicationId string `protobuf:"bytes,1,opt,name=application_id,json=applicationId" json:"application_id,omitempty"`
	// The environment to scope the deployments to
	Environment Environment `protobuf:"varint,2,opt,name=environment,enum=vstatic.v1.Environment" json:"environment,omitempty"`
	// The IDs of the deployments to get
	DeploymentIds []string `protobuf:"bytes,3,rep,name=deployment_ids,json=deploymentIds" json:"deployment_ids,omitempty"`
}

func (m *GetDeploymentsRequest) Reset()                    { *m = GetDeploymentsRequest{} }
func (m *GetDeploymentsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDeploymentsRequest) ProtoMessage()               {}
func (*GetDeploymentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GetDeploymentsRequest) GetApplicationId() string {
	if m != nil {
		return m.ApplicationId
	}
	return ""
}

func (m *GetDeploymentsRequest) GetEnvironment() Environment {
	if m != nil {
		return m.Environment
	}
	return Environment_Test
}

func (m *GetDeploymentsRequest) GetDeploymentIds() []string {
	if m != nil {
		return m.DeploymentIds
	}
	return nil
}

// Strategy controls the delivery mechanism for a specific deployment to the end user.
type Strategy struct {
	// Types that are valid to be assigned to Type:
	//	*Strategy_Default_
	//	*Strategy_Iam
	//	*Strategy_Percentage_
	Type isStrategy_Type `protobuf_oneof:"type"`
}

func (m *Strategy) Reset()                    { *m = Strategy{} }
func (m *Strategy) String() string            { return proto.CompactTextString(m) }
func (*Strategy) ProtoMessage()               {}
func (*Strategy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type isStrategy_Type interface {
	isStrategy_Type()
}

type Strategy_Default_ struct {
	Default *Strategy_Default `protobuf:"bytes,2,opt,name=default,oneof"`
}
type Strategy_Iam struct {
	Iam *Strategy_IAM `protobuf:"bytes,3,opt,name=iam,oneof"`
}
type Strategy_Percentage_ struct {
	Percentage *Strategy_Percentage `protobuf:"bytes,4,opt,name=percentage,oneof"`
}

func (*Strategy_Default_) isStrategy_Type()    {}
func (*Strategy_Iam) isStrategy_Type()         {}
func (*Strategy_Percentage_) isStrategy_Type() {}

func (m *Strategy) GetType() isStrategy_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Strategy) GetDefault() *Strategy_Default {
	if x, ok := m.GetType().(*Strategy_Default_); ok {
		return x.Default
	}
	return nil
}

func (m *Strategy) GetIam() *Strategy_IAM {
	if x, ok := m.GetType().(*Strategy_Iam); ok {
		return x.Iam
	}
	return nil
}

func (m *Strategy) GetPercentage() *Strategy_Percentage {
	if x, ok := m.GetType().(*Strategy_Percentage_); ok {
		return x.Percentage
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Strategy) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Strategy_OneofMarshaler, _Strategy_OneofUnmarshaler, _Strategy_OneofSizer, []interface{}{
		(*Strategy_Default_)(nil),
		(*Strategy_Iam)(nil),
		(*Strategy_Percentage_)(nil),
	}
}

func _Strategy_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Strategy)
	// type
	switch x := m.Type.(type) {
	case *Strategy_Default_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Default); err != nil {
			return err
		}
	case *Strategy_Iam:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Iam); err != nil {
			return err
		}
	case *Strategy_Percentage_:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Percentage); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Strategy.Type has unexpected type %T", x)
	}
	return nil
}

func _Strategy_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Strategy)
	switch tag {
	case 2: // type.default
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Strategy_Default)
		err := b.DecodeMessage(msg)
		m.Type = &Strategy_Default_{msg}
		return true, err
	case 3: // type.iam
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Strategy_IAM)
		err := b.DecodeMessage(msg)
		m.Type = &Strategy_Iam{msg}
		return true, err
	case 4: // type.percentage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Strategy_Percentage)
		err := b.DecodeMessage(msg)
		m.Type = &Strategy_Percentage_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Strategy_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Strategy)
	// type
	switch x := m.Type.(type) {
	case *Strategy_Default_:
		s := proto.Size(x.Default)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Strategy_Iam:
		s := proto.Size(x.Iam)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Strategy_Percentage_:
		s := proto.Size(x.Percentage)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Default sets the default deploy strategy
type Strategy_Default struct {
}

func (m *Strategy_Default) Reset()                    { *m = Strategy_Default{} }
func (m *Strategy_Default) String() string            { return proto.CompactTextString(m) }
func (*Strategy_Default) ProtoMessage()               {}
func (*Strategy_Default) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12, 0} }

// IAM deploy strategy
type Strategy_IAM struct {
	// Attribute filter allows a version to select specific IAM users to receive this deployment.
	AttributeFilters *Strategy_IAM_Filter `protobuf:"bytes,1,opt,name=attribute_filters,json=attributeFilters" json:"attribute_filters,omitempty"`
}

func (m *Strategy_IAM) Reset()                    { *m = Strategy_IAM{} }
func (m *Strategy_IAM) String() string            { return proto.CompactTextString(m) }
func (*Strategy_IAM) ProtoMessage()               {}
func (*Strategy_IAM) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12, 1} }

func (m *Strategy_IAM) GetAttributeFilters() *Strategy_IAM_Filter {
	if m != nil {
		return m.AttributeFilters
	}
	return nil
}

type Strategy_IAM_Filter struct {
	Filters map[string]string `protobuf:"bytes,1,rep,name=filters" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Strategy_IAM_Filter) Reset()                    { *m = Strategy_IAM_Filter{} }
func (m *Strategy_IAM_Filter) String() string            { return proto.CompactTextString(m) }
func (*Strategy_IAM_Filter) ProtoMessage()               {}
func (*Strategy_IAM_Filter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12, 1, 0} }

func (m *Strategy_IAM_Filter) GetFilters() map[string]string {
	if m != nil {
		return m.Filters
	}
	return nil
}

// Allows a delivery strategy to limit the percentage of users that receive the deployment.
type Strategy_Percentage struct {
	Percentage int64 `protobuf:"varint,1,opt,name=percentage" json:"percentage,omitempty"`
}

func (m *Strategy_Percentage) Reset()                    { *m = Strategy_Percentage{} }
func (m *Strategy_Percentage) String() string            { return proto.CompactTextString(m) }
func (*Strategy_Percentage) ProtoMessage()               {}
func (*Strategy_Percentage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12, 2} }

func (m *Strategy_Percentage) GetPercentage() int64 {
	if m != nil {
		return m.Percentage
	}
	return 0
}

// Request message for vStatic.CreateDeliveryStrategy
type CreateDeliveryStrategyRequest struct {
	// The application ID
	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// The deployment ID to deliver
	DeploymentId string `protobuf:"bytes,2,opt,name=deployment_id,json=deploymentId" json:"deployment_id,omitempty"`
	// The environment to create the delivery strategy for.
	Environment Environment `protobuf:"varint,3,opt,name=environment,enum=vstatic.v1.Environment" json:"environment,omitempty"`
	// The strategy to use for the delivery
	Strategy *Strategy `protobuf:"bytes,4,opt,name=strategy" json:"strategy,omitempty"`
	// The name of the delivery (Can not be specified if the delivery is the default)
	Name string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
}

func (m *CreateDeliveryStrategyRequest) Reset()                    { *m = CreateDeliveryStrategyRequest{} }
func (m *CreateDeliveryStrategyRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateDeliveryStrategyRequest) ProtoMessage()               {}
func (*CreateDeliveryStrategyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *CreateDeliveryStrategyRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *CreateDeliveryStrategyRequest) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

func (m *CreateDeliveryStrategyRequest) GetEnvironment() Environment {
	if m != nil {
		return m.Environment
	}
	return Environment_Test
}

func (m *CreateDeliveryStrategyRequest) GetStrategy() *Strategy {
	if m != nil {
		return m.Strategy
	}
	return nil
}

func (m *CreateDeliveryStrategyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Details about the user who committed/authored a specific git commit.
type GithubCommitUser struct {
	Date  *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=date" json:"date,omitempty"`
	Name  string                      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Email string                      `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
}

func (m *GithubCommitUser) Reset()                    { *m = GithubCommitUser{} }
func (m *GithubCommitUser) String() string            { return proto.CompactTextString(m) }
func (*GithubCommitUser) ProtoMessage()               {}
func (*GithubCommitUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *GithubCommitUser) GetDate() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *GithubCommitUser) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GithubCommitUser) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

// The details of the git commit (if any)
type GitCommitDetails struct {
	// The user who created the content
	Author *GithubCommitUser `protobuf:"bytes,1,opt,name=author" json:"author,omitempty"`
	// The user who committed the content
	Committer *GithubCommitUser `protobuf:"bytes,2,opt,name=committer" json:"committer,omitempty"`
	// the content of the git commit message
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GitCommitDetails) Reset()                    { *m = GitCommitDetails{} }
func (m *GitCommitDetails) String() string            { return proto.CompactTextString(m) }
func (*GitCommitDetails) ProtoMessage()               {}
func (*GitCommitDetails) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *GitCommitDetails) GetAuthor() *GithubCommitUser {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *GitCommitDetails) GetCommitter() *GithubCommitUser {
	if m != nil {
		return m.Committer
	}
	return nil
}

func (m *GitCommitDetails) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// Deployment represents an immutable artifact that can be delivered to the end user.
type Deployment struct {
	// The application ID
	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// (Ouput Only) The ID of the deployment
	DeploymentId string `protobuf:"bytes,2,opt,name=deployment_id,json=deploymentId" json:"deployment_id,omitempty"`
	// if applicable, the git hash of this deployment
	GitHash string `protobuf:"bytes,3,opt,name=git_hash,json=gitHash" json:"git_hash,omitempty"`
	// The arficacts to be served for this application.
	Artifacts *Artifacts `protobuf:"bytes,4,opt,name=artifacts" json:"artifacts,omitempty"`
	// Environment to scope this deployment to.
	Environment Environment `protobuf:"varint,5,opt,name=environment,enum=vstatic.v1.Environment" json:"environment,omitempty"`
	// Output only - Time the deployment was created
	Created *google_protobuf1.Timestamp `protobuf:"bytes,6,opt,name=created" json:"created,omitempty"`
	// Output only - Time the deployment was last updated
	Updated *google_protobuf1.Timestamp `protobuf:"bytes,7,opt,name=updated" json:"updated,omitempty"`
	// Optional - Google Container Builder ID that built and published this deployment
	ContainerBuilderId string `protobuf:"bytes,8,opt,name=container_builder_id,json=containerBuilderId" json:"container_builder_id,omitempty"`
	// Output only - Details about the provided git_hash
	GitCommitDetails *GitCommitDetails `protobuf:"bytes,9,opt,name=git_commit_details,json=gitCommitDetails" json:"git_commit_details,omitempty"`
	// Output only - The creator of the deployment
	Author string `protobuf:"bytes,10,opt,name=author" json:"author,omitempty"`
	// If deploying a custom artifact, a name is required.
	Name string `protobuf:"bytes,11,opt,name=name" json:"name,omitempty"`
	// if applicable, the git branch name of this deployment
	BranchName string `protobuf:"bytes,12,opt,name=branch_name,json=branchName" json:"branch_name,omitempty"`
}

func (m *Deployment) Reset()                    { *m = Deployment{} }
func (m *Deployment) String() string            { return proto.CompactTextString(m) }
func (*Deployment) ProtoMessage()               {}
func (*Deployment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *Deployment) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *Deployment) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

func (m *Deployment) GetGitHash() string {
	if m != nil {
		return m.GitHash
	}
	return ""
}

func (m *Deployment) GetArtifacts() *Artifacts {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func (m *Deployment) GetEnvironment() Environment {
	if m != nil {
		return m.Environment
	}
	return Environment_Test
}

func (m *Deployment) GetCreated() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Deployment) GetUpdated() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *Deployment) GetContainerBuilderId() string {
	if m != nil {
		return m.ContainerBuilderId
	}
	return ""
}

func (m *Deployment) GetGitCommitDetails() *GitCommitDetails {
	if m != nil {
		return m.GitCommitDetails
	}
	return nil
}

func (m *Deployment) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Deployment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Deployment) GetBranchName() string {
	if m != nil {
		return m.BranchName
	}
	return ""
}

// Response message for vStatic.ListDeployments
type ListDeploymentsResponse struct {
	Deployments    []*Deployment          `protobuf:"bytes,1,rep,name=deployments" json:"deployments,omitempty"`
	PagingMetadata *PagedResponseMetadata `protobuf:"bytes,2,opt,name=paging_metadata,json=pagingMetadata" json:"paging_metadata,omitempty"`
}

func (m *ListDeploymentsResponse) Reset()                    { *m = ListDeploymentsResponse{} }
func (m *ListDeploymentsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListDeploymentsResponse) ProtoMessage()               {}
func (*ListDeploymentsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ListDeploymentsResponse) GetDeployments() []*Deployment {
	if m != nil {
		return m.Deployments
	}
	return nil
}

func (m *ListDeploymentsResponse) GetPagingMetadata() *PagedResponseMetadata {
	if m != nil {
		return m.PagingMetadata
	}
	return nil
}

// Response message for vStatic.CreateDeliveryStrategy
type CreateDeliveryStrategyResponse struct {
	// The ID of the delivery strategy
	DeliveryStrategyId string `protobuf:"bytes,1,opt,name=delivery_strategy_id,json=deliveryStrategyId" json:"delivery_strategy_id,omitempty"`
}

func (m *CreateDeliveryStrategyResponse) Reset()                    { *m = CreateDeliveryStrategyResponse{} }
func (m *CreateDeliveryStrategyResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateDeliveryStrategyResponse) ProtoMessage()               {}
func (*CreateDeliveryStrategyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *CreateDeliveryStrategyResponse) GetDeliveryStrategyId() string {
	if m != nil {
		return m.DeliveryStrategyId
	}
	return ""
}

// Request message for vStatic.UpdateDeliveryStrategyRequest
type UpdateDeliveryStrategyRequest struct {
	// The application ID
	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// The delivery strategy being updated
	DeliveryStrategyId string `protobuf:"bytes,2,opt,name=delivery_strategy_id,json=deliveryStrategyId" json:"delivery_strategy_id,omitempty"`
	// Updates the delivery strategy
	DeploymentId string `protobuf:"bytes,3,opt,name=deployment_id,json=deploymentId" json:"deployment_id,omitempty"`
	// Environment to scope this delivery strategy to.
	Environment Environment `protobuf:"varint,4,opt,name=environment,enum=vstatic.v1.Environment" json:"environment,omitempty"`
}

func (m *UpdateDeliveryStrategyRequest) Reset()                    { *m = UpdateDeliveryStrategyRequest{} }
func (m *UpdateDeliveryStrategyRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateDeliveryStrategyRequest) ProtoMessage()               {}
func (*UpdateDeliveryStrategyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *UpdateDeliveryStrategyRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *UpdateDeliveryStrategyRequest) GetDeliveryStrategyId() string {
	if m != nil {
		return m.DeliveryStrategyId
	}
	return ""
}

func (m *UpdateDeliveryStrategyRequest) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

func (m *UpdateDeliveryStrategyRequest) GetEnvironment() Environment {
	if m != nil {
		return m.Environment
	}
	return Environment_Test
}

// Request message for vStatic.ListDeliveryStrategies
type ListDeliveryStrategiesRequest struct {
	// The application ID
	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// The environment to get
	Environment Environment `protobuf:"varint,2,opt,name=environment,enum=vstatic.v1.Environment" json:"environment,omitempty"`
}

func (m *ListDeliveryStrategiesRequest) Reset()                    { *m = ListDeliveryStrategiesRequest{} }
func (m *ListDeliveryStrategiesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListDeliveryStrategiesRequest) ProtoMessage()               {}
func (*ListDeliveryStrategiesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ListDeliveryStrategiesRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *ListDeliveryStrategiesRequest) GetEnvironment() Environment {
	if m != nil {
		return m.Environment
	}
	return Environment_Test
}

// The delivery strategy is an active delivery strategy of a deployment for an application
type DeliveryStrategy struct {
	// The unique id for the delivery strategy
	DeliveryStrategyId string `protobuf:"bytes,1,opt,name=delivery_strategy_id,json=deliveryStrategyId" json:"delivery_strategy_id,omitempty"`
	// the strategy being used
	Strategy *Strategy `protobuf:"bytes,2,opt,name=strategy" json:"strategy,omitempty"`
	// the deployment being used for this delivery
	DeploymentId string `protobuf:"bytes,3,opt,name=deployment_id,json=deploymentId" json:"deployment_id,omitempty"`
	// The environment this delivery strategy is active for.
	Environment Environment `protobuf:"varint,4,opt,name=environment,enum=vstatic.v1.Environment" json:"environment,omitempty"`
	// The date the delivery strategy was created
	Created *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	// The date the delivery strategy was last updated
	Updated *google_protobuf1.Timestamp `protobuf:"bytes,6,opt,name=updated" json:"updated,omitempty"`
	// The history of deliveries for this strategy, limited to the last 15
	DeliveryHistory []*DeliveryStrategy_Delivery `protobuf:"bytes,7,rep,name=delivery_history,json=deliveryHistory" json:"delivery_history,omitempty"`
}

func (m *DeliveryStrategy) Reset()                    { *m = DeliveryStrategy{} }
func (m *DeliveryStrategy) String() string            { return proto.CompactTextString(m) }
func (*DeliveryStrategy) ProtoMessage()               {}
func (*DeliveryStrategy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *DeliveryStrategy) GetDeliveryStrategyId() string {
	if m != nil {
		return m.DeliveryStrategyId
	}
	return ""
}

func (m *DeliveryStrategy) GetStrategy() *Strategy {
	if m != nil {
		return m.Strategy
	}
	return nil
}

func (m *DeliveryStrategy) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

func (m *DeliveryStrategy) GetEnvironment() Environment {
	if m != nil {
		return m.Environment
	}
	return Environment_Test
}

func (m *DeliveryStrategy) GetCreated() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *DeliveryStrategy) GetUpdated() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *DeliveryStrategy) GetDeliveryHistory() []*DeliveryStrategy_Delivery {
	if m != nil {
		return m.DeliveryHistory
	}
	return nil
}

type DeliveryStrategy_Delivery struct {
	// The deployment this delivery is for
	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId" json:"deployment_id,omitempty"`
	// The time this delivery occured
	DeliveryTime *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=delivery_time,json=deliveryTime" json:"delivery_time,omitempty"`
	// The email of the user who created this delivery
	UserEmail string `protobuf:"bytes,3,opt,name=user_email,json=userEmail" json:"user_email,omitempty"`
}

func (m *DeliveryStrategy_Delivery) Reset()                    { *m = DeliveryStrategy_Delivery{} }
func (m *DeliveryStrategy_Delivery) String() string            { return proto.CompactTextString(m) }
func (*DeliveryStrategy_Delivery) ProtoMessage()               {}
func (*DeliveryStrategy_Delivery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21, 0} }

func (m *DeliveryStrategy_Delivery) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

func (m *DeliveryStrategy_Delivery) GetDeliveryTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.DeliveryTime
	}
	return nil
}

func (m *DeliveryStrategy_Delivery) GetUserEmail() string {
	if m != nil {
		return m.UserEmail
	}
	return ""
}

// Response message for vStatic.ListDeliveryStrategiesResponse
type ListDeliveryStrategiesResponse struct {
	Strategies []*DeliveryStrategy `protobuf:"bytes,1,rep,name=strategies" json:"strategies,omitempty"`
}

func (m *ListDeliveryStrategiesResponse) Reset()                    { *m = ListDeliveryStrategiesResponse{} }
func (m *ListDeliveryStrategiesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListDeliveryStrategiesResponse) ProtoMessage()               {}
func (*ListDeliveryStrategiesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *ListDeliveryStrategiesResponse) GetStrategies() []*DeliveryStrategy {
	if m != nil {
		return m.Strategies
	}
	return nil
}

// Request message for vStatic.DeleteDeliveryStrategy
type DeleteDeliveryStrategyRequest struct {
	AppId      string `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	DeliveryId string `protobuf:"bytes,2,opt,name=delivery_id,json=deliveryId" json:"delivery_id,omitempty"`
	// Environment that this delivery strategy is for
	Environment Environment `protobuf:"varint,3,opt,name=environment,enum=vstatic.v1.Environment" json:"environment,omitempty"`
}

func (m *DeleteDeliveryStrategyRequest) Reset()                    { *m = DeleteDeliveryStrategyRequest{} }
func (m *DeleteDeliveryStrategyRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteDeliveryStrategyRequest) ProtoMessage()               {}
func (*DeleteDeliveryStrategyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *DeleteDeliveryStrategyRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *DeleteDeliveryStrategyRequest) GetDeliveryId() string {
	if m != nil {
		return m.DeliveryId
	}
	return ""
}

func (m *DeleteDeliveryStrategyRequest) GetEnvironment() Environment {
	if m != nil {
		return m.Environment
	}
	return Environment_Test
}

// Request message for vStatic.CreateStaticResource
type CreateStaticResourceRequest struct {
	MediarepoId string `protobuf:"bytes,1,opt,name=mediarepo_id,json=mediarepoId" json:"mediarepo_id,omitempty"`
}

func (m *CreateStaticResourceRequest) Reset()                    { *m = CreateStaticResourceRequest{} }
func (m *CreateStaticResourceRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateStaticResourceRequest) ProtoMessage()               {}
func (*CreateStaticResourceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *CreateStaticResourceRequest) GetMediarepoId() string {
	if m != nil {
		return m.MediarepoId
	}
	return ""
}

// Request message for vStatic.GetIndex
type GetIndexRequest struct {
	// Retrieves this applications index.html
	AppId       string      `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Environment Environment `protobuf:"varint,2,opt,name=environment,enum=vstatic.v1.Environment" json:"environment,omitempty"`
	// Optional: If provided, will run this request through the active delivery strategies
	IamToken string `protobuf:"bytes,3,opt,name=iam_token,json=iamToken" json:"iam_token,omitempty"`
	// Optional: Will override the delivery strategies for the application and will use this deployments artifacts, if the deployment belongs to application.
	DeploymentId string `protobuf:"bytes,4,opt,name=deployment_id,json=deploymentId" json:"deployment_id,omitempty"`
	// Optional: Defaults to en(english), if no index.html exists for provided locale the english version will be returned
	LocaleId string `protobuf:"bytes,5,opt,name=locale_id,json=localeId" json:"locale_id,omitempty"`
}

func (m *GetIndexRequest) Reset()                    { *m = GetIndexRequest{} }
func (m *GetIndexRequest) String() string            { return proto.CompactTextString(m) }
func (*GetIndexRequest) ProtoMessage()               {}
func (*GetIndexRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *GetIndexRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *GetIndexRequest) GetEnvironment() Environment {
	if m != nil {
		return m.Environment
	}
	return Environment_Test
}

func (m *GetIndexRequest) GetIamToken() string {
	if m != nil {
		return m.IamToken
	}
	return ""
}

func (m *GetIndexRequest) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

func (m *GetIndexRequest) GetLocaleId() string {
	if m != nil {
		return m.LocaleId
	}
	return ""
}

// Response message for vStatic.GetIndex
type GetIndexResponse struct {
	Html []byte `protobuf:"bytes,1,opt,name=html,proto3" json:"html,omitempty"`
	// The id of this deployment, if you supplied one in the request it will be the same.
	DeploymentId string `protobuf:"bytes,2,opt,name=deployment_id,json=deploymentId" json:"deployment_id,omitempty"`
}

func (m *GetIndexResponse) Reset()                    { *m = GetIndexResponse{} }
func (m *GetIndexResponse) String() string            { return proto.CompactTextString(m) }
func (*GetIndexResponse) ProtoMessage()               {}
func (*GetIndexResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *GetIndexResponse) GetHtml() []byte {
	if m != nil {
		return m.Html
	}
	return nil
}

func (m *GetIndexResponse) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

// Request message for vStatic.GetAssetURL
type GetAssetURLRequest struct {
	// Retrieves this applications assets url
	AppId       string      `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Environment Environment `protobuf:"varint,2,opt,name=environment,enum=vstatic.v1.Environment" json:"environment,omitempty"`
	// The id of the deployment of the index file that has already been served to the user
	DeploymentId string `protobuf:"bytes,3,opt,name=deployment_id,json=deploymentId" json:"deployment_id,omitempty"`
	// The path to the asset (no hostname) i.e. /assets/images/logo.png
	AssetPath string `protobuf:"bytes,4,opt,name=asset_path,json=assetPath" json:"asset_path,omitempty"`
}

func (m *GetAssetURLRequest) Reset()                    { *m = GetAssetURLRequest{} }
func (m *GetAssetURLRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAssetURLRequest) ProtoMessage()               {}
func (*GetAssetURLRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *GetAssetURLRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *GetAssetURLRequest) GetEnvironment() Environment {
	if m != nil {
		return m.Environment
	}
	return Environment_Test
}

func (m *GetAssetURLRequest) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

func (m *GetAssetURLRequest) GetAssetPath() string {
	if m != nil {
		return m.AssetPath
	}
	return ""
}

// Response message for vStatic.GetAssetURL
type GetAssetURLResponse struct {
	// the combination of the hostname and asset path of where the asset is being served from
	ServingUrl string `protobuf:"bytes,1,opt,name=serving_url,json=servingUrl" json:"serving_url,omitempty"`
}

func (m *GetAssetURLResponse) Reset()                    { *m = GetAssetURLResponse{} }
func (m *GetAssetURLResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAssetURLResponse) ProtoMessage()               {}
func (*GetAssetURLResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *GetAssetURLResponse) GetServingUrl() string {
	if m != nil {
		return m.ServingUrl
	}
	return ""
}

func init() {
	proto.RegisterType((*Application)(nil), "vstatic.v1.Application")
	proto.RegisterType((*CreateApplicationRequest)(nil), "vstatic.v1.CreateApplicationRequest")
	proto.RegisterType((*PagedResponseMetadata)(nil), "vstatic.v1.PagedResponseMetadata")
	proto.RegisterType((*PagedRequestOptions)(nil), "vstatic.v1.PagedRequestOptions")
	proto.RegisterType((*ListApplicationsResponse)(nil), "vstatic.v1.ListApplicationsResponse")
	proto.RegisterType((*ListApplicationsRequest)(nil), "vstatic.v1.ListApplicationsRequest")
	proto.RegisterType((*Artifacts)(nil), "vstatic.v1.Artifacts")
	proto.RegisterType((*CreateDeploymentRequest)(nil), "vstatic.v1.CreateDeploymentRequest")
	proto.RegisterType((*CreateDeploymentResponse)(nil), "vstatic.v1.CreateDeploymentResponse")
	proto.RegisterType((*ListDeploymentsRequest)(nil), "vstatic.v1.ListDeploymentsRequest")
	proto.RegisterType((*GetDeploymentsResponse)(nil), "vstatic.v1.GetDeploymentsResponse")
	proto.RegisterType((*GetDeploymentsResponse_DeploymentContainer)(nil), "vstatic.v1.GetDeploymentsResponse.DeploymentContainer")
	proto.RegisterType((*GetDeploymentsRequest)(nil), "vstatic.v1.GetDeploymentsRequest")
	proto.RegisterType((*Strategy)(nil), "vstatic.v1.Strategy")
	proto.RegisterType((*Strategy_Default)(nil), "vstatic.v1.Strategy.Default")
	proto.RegisterType((*Strategy_IAM)(nil), "vstatic.v1.Strategy.IAM")
	proto.RegisterType((*Strategy_IAM_Filter)(nil), "vstatic.v1.Strategy.IAM.Filter")
	proto.RegisterType((*Strategy_Percentage)(nil), "vstatic.v1.Strategy.Percentage")
	proto.RegisterType((*CreateDeliveryStrategyRequest)(nil), "vstatic.v1.CreateDeliveryStrategyRequest")
	proto.RegisterType((*GithubCommitUser)(nil), "vstatic.v1.GithubCommitUser")
	proto.RegisterType((*GitCommitDetails)(nil), "vstatic.v1.GitCommitDetails")
	proto.RegisterType((*Deployment)(nil), "vstatic.v1.Deployment")
	proto.RegisterType((*ListDeploymentsResponse)(nil), "vstatic.v1.ListDeploymentsResponse")
	proto.RegisterType((*CreateDeliveryStrategyResponse)(nil), "vstatic.v1.CreateDeliveryStrategyResponse")
	proto.RegisterType((*UpdateDeliveryStrategyRequest)(nil), "vstatic.v1.UpdateDeliveryStrategyRequest")
	proto.RegisterType((*ListDeliveryStrategiesRequest)(nil), "vstatic.v1.ListDeliveryStrategiesRequest")
	proto.RegisterType((*DeliveryStrategy)(nil), "vstatic.v1.DeliveryStrategy")
	proto.RegisterType((*DeliveryStrategy_Delivery)(nil), "vstatic.v1.DeliveryStrategy.Delivery")
	proto.RegisterType((*ListDeliveryStrategiesResponse)(nil), "vstatic.v1.ListDeliveryStrategiesResponse")
	proto.RegisterType((*DeleteDeliveryStrategyRequest)(nil), "vstatic.v1.DeleteDeliveryStrategyRequest")
	proto.RegisterType((*CreateStaticResourceRequest)(nil), "vstatic.v1.CreateStaticResourceRequest")
	proto.RegisterType((*GetIndexRequest)(nil), "vstatic.v1.GetIndexRequest")
	proto.RegisterType((*GetIndexResponse)(nil), "vstatic.v1.GetIndexResponse")
	proto.RegisterType((*GetAssetURLRequest)(nil), "vstatic.v1.GetAssetURLRequest")
	proto.RegisterType((*GetAssetURLResponse)(nil), "vstatic.v1.GetAssetURLResponse")
	proto.RegisterEnum("vstatic.v1.Environment", Environment_name, Environment_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for VStatic service

type VStaticClient interface {
	// Creates a new application, this should match either an existing AppEngine project or a k8s µservice.
	CreateApplication(ctx context.Context, in *CreateApplicationRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	// Lists a page of applications
	ListApplications(ctx context.Context, in *ListApplicationsRequest, opts ...grpc.CallOption) (*ListApplicationsResponse, error)
	// Updates an application
	UpdateApplication(ctx context.Context, in *CreateApplicationRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	// Creates a new deployment that is a child of an application. A deployment contains the artifacts of an
	// application (App Bundles, CSS, etc...)
	CreateDeployment(ctx context.Context, in *CreateDeploymentRequest, opts ...grpc.CallOption) (*CreateDeploymentResponse, error)
	// List deployments for an application in created order descenging.
	ListDeployments(ctx context.Context, in *ListDeploymentsRequest, opts ...grpc.CallOption) (*ListDeploymentsResponse, error)
	// Get deployments for an application.
	GetDeployments(ctx context.Context, in *GetDeploymentsRequest, opts ...grpc.CallOption) (*GetDeploymentsResponse, error)
	// A delivery strategy controls how a deployment of an application is hosted to the end user.
	CreateDeliveryStrategy(ctx context.Context, in *CreateDeliveryStrategyRequest, opts ...grpc.CallOption) (*CreateDeliveryStrategyResponse, error)
	// Updates the delivery strategy to a new deployment
	UpdateDeliveryStrategy(ctx context.Context, in *UpdateDeliveryStrategyRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	// Lists all of the active delivery strategies for an application
	ListDeliveryStrategies(ctx context.Context, in *ListDeliveryStrategiesRequest, opts ...grpc.CallOption) (*ListDeliveryStrategiesResponse, error)
	// Delete an existing delivery strategy
	DeleteDeliveryStrategy(ctx context.Context, in *DeleteDeliveryStrategyRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	// Creates a new static resource object
	CreateStaticResource(ctx context.Context, in *CreateStaticResourceRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	// Retrieves the index.html for the given application
	GetIndex(ctx context.Context, in *GetIndexRequest, opts ...grpc.CallOption) (*GetIndexResponse, error)
	// Retrieves the serving url for the given application and asset
	GetAssetURL(ctx context.Context, in *GetAssetURLRequest, opts ...grpc.CallOption) (*GetAssetURLResponse, error)
}

type vStaticClient struct {
	cc *grpc.ClientConn
}

func NewVStaticClient(cc *grpc.ClientConn) VStaticClient {
	return &vStaticClient{cc}
}

func (c *vStaticClient) CreateApplication(ctx context.Context, in *CreateApplicationRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/vstatic.v1.vStatic/CreateApplication", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vStaticClient) ListApplications(ctx context.Context, in *ListApplicationsRequest, opts ...grpc.CallOption) (*ListApplicationsResponse, error) {
	out := new(ListApplicationsResponse)
	err := grpc.Invoke(ctx, "/vstatic.v1.vStatic/ListApplications", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vStaticClient) UpdateApplication(ctx context.Context, in *CreateApplicationRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/vstatic.v1.vStatic/UpdateApplication", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vStaticClient) CreateDeployment(ctx context.Context, in *CreateDeploymentRequest, opts ...grpc.CallOption) (*CreateDeploymentResponse, error) {
	out := new(CreateDeploymentResponse)
	err := grpc.Invoke(ctx, "/vstatic.v1.vStatic/CreateDeployment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vStaticClient) ListDeployments(ctx context.Context, in *ListDeploymentsRequest, opts ...grpc.CallOption) (*ListDeploymentsResponse, error) {
	out := new(ListDeploymentsResponse)
	err := grpc.Invoke(ctx, "/vstatic.v1.vStatic/ListDeployments", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vStaticClient) GetDeployments(ctx context.Context, in *GetDeploymentsRequest, opts ...grpc.CallOption) (*GetDeploymentsResponse, error) {
	out := new(GetDeploymentsResponse)
	err := grpc.Invoke(ctx, "/vstatic.v1.vStatic/GetDeployments", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vStaticClient) CreateDeliveryStrategy(ctx context.Context, in *CreateDeliveryStrategyRequest, opts ...grpc.CallOption) (*CreateDeliveryStrategyResponse, error) {
	out := new(CreateDeliveryStrategyResponse)
	err := grpc.Invoke(ctx, "/vstatic.v1.vStatic/CreateDeliveryStrategy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vStaticClient) UpdateDeliveryStrategy(ctx context.Context, in *UpdateDeliveryStrategyRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/vstatic.v1.vStatic/UpdateDeliveryStrategy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vStaticClient) ListDeliveryStrategies(ctx context.Context, in *ListDeliveryStrategiesRequest, opts ...grpc.CallOption) (*ListDeliveryStrategiesResponse, error) {
	out := new(ListDeliveryStrategiesResponse)
	err := grpc.Invoke(ctx, "/vstatic.v1.vStatic/ListDeliveryStrategies", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vStaticClient) DeleteDeliveryStrategy(ctx context.Context, in *DeleteDeliveryStrategyRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/vstatic.v1.vStatic/DeleteDeliveryStrategy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vStaticClient) CreateStaticResource(ctx context.Context, in *CreateStaticResourceRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/vstatic.v1.vStatic/CreateStaticResource", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vStaticClient) GetIndex(ctx context.Context, in *GetIndexRequest, opts ...grpc.CallOption) (*GetIndexResponse, error) {
	out := new(GetIndexResponse)
	err := grpc.Invoke(ctx, "/vstatic.v1.vStatic/GetIndex", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vStaticClient) GetAssetURL(ctx context.Context, in *GetAssetURLRequest, opts ...grpc.CallOption) (*GetAssetURLResponse, error) {
	out := new(GetAssetURLResponse)
	err := grpc.Invoke(ctx, "/vstatic.v1.vStatic/GetAssetURL", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for VStatic service

type VStaticServer interface {
	// Creates a new application, this should match either an existing AppEngine project or a k8s µservice.
	CreateApplication(context.Context, *CreateApplicationRequest) (*google_protobuf.Empty, error)
	// Lists a page of applications
	ListApplications(context.Context, *ListApplicationsRequest) (*ListApplicationsResponse, error)
	// Updates an application
	UpdateApplication(context.Context, *CreateApplicationRequest) (*google_protobuf.Empty, error)
	// Creates a new deployment that is a child of an application. A deployment contains the artifacts of an
	// application (App Bundles, CSS, etc...)
	CreateDeployment(context.Context, *CreateDeploymentRequest) (*CreateDeploymentResponse, error)
	// List deployments for an application in created order descenging.
	ListDeployments(context.Context, *ListDeploymentsRequest) (*ListDeploymentsResponse, error)
	// Get deployments for an application.
	GetDeployments(context.Context, *GetDeploymentsRequest) (*GetDeploymentsResponse, error)
	// A delivery strategy controls how a deployment of an application is hosted to the end user.
	CreateDeliveryStrategy(context.Context, *CreateDeliveryStrategyRequest) (*CreateDeliveryStrategyResponse, error)
	// Updates the delivery strategy to a new deployment
	UpdateDeliveryStrategy(context.Context, *UpdateDeliveryStrategyRequest) (*google_protobuf.Empty, error)
	// Lists all of the active delivery strategies for an application
	ListDeliveryStrategies(context.Context, *ListDeliveryStrategiesRequest) (*ListDeliveryStrategiesResponse, error)
	// Delete an existing delivery strategy
	DeleteDeliveryStrategy(context.Context, *DeleteDeliveryStrategyRequest) (*google_protobuf.Empty, error)
	// Creates a new static resource object
	CreateStaticResource(context.Context, *CreateStaticResourceRequest) (*google_protobuf.Empty, error)
	// Retrieves the index.html for the given application
	GetIndex(context.Context, *GetIndexRequest) (*GetIndexResponse, error)
	// Retrieves the serving url for the given application and asset
	GetAssetURL(context.Context, *GetAssetURLRequest) (*GetAssetURLResponse, error)
}

func RegisterVStaticServer(s *grpc.Server, srv VStaticServer) {
	s.RegisterService(&_VStatic_serviceDesc, srv)
}

func _VStatic_CreateApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VStaticServer).CreateApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vstatic.v1.vStatic/CreateApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VStaticServer).CreateApplication(ctx, req.(*CreateApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VStatic_ListApplications_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListApplicationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VStaticServer).ListApplications(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vstatic.v1.vStatic/ListApplications",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VStaticServer).ListApplications(ctx, req.(*ListApplicationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VStatic_UpdateApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VStaticServer).UpdateApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vstatic.v1.vStatic/UpdateApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VStaticServer).UpdateApplication(ctx, req.(*CreateApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VStatic_CreateDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VStaticServer).CreateDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vstatic.v1.vStatic/CreateDeployment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VStaticServer).CreateDeployment(ctx, req.(*CreateDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VStatic_ListDeployments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeploymentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VStaticServer).ListDeployments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vstatic.v1.vStatic/ListDeployments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VStaticServer).ListDeployments(ctx, req.(*ListDeploymentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VStatic_GetDeployments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeploymentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VStaticServer).GetDeployments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vstatic.v1.vStatic/GetDeployments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VStaticServer).GetDeployments(ctx, req.(*GetDeploymentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VStatic_CreateDeliveryStrategy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeliveryStrategyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VStaticServer).CreateDeliveryStrategy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vstatic.v1.vStatic/CreateDeliveryStrategy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VStaticServer).CreateDeliveryStrategy(ctx, req.(*CreateDeliveryStrategyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VStatic_UpdateDeliveryStrategy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeliveryStrategyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VStaticServer).UpdateDeliveryStrategy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vstatic.v1.vStatic/UpdateDeliveryStrategy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VStaticServer).UpdateDeliveryStrategy(ctx, req.(*UpdateDeliveryStrategyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VStatic_ListDeliveryStrategies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeliveryStrategiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VStaticServer).ListDeliveryStrategies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vstatic.v1.vStatic/ListDeliveryStrategies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VStaticServer).ListDeliveryStrategies(ctx, req.(*ListDeliveryStrategiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VStatic_DeleteDeliveryStrategy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeliveryStrategyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VStaticServer).DeleteDeliveryStrategy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vstatic.v1.vStatic/DeleteDeliveryStrategy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VStaticServer).DeleteDeliveryStrategy(ctx, req.(*DeleteDeliveryStrategyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VStatic_CreateStaticResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStaticResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VStaticServer).CreateStaticResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vstatic.v1.vStatic/CreateStaticResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VStaticServer).CreateStaticResource(ctx, req.(*CreateStaticResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VStatic_GetIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VStaticServer).GetIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vstatic.v1.vStatic/GetIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VStaticServer).GetIndex(ctx, req.(*GetIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VStatic_GetAssetURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VStaticServer).GetAssetURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vstatic.v1.vStatic/GetAssetURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VStaticServer).GetAssetURL(ctx, req.(*GetAssetURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VStatic_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vstatic.v1.vStatic",
	HandlerType: (*VStaticServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateApplication",
			Handler:    _VStatic_CreateApplication_Handler,
		},
		{
			MethodName: "ListApplications",
			Handler:    _VStatic_ListApplications_Handler,
		},
		{
			MethodName: "UpdateApplication",
			Handler:    _VStatic_UpdateApplication_Handler,
		},
		{
			MethodName: "CreateDeployment",
			Handler:    _VStatic_CreateDeployment_Handler,
		},
		{
			MethodName: "ListDeployments",
			Handler:    _VStatic_ListDeployments_Handler,
		},
		{
			MethodName: "GetDeployments",
			Handler:    _VStatic_GetDeployments_Handler,
		},
		{
			MethodName: "CreateDeliveryStrategy",
			Handler:    _VStatic_CreateDeliveryStrategy_Handler,
		},
		{
			MethodName: "UpdateDeliveryStrategy",
			Handler:    _VStatic_UpdateDeliveryStrategy_Handler,
		},
		{
			MethodName: "ListDeliveryStrategies",
			Handler:    _VStatic_ListDeliveryStrategies_Handler,
		},
		{
			MethodName: "DeleteDeliveryStrategy",
			Handler:    _VStatic_DeleteDeliveryStrategy_Handler,
		},
		{
			MethodName: "CreateStaticResource",
			Handler:    _VStatic_CreateStaticResource_Handler,
		},
		{
			MethodName: "GetIndex",
			Handler:    _VStatic_GetIndex_Handler,
		},
		{
			MethodName: "GetAssetURL",
			Handler:    _VStatic_GetAssetURL_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vstatic/v1/api.proto",
}

func init() { proto.RegisterFile("vstatic/v1/api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1798 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x58, 0x5f, 0x6f, 0xdb, 0xc8,
	0x11, 0x37, 0x2d, 0xd9, 0x92, 0x46, 0x8e, 0xad, 0xdb, 0x38, 0x8e, 0x8e, 0x8e, 0xa3, 0x0b, 0x93,
	0xf4, 0xcf, 0x21, 0x50, 0x72, 0xb9, 0x20, 0x48, 0xd3, 0x02, 0x57, 0x27, 0x4e, 0x6c, 0xa5, 0x71,
	0xeb, 0xd2, 0x31, 0xd0, 0x03, 0xda, 0x12, 0x6b, 0x71, 0x23, 0x11, 0x21, 0x45, 0x86, 0xbb, 0x12,
	0x4e, 0xf7, 0x11, 0x8a, 0x02, 0x05, 0x0a, 0xf4, 0xb5, 0x2d, 0x50, 0xa0, 0x0f, 0xfd, 0x16, 0xed,
	0xd3, 0x7d, 0x87, 0xf6, 0xa9, 0x9f, 0xa4, 0x58, 0xee, 0x2e, 0xb9, 0xa4, 0x28, 0xf9, 0xcf, 0x5d,
	0xfa, 0x24, 0xed, 0xec, 0x6f, 0x66, 0xe7, 0xdf, 0xce, 0x0c, 0x17, 0x36, 0x27, 0x94, 0x61, 0xe6,
	0xf5, 0xef, 0x4f, 0x3e, 0xbb, 0x8f, 0x23, 0xaf, 0x1b, 0xc5, 0x21, 0x0b, 0x11, 0x48, 0x6a, 0x77,
	0xf2, 0x99, 0xb9, 0x3d, 0x08, 0xc3, 0x81, 0x4f, 0xee, 0x27, 0x3b, 0xa7, 0xe3, 0xb7, 0xf7, 0x49,
	0x10, 0xb1, 0xa9, 0x00, 0x9a, 0x9d, 0xe2, 0x26, 0xf3, 0x02, 0x42, 0x19, 0x0e, 0x22, 0x01, 0xb0,
	0xfe, 0x64, 0x40, 0x73, 0x37, 0x8a, 0x7c, 0xaf, 0x8f, 0x99, 0x17, 0x8e, 0xd0, 0x35, 0x58, 0xc5,
	0x51, 0xe4, 0x78, 0x6e, 0xdb, 0xf8, 0xc4, 0xf8, 0x41, 0xc3, 0x5e, 0xc1, 0x51, 0xd4, 0x73, 0xd1,
	0xc7, 0x50, 0xe7, 0xe4, 0x11, 0x0e, 0x48, 0x7b, 0x39, 0xd9, 0xa8, 0xe1, 0x28, 0xfa, 0x39, 0x0e,
	0x08, 0xfa, 0x1e, 0x6c, 0x0c, 0x3c, 0x36, 0x1c, 0x9f, 0x3a, 0x31, 0x89, 0x42, 0x67, 0x1c, 0xfb,
	0xed, 0x4a, 0x82, 0xb8, 0x22, 0xc8, 0x36, 0x89, 0xc2, 0x93, 0xd8, 0x47, 0xf7, 0x00, 0x91, 0x11,
	0x8b, 0xa7, 0x1c, 0xe1, 0x30, 0x12, 0x44, 0x3e, 0x66, 0xa4, 0x5d, 0x4d, 0xa0, 0xad, 0x64, 0xe7,
	0x24, 0xf6, 0xdf, 0x48, 0xba, 0x75, 0x02, 0xed, 0xe7, 0x31, 0xc1, 0x8c, 0x68, 0xca, 0xd9, 0xe4,
	0xfd, 0x98, 0x50, 0x86, 0x7e, 0x04, 0x4d, 0x9c, 0x51, 0x13, 0x45, 0x9b, 0x0f, 0xaf, 0x77, 0x33,
	0x9f, 0x74, 0x75, 0x26, 0x1d, 0x6b, 0x1d, 0xc3, 0xb5, 0x23, 0x3c, 0x20, 0xae, 0x4d, 0x68, 0x14,
	0x8e, 0x28, 0x39, 0x24, 0x0c, 0xbb, 0x98, 0x61, 0xd4, 0x81, 0xe6, 0x88, 0x7c, 0xc5, 0x9c, 0xfe,
	0x38, 0xa6, 0x61, 0x2c, 0x8d, 0x07, 0x4e, 0x7a, 0x9e, 0x50, 0xb8, 0x07, 0x86, 0x98, 0x3a, 0x41,
	0x18, 0x0b, 0x0f, 0xd4, 0xed, 0xda, 0x10, 0xd3, 0xc3, 0x30, 0x26, 0xd6, 0x2b, 0xb8, 0x2a, 0x85,
	0x26, 0xfa, 0xfd, 0x22, 0xe2, 0x47, 0x51, 0xb4, 0x05, 0xab, 0x39, 0x69, 0x72, 0x85, 0xb6, 0xa1,
	0x11, 0xe1, 0x01, 0x71, 0xa8, 0xf7, 0xb5, 0x10, 0x55, 0xb1, 0xeb, 0x9c, 0x70, 0xec, 0x7d, 0x4d,
	0xac, 0xbf, 0x19, 0xd0, 0x7e, 0xed, 0x51, 0xa6, 0x59, 0x40, 0x95, 0xb2, 0xe8, 0xc7, 0xb0, 0xa6,
	0x19, 0x43, 0xdb, 0xc6, 0x27, 0x95, 0x45, 0x96, 0xe7, 0xc0, 0xe8, 0x15, 0x6c, 0x44, 0x78, 0xe0,
	0x8d, 0x06, 0x4e, 0x20, 0x8d, 0x4e, 0x0e, 0x6f, 0x3e, 0xbc, 0xa5, 0xf3, 0x97, 0x7a, 0xc7, 0x5e,
	0x17, 0x9c, 0x6a, 0x6d, 0x61, 0xb8, 0x3e, 0xab, 0xa4, 0x08, 0xce, 0x4b, 0x90, 0x60, 0x27, 0x8c,
	0x94, 0x96, 0xfc, 0x94, 0x4e, 0xc9, 0x29, 0xba, 0xbb, 0xec, 0x2b, 0x82, 0x4d, 0x2e, 0xad, 0x27,
	0xd0, 0xd8, 0x8d, 0x99, 0xf7, 0x16, 0xf7, 0x19, 0x45, 0x1d, 0x80, 0x41, 0x9f, 0x3a, 0xa7, 0xe3,
	0xfe, 0x3b, 0xc2, 0x84, 0x3b, 0x0f, 0x96, 0xec, 0xc6, 0xa0, 0x4f, 0x9f, 0x25, 0xa4, 0x67, 0x00,
	0x75, 0x3f, 0x94, 0x31, 0xfe, 0x25, 0x5c, 0x17, 0xa9, 0xb3, 0x47, 0x22, 0x3f, 0x9c, 0x06, 0x64,
	0xc4, 0x94, 0x72, 0x8f, 0x01, 0xdc, 0x94, 0x28, 0x15, 0xdb, 0xd2, 0x15, 0xd3, 0x58, 0x34, 0xa4,
	0xf5, 0x85, 0xca, 0x46, 0x5d, 0xa4, 0x0c, 0xca, 0x6d, 0xb8, 0x92, 0x21, 0xb3, 0x8b, 0xb3, 0x96,
	0x11, 0x7b, 0xae, 0xf5, 0x2f, 0x03, 0xb6, 0xb8, 0xc7, 0x32, 0xfe, 0xd4, 0x61, 0x77, 0x61, 0x5d,
	0x8b, 0x53, 0x26, 0xe0, 0x8a, 0x46, 0xed, 0xb9, 0x3c, 0xe9, 0xc9, 0x68, 0xe2, 0xc5, 0xe1, 0x28,
	0xd1, 0x9d, 0x87, 0x6e, 0x3d, 0x1f, 0xfa, 0x17, 0xd9, 0xb6, 0xad, 0x63, 0x4b, 0x42, 0x52, 0xb9,
	0x54, 0x48, 0xfe, 0x69, 0xc0, 0xd6, 0x3e, 0xc9, 0xdb, 0x20, 0x9d, 0xf0, 0x2b, 0x68, 0x66, 0xf6,
	0xaa, 0xc4, 0x7c, 0xac, 0xcb, 0x2f, 0x67, 0xd4, 0x1c, 0xfe, 0x3c, 0x1c, 0x31, 0xec, 0x8d, 0x48,
	0x6c, 0xeb, 0xa2, 0xcc, 0x43, 0xb8, 0x5a, 0x82, 0xb9, 0x74, 0x24, 0xff, 0x6a, 0xc0, 0xb5, 0xa2,
	0x2a, 0xff, 0xaf, 0x38, 0xdc, 0x85, 0xf5, 0x5c, 0xa6, 0xf0, 0x38, 0x54, 0xf8, 0x09, 0x7a, 0xaa,
	0x50, 0xeb, 0xdf, 0x15, 0xa8, 0x1f, 0xb3, 0x18, 0x33, 0x32, 0x98, 0xa2, 0x27, 0x50, 0x73, 0xc9,
	0x5b, 0x3c, 0xf6, 0x99, 0xbc, 0xad, 0x37, 0xf4, 0xa3, 0x14, 0xac, 0xbb, 0x27, 0x30, 0x07, 0x4b,
	0xb6, 0x82, 0xa3, 0x7b, 0x50, 0xf1, 0x70, 0x20, 0x43, 0xdd, 0x2e, 0xe5, 0xea, 0xed, 0x1e, 0x1e,
	0x2c, 0xd9, 0x1c, 0x86, 0x76, 0x01, 0x22, 0x12, 0xf7, 0xc9, 0x88, 0xe1, 0x81, 0xa8, 0xca, 0x85,
	0xfc, 0x48, 0x99, 0x8e, 0x52, 0xd8, 0xc1, 0x92, 0xad, 0x31, 0x99, 0x0d, 0xa8, 0x49, 0x35, 0xcc,
	0xff, 0x1a, 0x50, 0xe9, 0xed, 0x1e, 0xa2, 0xd7, 0xf0, 0x11, 0x66, 0x2c, 0xf6, 0x4e, 0xc7, 0x8c,
	0x38, 0x6f, 0x3d, 0x9f, 0x91, 0xb8, 0xb4, 0x1e, 0xe8, 0x1a, 0x75, 0x5f, 0x26, 0x38, 0xbb, 0x95,
	0x72, 0x0a, 0x02, 0x35, 0x7f, 0x6f, 0xc0, 0xaa, 0xf8, 0x8f, 0x5e, 0x42, 0x2d, 0x13, 0xc7, 0x73,
	0xed, 0xde, 0x19, 0xe2, 0xe4, 0x0f, 0x7d, 0xc1, 0x1b, 0x8d, 0xad, 0x98, 0xcd, 0xa7, 0xb0, 0xa6,
	0x6f, 0xa0, 0x16, 0x54, 0xde, 0x91, 0xa9, 0x8c, 0x3c, 0xff, 0x8b, 0x36, 0x61, 0x65, 0x82, 0xfd,
	0xb1, 0x6a, 0x7b, 0x62, 0xf1, 0x74, 0xf9, 0x89, 0x61, 0xde, 0x03, 0xc8, 0x7c, 0x81, 0x6e, 0xe6,
	0x1c, 0x68, 0x24, 0x65, 0x5d, 0xa3, 0x3c, 0x5b, 0x85, 0x2a, 0x9b, 0x46, 0xc4, 0xfa, 0x8f, 0x01,
	0x3b, 0xaa, 0x96, 0xf8, 0xde, 0x84, 0xc4, 0x53, 0xa5, 0xad, 0x4a, 0xc4, 0x39, 0x2d, 0x78, 0xa6,
	0xce, 0x2c, 0xcf, 0xd6, 0x99, 0x62, 0x76, 0x56, 0x2e, 0x90, 0x9d, 0x0f, 0xa0, 0x4e, 0xa5, 0x26,
	0x32, 0xfe, 0x9b, 0x65, 0x3e, 0xb5, 0x53, 0x14, 0x42, 0x50, 0x4d, 0x06, 0x82, 0x95, 0x44, 0x91,
	0xe4, 0xbf, 0xe5, 0x43, 0x6b, 0x3f, 0x69, 0xfb, 0xcf, 0xc3, 0x20, 0xf0, 0xd8, 0x09, 0x25, 0x31,
	0xea, 0x42, 0xd5, 0xe5, 0xbd, 0x5e, 0x04, 0xde, 0xec, 0x8a, 0x99, 0xa4, 0xab, 0x66, 0x92, 0xee,
	0x1b, 0x35, 0x93, 0xd8, 0x09, 0x2e, 0x95, 0xbb, 0x9c, 0xc9, 0xe5, 0x61, 0x20, 0x01, 0xf6, 0xd4,
	0x6c, 0x21, 0x16, 0xd6, 0x9f, 0x8d, 0xe4, 0x38, 0x71, 0xd6, 0x1e, 0x61, 0xd8, 0xf3, 0x29, 0x7a,
	0x04, 0xab, 0x78, 0xcc, 0x86, 0xb2, 0xef, 0x16, 0x6e, 0x4c, 0x51, 0x39, 0x5b, 0x62, 0xd1, 0x53,
	0x68, 0xf4, 0x13, 0x2a, 0x23, 0x71, 0xd9, 0x55, 0x9b, 0x61, 0xcc, 0xe0, 0xa8, 0x0d, 0xb5, 0x80,
	0x50, 0xca, 0x03, 0x2f, 0xd4, 0x53, 0x4b, 0xeb, 0x77, 0x55, 0x80, 0xac, 0xd6, 0x7c, 0xab, 0xd0,
	0x7e, 0x0c, 0xf5, 0x81, 0xc7, 0x9c, 0x21, 0xa6, 0x43, 0x75, 0xca, 0xc0, 0x63, 0x07, 0x98, 0x0e,
	0xd1, 0xe7, 0xd0, 0xc0, 0xaa, 0x57, 0xca, 0xd8, 0x5d, 0xcb, 0x0d, 0x05, 0x6a, 0xd3, 0xce, 0x70,
	0xc5, 0x54, 0x59, 0xb9, 0x40, 0xaa, 0x3c, 0x82, 0x5a, 0x3f, 0x49, 0x61, 0xb7, 0xbd, 0x7a, 0x66,
	0x4c, 0x15, 0x94, 0x73, 0x8d, 0x23, 0x37, 0xe1, 0xaa, 0x9d, 0xcd, 0x25, 0xa1, 0xe8, 0x01, 0x6c,
	0xf6, 0x55, 0xd5, 0x77, 0x4e, 0xc7, 0x9e, 0xef, 0x92, 0x98, 0xbb, 0xa8, 0x9e, 0xb8, 0x00, 0xa5,
	0x7b, 0xcf, 0xc4, 0x56, 0xcf, 0x45, 0xaf, 0x00, 0x71, 0x47, 0x89, 0xf0, 0x38, 0xae, 0xc8, 0x8a,
	0x76, 0xa3, 0x34, 0xa4, 0xb9, 0xcc, 0xb1, 0x5b, 0x83, 0x62, 0x2e, 0x6d, 0xa5, 0xb9, 0x04, 0x62,
	0x86, 0x93, 0xd9, 0xa2, 0x52, 0xb4, 0xa9, 0xa5, 0x68, 0x07, 0x9a, 0xa7, 0x31, 0x1e, 0xf5, 0x87,
	0x62, 0x4c, 0x5e, 0x13, 0x23, 0xa4, 0x20, 0xf1, 0x49, 0xd9, 0xfa, 0x8b, 0x21, 0xc6, 0xa6, 0xb2,
	0x06, 0xfa, 0xa4, 0xac, 0x81, 0xce, 0x6b, 0x68, 0x3a, 0xf4, 0x3b, 0x9d, 0xeb, 0x6c, 0xb8, 0x39,
	0xaf, 0x36, 0x49, 0x3d, 0x1f, 0xc0, 0xa6, 0x2b, 0xf7, 0x1c, 0x55, 0x08, 0xb2, 0x7c, 0x46, 0x6e,
	0x81, 0xaf, 0xe7, 0x5a, 0xdf, 0x18, 0xb0, 0x73, 0x92, 0x04, 0xf3, 0x82, 0x05, 0x6f, 0xde, 0x51,
	0xcb, 0xf3, 0x8e, 0x9a, 0xbd, 0x47, 0x95, 0xb3, 0x4b, 0x64, 0xf5, 0xfc, 0x79, 0x6f, 0xbd, 0x87,
	0x1d, 0x11, 0xbf, 0xdc, 0xc9, 0x1e, 0xa1, 0x67, 0x58, 0x72, 0xf9, 0x99, 0xc1, 0xfa, 0x7b, 0x15,
	0x5a, 0x45, 0xbf, 0x5d, 0x3c, 0x08, 0xb9, 0xe2, 0xbe, 0x7c, 0xae, 0xe2, 0xfe, 0x81, 0x7d, 0xa9,
	0xd7, 0x90, 0x95, 0x4b, 0xd5, 0x90, 0xd5, 0xf3, 0xd7, 0x90, 0x23, 0x68, 0xa5, 0xfe, 0x1a, 0x7a,
	0x94, 0x85, 0xf1, 0xb4, 0x5d, 0x4b, 0x6e, 0xd8, 0xdd, 0xfc, 0x0d, 0xcb, 0xfb, 0x2d, 0x25, 0xd8,
	0x1b, 0x8a, 0xfd, 0x40, 0x70, 0x9b, 0x7f, 0x30, 0xa0, 0xae, 0x76, 0xcf, 0xf5, 0x05, 0x80, 0xbe,
	0xe0, 0x20, 0xa9, 0x03, 0xff, 0x08, 0x97, 0x61, 0x58, 0xa4, 0xff, 0x9a, 0x62, 0xe0, 0x24, 0xb4,
	0x03, 0x30, 0xa6, 0x24, 0x76, 0xf4, 0x36, 0xd8, 0xe0, 0x94, 0x17, 0x49, 0x2b, 0xfc, 0x2d, 0xdc,
	0x9c, 0x97, 0x9b, 0xf2, 0xea, 0xfe, 0x04, 0x80, 0xa6, 0x54, 0x59, 0x61, 0x6e, 0x2c, 0xb2, 0xdf,
	0xd6, 0xf0, 0xd6, 0x1f, 0x0d, 0xd8, 0xd9, 0x23, 0x3e, 0xb9, 0xf0, 0x35, 0xee, 0xf0, 0xca, 0x26,
	0x0d, 0x4f, 0x6f, 0x2f, 0x28, 0xd2, 0xb7, 0x9a, 0x59, 0xac, 0x9f, 0xc2, 0xb6, 0xa8, 0x57, 0xc7,
	0x09, 0xd6, 0x26, 0x34, 0x1c, 0xc7, 0x7d, 0xa2, 0x34, 0xba, 0x05, 0x6b, 0x01, 0x71, 0x3d, 0x9c,
	0x3c, 0x4c, 0xa4, 0x7a, 0x35, 0x53, 0x9a, 0xf8, 0x30, 0xdb, 0xd8, 0x27, 0xac, 0x37, 0x72, 0xc9,
	0x57, 0x1f, 0xec, 0x16, 0xf3, 0x4f, 0x7e, 0x0f, 0x07, 0x0e, 0x0b, 0xdf, 0x91, 0x91, 0x0c, 0x5d,
	0xdd, 0xc3, 0xc1, 0x1b, 0xbe, 0x9e, 0x4d, 0x9f, 0x6a, 0x49, 0xfa, 0x6c, 0x43, 0x83, 0x7f, 0xe0,
	0xfa, 0x84, 0x03, 0xc4, 0xc0, 0x55, 0x17, 0x84, 0x9e, 0x6b, 0xfd, 0x0c, 0x5a, 0x99, 0x0d, 0x32,
	0xda, 0x08, 0xaa, 0x43, 0x16, 0xf8, 0x89, 0x09, 0x6b, 0x76, 0xf2, 0xff, 0x5c, 0x73, 0x86, 0xf5,
	0x0f, 0x03, 0xd0, 0x3e, 0x61, 0xbb, 0x94, 0x12, 0x76, 0x62, 0xbf, 0xfe, 0x70, 0x4e, 0x39, 0x57,
	0x85, 0xd9, 0x01, 0xc0, 0x5c, 0x13, 0x27, 0xc2, 0x6c, 0x28, 0x3d, 0xd3, 0x48, 0x28, 0x47, 0x98,
	0x0d, 0xad, 0xc7, 0x70, 0x35, 0xa7, 0xab, 0x34, 0xbe, 0x03, 0x4d, 0x4a, 0xe2, 0x09, 0x6f, 0x8a,
	0xe3, 0xd8, 0x57, 0xaf, 0x39, 0x92, 0x74, 0x12, 0xfb, 0x9f, 0x3e, 0x82, 0xa6, 0xa6, 0x17, 0xaa,
	0x43, 0xf5, 0x0d, 0xa1, 0xac, 0xb5, 0xc4, 0xff, 0xed, 0x91, 0x20, 0x6c, 0x19, 0xfc, 0xdf, 0x51,
	0x1c, 0xba, 0xad, 0x65, 0x54, 0x83, 0xca, 0xae, 0xef, 0xb7, 0x2a, 0x0f, 0xbf, 0x69, 0x40, 0x6d,
	0x22, 0x52, 0x0d, 0x1d, 0xc3, 0x47, 0x33, 0x0f, 0x54, 0xe8, 0x8e, 0x6e, 0xf8, 0xbc, 0xf7, 0x2b,
	0x73, 0x6b, 0xe6, 0xce, 0xbf, 0x08, 0x22, 0x36, 0xb5, 0x96, 0x90, 0x03, 0xad, 0xe2, 0xbb, 0x0a,
	0xba, 0xad, 0xcb, 0x9c, 0xf3, 0xea, 0x62, 0xde, 0x59, 0x0c, 0x12, 0x6e, 0xb1, 0x96, 0xb8, 0xd6,
	0xa2, 0x17, 0x7f, 0xc7, 0x5a, 0x17, 0x5f, 0x47, 0xf2, 0x5a, 0xcf, 0x79, 0x8e, 0x31, 0xef, 0x2c,
	0x06, 0xa5, 0x5a, 0xff, 0x1a, 0x36, 0x0a, 0x73, 0x13, 0xb2, 0x8a, 0x06, 0xcf, 0x7e, 0xd1, 0x9b,
	0xb7, 0x17, 0x62, 0x52, 0xe9, 0x5f, 0xc2, 0x7a, 0xfe, 0x45, 0x00, 0xdd, 0x5a, 0xf4, 0x70, 0x21,
	0x64, 0x5b, 0x67, 0xbf, 0x6d, 0x58, 0x4b, 0xe8, 0x3d, 0x6c, 0x95, 0xcf, 0x53, 0xe8, 0x87, 0x65,
	0xa6, 0x97, 0xd6, 0x55, 0xf3, 0xd3, 0xf3, 0x40, 0xd3, 0x23, 0x7f, 0x03, 0x5b, 0xe5, 0xd3, 0x56,
	0xfe, 0xc8, 0x85, 0x13, 0xd9, 0x82, 0x58, 0xbf, 0x57, 0xef, 0x58, 0xc5, 0x36, 0x93, 0x17, 0xbf,
	0x70, 0x4c, 0xca, 0x5b, 0xb4, 0xb8, 0x6b, 0x09, 0x8b, 0xca, 0x1b, 0x4f, 0xfe, 0xc8, 0x85, 0xcd,
	0x69, 0x81, 0x45, 0x5f, 0xc2, 0x66, 0x59, 0x0f, 0x41, 0xdf, 0x9f, 0x75, 0x7b, 0x69, 0x97, 0x59,
	0x20, 0x7a, 0x1f, 0xea, 0xaa, 0x2e, 0xa3, 0xed, 0x42, 0xc2, 0xe8, 0x1d, 0xc7, 0xbc, 0x51, 0xbe,
	0x99, 0xba, 0xe0, 0x08, 0x9a, 0x5a, 0x99, 0x43, 0x37, 0x0b, 0xf0, 0x42, 0xad, 0x36, 0x3b, 0x73,
	0xf7, 0x95, 0xc4, 0xd3, 0xd5, 0x44, 0xd9, 0xcf, 0xff, 0x17, 0x00, 0x00, 0xff, 0xff, 0x0c, 0x9a,
	0xd3, 0x30, 0x60, 0x18, 0x00, 0x00,
}
