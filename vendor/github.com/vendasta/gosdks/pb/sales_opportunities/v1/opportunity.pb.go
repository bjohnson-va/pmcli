// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sales_opportunities/v1/opportunity.proto

/*
Package salesopportunities_v1 is a generated protocol buffer package.

It is generated from these files:
	sales_opportunities/v1/opportunity.proto

It has these top-level messages:
	Package
	RevenueComponent
	Revenue
	ClosedLostReason
	Opportunity
	CreateOpportunityRequest
	GetOpportunityRequest
	DateRangeFilter
	ProbabilityRangeFilter
	ListOpportunitiesRequest
	GetOpportunityCountByAccountGroupsRequest
	UpdateOpportunityNameRequest
	UpdateOpportunityProbabilityRequest
	UpdateOpportunitySalespersonRequest
	UpdateOpportunityExpectedCloseDateRequest
	UpdateOpportunityNotesRequest
	AddOpportunityPackagesRequest
	RemoveOpportunityPackagesRequest
	UpdateOpportunityPackageRevenueRequest
	UpdateOpportunityPackageRequest
	CloseAsWonOpportunityRequest
	CloseAsLostOpportunityRequest
	UpdateLastConnectedDateRequest
	UpdateLastActivityDateRequest
	DeleteOpportunityRequest
	ReopenClosedOpportunityRequest
	UpdateOpportunityMarketRequest
	CreateOpportunityResponse
	GetOpportunityResponse
	ListOpportunitiesResponse
	OpportunityCount
	GetOpportunityCountByAccountGroupsResponse
	UpdateOpportunityNameResponse
	UpdateOpportunityProbabilityResponse
	UpdateOpportunitySalespersonResponse
	UpdateOpportunityExpectedCloseDateResponse
	UpdateOpportunityNotesResponse
	AddOpportunityPackagesResponse
	RemoveOpportunityPackagesResponse
	UpdateOpportunityPackageRevenueResponse
	UpdateOpportunityPackageResponse
	UpdateLastConnectedDateResponse
	UpdateLastActivityDateResponse
	CloseAsWonOpportunityResponse
	CloseAsLostOpportunityResponse
	UpdateOpportunityMarketResponse
*/
package salesopportunities_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RevenuePeriod int32

const (
	RevenuePeriod_ONETIME  RevenuePeriod = 0
	RevenuePeriod_DAILY    RevenuePeriod = 1
	RevenuePeriod_WEEKLY   RevenuePeriod = 2
	RevenuePeriod_BIWEEKLY RevenuePeriod = 3
	RevenuePeriod_MONTHLY  RevenuePeriod = 4
	RevenuePeriod_YEARLY   RevenuePeriod = 5
)

var RevenuePeriod_name = map[int32]string{
	0: "ONETIME",
	1: "DAILY",
	2: "WEEKLY",
	3: "BIWEEKLY",
	4: "MONTHLY",
	5: "YEARLY",
}
var RevenuePeriod_value = map[string]int32{
	"ONETIME":  0,
	"DAILY":    1,
	"WEEKLY":   2,
	"BIWEEKLY": 3,
	"MONTHLY":  4,
	"YEARLY":   5,
}

func (x RevenuePeriod) String() string {
	return proto.EnumName(RevenuePeriod_name, int32(x))
}
func (RevenuePeriod) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Currency int32

const (
	Currency_USD Currency = 0
	Currency_CAD Currency = 1
	Currency_EUR Currency = 2
	Currency_AUD Currency = 3
	Currency_GBP Currency = 4
	Currency_NZD Currency = 5
)

var Currency_name = map[int32]string{
	0: "USD",
	1: "CAD",
	2: "EUR",
	3: "AUD",
	4: "GBP",
	5: "NZD",
}
var Currency_value = map[string]int32{
	"USD": 0,
	"CAD": 1,
	"EUR": 2,
	"AUD": 3,
	"GBP": 4,
	"NZD": 5,
}

func (x Currency) String() string {
	return proto.EnumName(Currency_name, int32(x))
}
func (Currency) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// Reasons an opportunity was lost
type ClosedLostReasonOption int32

const (
	ClosedLostReasonOption_PRICE              ClosedLostReasonOption = 0
	ClosedLostReasonOption_NO_BUDGET          ClosedLostReasonOption = 1
	ClosedLostReasonOption_LOST_TO_COMPETITOR ClosedLostReasonOption = 2
	ClosedLostReasonOption_NOT_READY          ClosedLostReasonOption = 3
	ClosedLostReasonOption_OTHER              ClosedLostReasonOption = 4
)

var ClosedLostReasonOption_name = map[int32]string{
	0: "PRICE",
	1: "NO_BUDGET",
	2: "LOST_TO_COMPETITOR",
	3: "NOT_READY",
	4: "OTHER",
}
var ClosedLostReasonOption_value = map[string]int32{
	"PRICE":              0,
	"NO_BUDGET":          1,
	"LOST_TO_COMPETITOR": 2,
	"NOT_READY":          3,
	"OTHER":              4,
}

func (x ClosedLostReasonOption) String() string {
	return proto.EnumName(ClosedLostReasonOption_name, int32(x))
}
func (ClosedLostReasonOption) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// The directions that a result set can be sorted in.
type SortDirection int32

const (
	SortDirection_ASCENDING  SortDirection = 0
	SortDirection_DESCENDING SortDirection = 1
)

var SortDirection_name = map[int32]string{
	0: "ASCENDING",
	1: "DESCENDING",
}
var SortDirection_value = map[string]int32{
	"ASCENDING":  0,
	"DESCENDING": 1,
}

func (x SortDirection) String() string {
	return proto.EnumName(SortDirection_name, int32(x))
}
func (SortDirection) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// The field to sort a result set on.
type ListOpportunitiesRequest_SortField int32

const (
	ListOpportunitiesRequest_PROJECTED_FIRST_YEAR_VALUE ListOpportunitiesRequest_SortField = 0
	ListOpportunitiesRequest_PROBABILITY                ListOpportunitiesRequest_SortField = 1
	ListOpportunitiesRequest_CREATED                    ListOpportunitiesRequest_SortField = 2
	ListOpportunitiesRequest_EXPECTED_CLOSE             ListOpportunitiesRequest_SortField = 3
	ListOpportunitiesRequest_NAME                       ListOpportunitiesRequest_SortField = 4
	ListOpportunitiesRequest_LAST_ACTIVITY              ListOpportunitiesRequest_SortField = 5
	ListOpportunitiesRequest_LAST_CONNECTED             ListOpportunitiesRequest_SortField = 6
	ListOpportunitiesRequest_ACTUAL_CLOSE               ListOpportunitiesRequest_SortField = 7
)

var ListOpportunitiesRequest_SortField_name = map[int32]string{
	0: "PROJECTED_FIRST_YEAR_VALUE",
	1: "PROBABILITY",
	2: "CREATED",
	3: "EXPECTED_CLOSE",
	4: "NAME",
	5: "LAST_ACTIVITY",
	6: "LAST_CONNECTED",
	7: "ACTUAL_CLOSE",
}
var ListOpportunitiesRequest_SortField_value = map[string]int32{
	"PROJECTED_FIRST_YEAR_VALUE": 0,
	"PROBABILITY":                1,
	"CREATED":                    2,
	"EXPECTED_CLOSE":             3,
	"NAME":                       4,
	"LAST_ACTIVITY":              5,
	"LAST_CONNECTED":             6,
	"ACTUAL_CLOSE":               7,
}

func (x ListOpportunitiesRequest_SortField) String() string {
	return proto.EnumName(ListOpportunitiesRequest_SortField_name, int32(x))
}
func (ListOpportunitiesRequest_SortField) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{9, 0}
}

type Package struct {
	PackageId      string   `protobuf:"bytes,1,opt,name=package_id,json=packageId" json:"package_id,omitempty"`
	Currency       Currency `protobuf:"varint,2,opt,name=currency,enum=salesopportunities.v1.Currency" json:"currency,omitempty"`
	InitialRevenue *Revenue `protobuf:"bytes,3,opt,name=initial_revenue,json=initialRevenue" json:"initial_revenue,omitempty"`
	CurrentRevenue *Revenue `protobuf:"bytes,4,opt,name=current_revenue,json=currentRevenue" json:"current_revenue,omitempty"`
	Quantity       int64    `protobuf:"varint,5,opt,name=quantity" json:"quantity,omitempty"`
}

func (m *Package) Reset()                    { *m = Package{} }
func (m *Package) String() string            { return proto.CompactTextString(m) }
func (*Package) ProtoMessage()               {}
func (*Package) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Package) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *Package) GetCurrency() Currency {
	if m != nil {
		return m.Currency
	}
	return Currency_USD
}

func (m *Package) GetInitialRevenue() *Revenue {
	if m != nil {
		return m.InitialRevenue
	}
	return nil
}

func (m *Package) GetCurrentRevenue() *Revenue {
	if m != nil {
		return m.CurrentRevenue
	}
	return nil
}

func (m *Package) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

type RevenueComponent struct {
	// The value in the smallest common currency unit i.e. cents. Therefore 4000 would represent $40.00.
	Value int64 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	// The frequency this revenue occurs.
	Period RevenuePeriod `protobuf:"varint,2,opt,name=period,enum=salesopportunities.v1.RevenuePeriod" json:"period,omitempty"`
}

func (m *RevenueComponent) Reset()                    { *m = RevenueComponent{} }
func (m *RevenueComponent) String() string            { return proto.CompactTextString(m) }
func (*RevenueComponent) ProtoMessage()               {}
func (*RevenueComponent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RevenueComponent) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *RevenueComponent) GetPeriod() RevenuePeriod {
	if m != nil {
		return m.Period
	}
	return RevenuePeriod_ONETIME
}

type Revenue struct {
	RevenueComponents []*RevenueComponent `protobuf:"bytes,1,rep,name=revenue_components,json=revenueComponents" json:"revenue_components,omitempty"`
}

func (m *Revenue) Reset()                    { *m = Revenue{} }
func (m *Revenue) String() string            { return proto.CompactTextString(m) }
func (*Revenue) ProtoMessage()               {}
func (*Revenue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Revenue) GetRevenueComponents() []*RevenueComponent {
	if m != nil {
		return m.RevenueComponents
	}
	return nil
}

// A message containing the reason why the opportunity was lost
type ClosedLostReason struct {
	// The reason the opportunity was lost
	Value ClosedLostReasonOption `protobuf:"varint,1,opt,name=value,enum=salesopportunities.v1.ClosedLostReasonOption" json:"value,omitempty"`
}

func (m *ClosedLostReason) Reset()                    { *m = ClosedLostReason{} }
func (m *ClosedLostReason) String() string            { return proto.CompactTextString(m) }
func (*ClosedLostReason) ProtoMessage()               {}
func (*ClosedLostReason) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ClosedLostReason) GetValue() ClosedLostReasonOption {
	if m != nil {
		return m.Value
	}
	return ClosedLostReasonOption_PRICE
}

type Opportunity struct {
	OpportunityId     string                     `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	AccountGroupId    string                     `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	SalesPersonId     string                     `protobuf:"bytes,3,opt,name=sales_person_id,json=salesPersonId" json:"sales_person_id,omitempty"`
	Name              string                     `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Packages          []*Package                 `protobuf:"bytes,5,rep,name=packages" json:"packages,omitempty"`
	ExpectedCloseDate *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=expected_close_date,json=expectedCloseDate" json:"expected_close_date,omitempty"`
	Probability       float64                    `protobuf:"fixed64,7,opt,name=probability" json:"probability,omitempty"`
	Notes             string                     `protobuf:"bytes,8,opt,name=notes" json:"notes,omitempty"`
	Deleted           *google_protobuf.Timestamp `protobuf:"bytes,9,opt,name=deleted" json:"deleted,omitempty"`
	Created           *google_protobuf.Timestamp `protobuf:"bytes,10,opt,name=created" json:"created,omitempty"`
	Updated           *google_protobuf.Timestamp `protobuf:"bytes,11,opt,name=updated" json:"updated,omitempty"`
	// The projected first year revenue in the smallest common currency unit. This value takes into account one time
	// payments and recurring payments that would occur in the first year.
	ProjectedFirstYearValue int64 `protobuf:"varint,12,opt,name=projected_first_year_value,json=projectedFirstYearValue" json:"projected_first_year_value,omitempty"`
	// The probable first year value in the smallest common currency unit. Calculated by multiplying the prjected first
	// year value by the probability.
	ProbableFirstYearValue int64  `protobuf:"varint,13,opt,name=probable_first_year_value,json=probableFirstYearValue" json:"probable_first_year_value,omitempty"`
	PipelineStage          string `protobuf:"bytes,14,opt,name=pipeline_stage,json=pipelineStage" json:"pipeline_stage,omitempty"`
	IsClosed               bool   `protobuf:"varint,15,opt,name=is_closed,json=isClosed" json:"is_closed,omitempty"`
	// The reason the opportunity was closed lost
	ClosedLostReason *ClosedLostReason `protobuf:"bytes,16,opt,name=closed_lost_reason,json=closedLostReason" json:"closed_lost_reason,omitempty"`
	// The date the opportunity was actually closed
	ActualClosedDate *google_protobuf.Timestamp `protobuf:"bytes,17,opt,name=actual_closed_date,json=actualClosedDate" json:"actual_closed_date,omitempty"`
	// The last date the salesperson connected with the business in relation to this opportunity
	LastConnectedDate *google_protobuf.Timestamp `protobuf:"bytes,18,opt,name=last_connected_date,json=lastConnectedDate" json:"last_connected_date,omitempty"`
	// The last date the business had activity
	LastActivityDate *google_protobuf.Timestamp `protobuf:"bytes,19,opt,name=last_activity_date,json=lastActivityDate" json:"last_activity_date,omitempty"`
	// The reason the opportunity was reopened
	ReopenedReason string `protobuf:"bytes,20,opt,name=reopened_reason,json=reopenedReason" json:"reopened_reason,omitempty"`
}

func (m *Opportunity) Reset()                    { *m = Opportunity{} }
func (m *Opportunity) String() string            { return proto.CompactTextString(m) }
func (*Opportunity) ProtoMessage()               {}
func (*Opportunity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Opportunity) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *Opportunity) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *Opportunity) GetSalesPersonId() string {
	if m != nil {
		return m.SalesPersonId
	}
	return ""
}

func (m *Opportunity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Opportunity) GetPackages() []*Package {
	if m != nil {
		return m.Packages
	}
	return nil
}

func (m *Opportunity) GetExpectedCloseDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.ExpectedCloseDate
	}
	return nil
}

func (m *Opportunity) GetProbability() float64 {
	if m != nil {
		return m.Probability
	}
	return 0
}

func (m *Opportunity) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *Opportunity) GetDeleted() *google_protobuf.Timestamp {
	if m != nil {
		return m.Deleted
	}
	return nil
}

func (m *Opportunity) GetCreated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Opportunity) GetUpdated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *Opportunity) GetProjectedFirstYearValue() int64 {
	if m != nil {
		return m.ProjectedFirstYearValue
	}
	return 0
}

func (m *Opportunity) GetProbableFirstYearValue() int64 {
	if m != nil {
		return m.ProbableFirstYearValue
	}
	return 0
}

func (m *Opportunity) GetPipelineStage() string {
	if m != nil {
		return m.PipelineStage
	}
	return ""
}

func (m *Opportunity) GetIsClosed() bool {
	if m != nil {
		return m.IsClosed
	}
	return false
}

func (m *Opportunity) GetClosedLostReason() *ClosedLostReason {
	if m != nil {
		return m.ClosedLostReason
	}
	return nil
}

func (m *Opportunity) GetActualClosedDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.ActualClosedDate
	}
	return nil
}

func (m *Opportunity) GetLastConnectedDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.LastConnectedDate
	}
	return nil
}

func (m *Opportunity) GetLastActivityDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.LastActivityDate
	}
	return nil
}

func (m *Opportunity) GetReopenedReason() string {
	if m != nil {
		return m.ReopenedReason
	}
	return ""
}

// Message containing information to create opportunity
type CreateOpportunityRequest struct {
	// ID of account group that opportunity belongs to
	AccountGroupId string `protobuf:"bytes,1,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	// ID of sales person that is assigned to the opportunity
	SalesPersonId string `protobuf:"bytes,2,opt,name=sales_person_id,json=salesPersonId" json:"sales_person_id,omitempty"`
	// Name of an opportunity
	Name string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	// List of package ids (deprecated: Use packages instead)
	PackageIds []string `protobuf:"bytes,4,rep,name=package_ids,json=packageIds" json:"package_ids,omitempty"`
	// Expected close date timestamp
	ExpectedCloseDate *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=expected_close_date,json=expectedCloseDate" json:"expected_close_date,omitempty"`
	// Probability of the opportunity
	Probability float64 `protobuf:"fixed64,6,opt,name=probability" json:"probability,omitempty"`
	// Opportunity notes
	Notes string `protobuf:"bytes,7,opt,name=notes" json:"notes,omitempty"`
	// ID of market that opportunity belongs to
	MarketId string `protobuf:"bytes,8,opt,name=market_id,json=marketId" json:"market_id,omitempty"`
	// ID of partner that opportunity belongs to
	PartnerId string `protobuf:"bytes,9,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// List of packages
	Packages []*CreateOpportunityRequest_CreateOpportunityPackage `protobuf:"bytes,10,rep,name=packages" json:"packages,omitempty"`
}

func (m *CreateOpportunityRequest) Reset()                    { *m = CreateOpportunityRequest{} }
func (m *CreateOpportunityRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateOpportunityRequest) ProtoMessage()               {}
func (*CreateOpportunityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateOpportunityRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *CreateOpportunityRequest) GetSalesPersonId() string {
	if m != nil {
		return m.SalesPersonId
	}
	return ""
}

func (m *CreateOpportunityRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateOpportunityRequest) GetPackageIds() []string {
	if m != nil {
		return m.PackageIds
	}
	return nil
}

func (m *CreateOpportunityRequest) GetExpectedCloseDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.ExpectedCloseDate
	}
	return nil
}

func (m *CreateOpportunityRequest) GetProbability() float64 {
	if m != nil {
		return m.Probability
	}
	return 0
}

func (m *CreateOpportunityRequest) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *CreateOpportunityRequest) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *CreateOpportunityRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *CreateOpportunityRequest) GetPackages() []*CreateOpportunityRequest_CreateOpportunityPackage {
	if m != nil {
		return m.Packages
	}
	return nil
}

// Package information for the opportunity
type CreateOpportunityRequest_CreateOpportunityPackage struct {
	// Unique ID of package
	PackageId string `protobuf:"bytes,1,opt,name=package_id,json=packageId" json:"package_id,omitempty"`
	// Quantity of package
	Quantity int64 `protobuf:"varint,2,opt,name=quantity" json:"quantity,omitempty"`
}

func (m *CreateOpportunityRequest_CreateOpportunityPackage) Reset() {
	*m = CreateOpportunityRequest_CreateOpportunityPackage{}
}
func (m *CreateOpportunityRequest_CreateOpportunityPackage) String() string {
	return proto.CompactTextString(m)
}
func (*CreateOpportunityRequest_CreateOpportunityPackage) ProtoMessage() {}
func (*CreateOpportunityRequest_CreateOpportunityPackage) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 0}
}

func (m *CreateOpportunityRequest_CreateOpportunityPackage) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *CreateOpportunityRequest_CreateOpportunityPackage) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

type GetOpportunityRequest struct {
	OpportunityId  string `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	AccountGroupId string `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
}

func (m *GetOpportunityRequest) Reset()                    { *m = GetOpportunityRequest{} }
func (m *GetOpportunityRequest) String() string            { return proto.CompactTextString(m) }
func (*GetOpportunityRequest) ProtoMessage()               {}
func (*GetOpportunityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetOpportunityRequest) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *GetOpportunityRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

// Begin and end of date range
type DateRangeFilter struct {
	BeginRange *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=begin_range,json=beginRange" json:"begin_range,omitempty"`
	EndRange   *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=end_range,json=endRange" json:"end_range,omitempty"`
}

func (m *DateRangeFilter) Reset()                    { *m = DateRangeFilter{} }
func (m *DateRangeFilter) String() string            { return proto.CompactTextString(m) }
func (*DateRangeFilter) ProtoMessage()               {}
func (*DateRangeFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DateRangeFilter) GetBeginRange() *google_protobuf.Timestamp {
	if m != nil {
		return m.BeginRange
	}
	return nil
}

func (m *DateRangeFilter) GetEndRange() *google_protobuf.Timestamp {
	if m != nil {
		return m.EndRange
	}
	return nil
}

// Minimum and maximum probability range to filter on
type ProbabilityRangeFilter struct {
	Minimum float64 `protobuf:"fixed64,1,opt,name=minimum" json:"minimum,omitempty"`
	Maximum float64 `protobuf:"fixed64,2,opt,name=maximum" json:"maximum,omitempty"`
}

func (m *ProbabilityRangeFilter) Reset()                    { *m = ProbabilityRangeFilter{} }
func (m *ProbabilityRangeFilter) String() string            { return proto.CompactTextString(m) }
func (*ProbabilityRangeFilter) ProtoMessage()               {}
func (*ProbabilityRangeFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ProbabilityRangeFilter) GetMinimum() float64 {
	if m != nil {
		return m.Minimum
	}
	return 0
}

func (m *ProbabilityRangeFilter) GetMaximum() float64 {
	if m != nil {
		return m.Maximum
	}
	return 0
}

// List opportunities. Paged.
type ListOpportunitiesRequest struct {
	// id of an account group (deprecated - use filter property account_group_id instead)
	AccountGroupId string `protobuf:"bytes,1,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	// cursor for paging
	Cursor string `protobuf:"bytes,2,opt,name=cursor" json:"cursor,omitempty"`
	// page size for paging
	PageSize int64 `protobuf:"varint,3,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	// A list of sales person ids (deprecated - use filter property sales_person_ids instead)
	SalesPersonIds []string `protobuf:"bytes,4,rep,name=sales_person_ids,json=salesPersonIds" json:"sales_person_ids,omitempty"`
	// Filters used to get list of opportunities
	Filters *ListOpportunitiesRequest_Filters `protobuf:"bytes,5,opt,name=filters" json:"filters,omitempty"`
	// Opportunities list sort option
	SortOption *ListOpportunitiesRequest_SortOption `protobuf:"bytes,6,opt,name=sort_option,json=sortOption" json:"sort_option,omitempty"`
	// The id of the partner to scope the list of opportunities to
	PartnerId string `protobuf:"bytes,7,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// The id of the market to scope the list of opportunities to
	MarketId string `protobuf:"bytes,8,opt,name=market_id,json=marketId" json:"market_id,omitempty"`
}

func (m *ListOpportunitiesRequest) Reset()                    { *m = ListOpportunitiesRequest{} }
func (m *ListOpportunitiesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListOpportunitiesRequest) ProtoMessage()               {}
func (*ListOpportunitiesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ListOpportunitiesRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *ListOpportunitiesRequest) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *ListOpportunitiesRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListOpportunitiesRequest) GetSalesPersonIds() []string {
	if m != nil {
		return m.SalesPersonIds
	}
	return nil
}

func (m *ListOpportunitiesRequest) GetFilters() *ListOpportunitiesRequest_Filters {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *ListOpportunitiesRequest) GetSortOption() *ListOpportunitiesRequest_SortOption {
	if m != nil {
		return m.SortOption
	}
	return nil
}

func (m *ListOpportunitiesRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *ListOpportunitiesRequest) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

// Filters to list opportunities based on given filter criterias
type ListOpportunitiesRequest_Filters struct {
	// id of an account group
	AccountGroupId string `protobuf:"bytes,1,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	// A list of sales person ids
	SalesPersonIds []string `protobuf:"bytes,2,rep,name=sales_person_ids,json=salesPersonIds" json:"sales_person_ids,omitempty"`
	// A list of pipeline stages
	PipelineStages []string `protobuf:"bytes,3,rep,name=pipeline_stages,json=pipelineStages" json:"pipeline_stages,omitempty"`
	// Create date range filter
	CreatedDateFilter *DateRangeFilter `protobuf:"bytes,4,opt,name=created_date_filter,json=createdDateFilter" json:"created_date_filter,omitempty"`
	// Expected close date range filter
	ExpectedCloseDateFilter *DateRangeFilter `protobuf:"bytes,5,opt,name=expected_close_date_filter,json=expectedCloseDateFilter" json:"expected_close_date_filter,omitempty"`
	// Probability range filter
	ProbabilityRangeFilter *ProbabilityRangeFilter `protobuf:"bytes,6,opt,name=probability_range_filter,json=probabilityRangeFilter" json:"probability_range_filter,omitempty"`
	// A list of package ids
	PackageIds []string `protobuf:"bytes,7,rep,name=package_ids,json=packageIds" json:"package_ids,omitempty"`
	// Actual close date range filter
	ActualCloseDateFilter *DateRangeFilter `protobuf:"bytes,8,opt,name=actual_close_date_filter,json=actualCloseDateFilter" json:"actual_close_date_filter,omitempty"`
}

func (m *ListOpportunitiesRequest_Filters) Reset()         { *m = ListOpportunitiesRequest_Filters{} }
func (m *ListOpportunitiesRequest_Filters) String() string { return proto.CompactTextString(m) }
func (*ListOpportunitiesRequest_Filters) ProtoMessage()    {}
func (*ListOpportunitiesRequest_Filters) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{9, 0}
}

func (m *ListOpportunitiesRequest_Filters) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *ListOpportunitiesRequest_Filters) GetSalesPersonIds() []string {
	if m != nil {
		return m.SalesPersonIds
	}
	return nil
}

func (m *ListOpportunitiesRequest_Filters) GetPipelineStages() []string {
	if m != nil {
		return m.PipelineStages
	}
	return nil
}

func (m *ListOpportunitiesRequest_Filters) GetCreatedDateFilter() *DateRangeFilter {
	if m != nil {
		return m.CreatedDateFilter
	}
	return nil
}

func (m *ListOpportunitiesRequest_Filters) GetExpectedCloseDateFilter() *DateRangeFilter {
	if m != nil {
		return m.ExpectedCloseDateFilter
	}
	return nil
}

func (m *ListOpportunitiesRequest_Filters) GetProbabilityRangeFilter() *ProbabilityRangeFilter {
	if m != nil {
		return m.ProbabilityRangeFilter
	}
	return nil
}

func (m *ListOpportunitiesRequest_Filters) GetPackageIds() []string {
	if m != nil {
		return m.PackageIds
	}
	return nil
}

func (m *ListOpportunitiesRequest_Filters) GetActualCloseDateFilter() *DateRangeFilter {
	if m != nil {
		return m.ActualCloseDateFilter
	}
	return nil
}

// Options for controlling the order of query results
type ListOpportunitiesRequest_SortOption struct {
	// A direction to sort results in
	Direction SortDirection `protobuf:"varint,1,opt,name=direction,enum=salesopportunities.v1.SortDirection" json:"direction,omitempty"`
	// Field to sort on
	Field ListOpportunitiesRequest_SortField `protobuf:"varint,2,opt,name=field,enum=salesopportunities.v1.ListOpportunitiesRequest_SortField" json:"field,omitempty"`
}

func (m *ListOpportunitiesRequest_SortOption) Reset()         { *m = ListOpportunitiesRequest_SortOption{} }
func (m *ListOpportunitiesRequest_SortOption) String() string { return proto.CompactTextString(m) }
func (*ListOpportunitiesRequest_SortOption) ProtoMessage()    {}
func (*ListOpportunitiesRequest_SortOption) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{9, 1}
}

func (m *ListOpportunitiesRequest_SortOption) GetDirection() SortDirection {
	if m != nil {
		return m.Direction
	}
	return SortDirection_ASCENDING
}

func (m *ListOpportunitiesRequest_SortOption) GetField() ListOpportunitiesRequest_SortField {
	if m != nil {
		return m.Field
	}
	return ListOpportunitiesRequest_PROJECTED_FIRST_YEAR_VALUE
}

type GetOpportunityCountByAccountGroupsRequest struct {
	AccountGroupIds []string `protobuf:"bytes,1,rep,name=account_group_ids,json=accountGroupIds" json:"account_group_ids,omitempty"`
}

func (m *GetOpportunityCountByAccountGroupsRequest) Reset() {
	*m = GetOpportunityCountByAccountGroupsRequest{}
}
func (m *GetOpportunityCountByAccountGroupsRequest) String() string { return proto.CompactTextString(m) }
func (*GetOpportunityCountByAccountGroupsRequest) ProtoMessage()    {}
func (*GetOpportunityCountByAccountGroupsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{10}
}

func (m *GetOpportunityCountByAccountGroupsRequest) GetAccountGroupIds() []string {
	if m != nil {
		return m.AccountGroupIds
	}
	return nil
}

type UpdateOpportunityNameRequest struct {
	OpportunityId     string `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	AccountGroupId    string `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	EditSalesPersonId string `protobuf:"bytes,3,opt,name=edit_sales_person_id,json=editSalesPersonId" json:"edit_sales_person_id,omitempty"`
	Name              string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
}

func (m *UpdateOpportunityNameRequest) Reset()                    { *m = UpdateOpportunityNameRequest{} }
func (m *UpdateOpportunityNameRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateOpportunityNameRequest) ProtoMessage()               {}
func (*UpdateOpportunityNameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *UpdateOpportunityNameRequest) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *UpdateOpportunityNameRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *UpdateOpportunityNameRequest) GetEditSalesPersonId() string {
	if m != nil {
		return m.EditSalesPersonId
	}
	return ""
}

func (m *UpdateOpportunityNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateOpportunityProbabilityRequest struct {
	OpportunityId     string  `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	AccountGroupId    string  `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	EditSalesPersonId string  `protobuf:"bytes,3,opt,name=edit_sales_person_id,json=editSalesPersonId" json:"edit_sales_person_id,omitempty"`
	Probability       float64 `protobuf:"fixed64,4,opt,name=probability" json:"probability,omitempty"`
}

func (m *UpdateOpportunityProbabilityRequest) Reset()         { *m = UpdateOpportunityProbabilityRequest{} }
func (m *UpdateOpportunityProbabilityRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateOpportunityProbabilityRequest) ProtoMessage()    {}
func (*UpdateOpportunityProbabilityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12}
}

func (m *UpdateOpportunityProbabilityRequest) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *UpdateOpportunityProbabilityRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *UpdateOpportunityProbabilityRequest) GetEditSalesPersonId() string {
	if m != nil {
		return m.EditSalesPersonId
	}
	return ""
}

func (m *UpdateOpportunityProbabilityRequest) GetProbability() float64 {
	if m != nil {
		return m.Probability
	}
	return 0
}

type UpdateOpportunitySalespersonRequest struct {
	OpportunityId     string `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	AccountGroupId    string `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	EditSalesPersonId string `protobuf:"bytes,3,opt,name=edit_sales_person_id,json=editSalesPersonId" json:"edit_sales_person_id,omitempty"`
	SalesPersonId     string `protobuf:"bytes,4,opt,name=sales_person_id,json=salesPersonId" json:"sales_person_id,omitempty"`
}

func (m *UpdateOpportunitySalespersonRequest) Reset()         { *m = UpdateOpportunitySalespersonRequest{} }
func (m *UpdateOpportunitySalespersonRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateOpportunitySalespersonRequest) ProtoMessage()    {}
func (*UpdateOpportunitySalespersonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{13}
}

func (m *UpdateOpportunitySalespersonRequest) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *UpdateOpportunitySalespersonRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *UpdateOpportunitySalespersonRequest) GetEditSalesPersonId() string {
	if m != nil {
		return m.EditSalesPersonId
	}
	return ""
}

func (m *UpdateOpportunitySalespersonRequest) GetSalesPersonId() string {
	if m != nil {
		return m.SalesPersonId
	}
	return ""
}

type UpdateOpportunityExpectedCloseDateRequest struct {
	OpportunityId     string                     `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	AccountGroupId    string                     `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	EditSalesPersonId string                     `protobuf:"bytes,3,opt,name=edit_sales_person_id,json=editSalesPersonId" json:"edit_sales_person_id,omitempty"`
	ExpectedCloseDate *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=expected_close_date,json=expectedCloseDate" json:"expected_close_date,omitempty"`
}

func (m *UpdateOpportunityExpectedCloseDateRequest) Reset() {
	*m = UpdateOpportunityExpectedCloseDateRequest{}
}
func (m *UpdateOpportunityExpectedCloseDateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateOpportunityExpectedCloseDateRequest) ProtoMessage()    {}
func (*UpdateOpportunityExpectedCloseDateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{14}
}

func (m *UpdateOpportunityExpectedCloseDateRequest) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *UpdateOpportunityExpectedCloseDateRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *UpdateOpportunityExpectedCloseDateRequest) GetEditSalesPersonId() string {
	if m != nil {
		return m.EditSalesPersonId
	}
	return ""
}

func (m *UpdateOpportunityExpectedCloseDateRequest) GetExpectedCloseDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.ExpectedCloseDate
	}
	return nil
}

type UpdateOpportunityNotesRequest struct {
	OpportunityId     string `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	AccountGroupId    string `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	EditSalesPersonId string `protobuf:"bytes,3,opt,name=edit_sales_person_id,json=editSalesPersonId" json:"edit_sales_person_id,omitempty"`
	Notes             string `protobuf:"bytes,4,opt,name=notes" json:"notes,omitempty"`
}

func (m *UpdateOpportunityNotesRequest) Reset()                    { *m = UpdateOpportunityNotesRequest{} }
func (m *UpdateOpportunityNotesRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateOpportunityNotesRequest) ProtoMessage()               {}
func (*UpdateOpportunityNotesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *UpdateOpportunityNotesRequest) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *UpdateOpportunityNotesRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *UpdateOpportunityNotesRequest) GetEditSalesPersonId() string {
	if m != nil {
		return m.EditSalesPersonId
	}
	return ""
}

func (m *UpdateOpportunityNotesRequest) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

type AddOpportunityPackagesRequest struct {
	OpportunityId     string   `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	AccountGroupId    string   `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	EditSalesPersonId string   `protobuf:"bytes,3,opt,name=edit_sales_person_id,json=editSalesPersonId" json:"edit_sales_person_id,omitempty"`
	PackageIds        []string `protobuf:"bytes,4,rep,name=package_ids,json=packageIds" json:"package_ids,omitempty"`
}

func (m *AddOpportunityPackagesRequest) Reset()                    { *m = AddOpportunityPackagesRequest{} }
func (m *AddOpportunityPackagesRequest) String() string            { return proto.CompactTextString(m) }
func (*AddOpportunityPackagesRequest) ProtoMessage()               {}
func (*AddOpportunityPackagesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *AddOpportunityPackagesRequest) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *AddOpportunityPackagesRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *AddOpportunityPackagesRequest) GetEditSalesPersonId() string {
	if m != nil {
		return m.EditSalesPersonId
	}
	return ""
}

func (m *AddOpportunityPackagesRequest) GetPackageIds() []string {
	if m != nil {
		return m.PackageIds
	}
	return nil
}

type RemoveOpportunityPackagesRequest struct {
	OpportunityId     string   `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	AccountGroupId    string   `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	EditSalesPersonId string   `protobuf:"bytes,3,opt,name=edit_sales_person_id,json=editSalesPersonId" json:"edit_sales_person_id,omitempty"`
	PackageIds        []string `protobuf:"bytes,4,rep,name=package_ids,json=packageIds" json:"package_ids,omitempty"`
}

func (m *RemoveOpportunityPackagesRequest) Reset()         { *m = RemoveOpportunityPackagesRequest{} }
func (m *RemoveOpportunityPackagesRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveOpportunityPackagesRequest) ProtoMessage()    {}
func (*RemoveOpportunityPackagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{17}
}

func (m *RemoveOpportunityPackagesRequest) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *RemoveOpportunityPackagesRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *RemoveOpportunityPackagesRequest) GetEditSalesPersonId() string {
	if m != nil {
		return m.EditSalesPersonId
	}
	return ""
}

func (m *RemoveOpportunityPackagesRequest) GetPackageIds() []string {
	if m != nil {
		return m.PackageIds
	}
	return nil
}

type UpdateOpportunityPackageRevenueRequest struct {
	OpportunityId     string   `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	AccountGroupId    string   `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	EditSalesPersonId string   `protobuf:"bytes,3,opt,name=edit_sales_person_id,json=editSalesPersonId" json:"edit_sales_person_id,omitempty"`
	PackageId         string   `protobuf:"bytes,4,opt,name=package_id,json=packageId" json:"package_id,omitempty"`
	Revenue           *Revenue `protobuf:"bytes,5,opt,name=revenue" json:"revenue,omitempty"`
}

func (m *UpdateOpportunityPackageRevenueRequest) Reset() {
	*m = UpdateOpportunityPackageRevenueRequest{}
}
func (m *UpdateOpportunityPackageRevenueRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateOpportunityPackageRevenueRequest) ProtoMessage()    {}
func (*UpdateOpportunityPackageRevenueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{18}
}

func (m *UpdateOpportunityPackageRevenueRequest) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *UpdateOpportunityPackageRevenueRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *UpdateOpportunityPackageRevenueRequest) GetEditSalesPersonId() string {
	if m != nil {
		return m.EditSalesPersonId
	}
	return ""
}

func (m *UpdateOpportunityPackageRevenueRequest) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *UpdateOpportunityPackageRevenueRequest) GetRevenue() *Revenue {
	if m != nil {
		return m.Revenue
	}
	return nil
}

type UpdateOpportunityPackageRequest struct {
	OpportunityId     string   `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	AccountGroupId    string   `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	EditSalesPersonId string   `protobuf:"bytes,3,opt,name=edit_sales_person_id,json=editSalesPersonId" json:"edit_sales_person_id,omitempty"`
	PackageId         string   `protobuf:"bytes,4,opt,name=package_id,json=packageId" json:"package_id,omitempty"`
	CurrentRevenue    *Revenue `protobuf:"bytes,5,opt,name=current_revenue,json=currentRevenue" json:"current_revenue,omitempty"`
	// Quantity of the package in the opportunity, a multiplier for the package's potential revenue
	Quantity int64 `protobuf:"varint,6,opt,name=quantity" json:"quantity,omitempty"`
}

func (m *UpdateOpportunityPackageRequest) Reset()         { *m = UpdateOpportunityPackageRequest{} }
func (m *UpdateOpportunityPackageRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateOpportunityPackageRequest) ProtoMessage()    {}
func (*UpdateOpportunityPackageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{19}
}

func (m *UpdateOpportunityPackageRequest) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *UpdateOpportunityPackageRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *UpdateOpportunityPackageRequest) GetEditSalesPersonId() string {
	if m != nil {
		return m.EditSalesPersonId
	}
	return ""
}

func (m *UpdateOpportunityPackageRequest) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *UpdateOpportunityPackageRequest) GetCurrentRevenue() *Revenue {
	if m != nil {
		return m.CurrentRevenue
	}
	return nil
}

func (m *UpdateOpportunityPackageRequest) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

// Move an opportunity into a closed won stage in the pipeline
type CloseAsWonOpportunityRequest struct {
	// ID of the opportunity to close
	OpportunityId string `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	// ID of the account group the opportunity belongs to
	AccountGroupId string `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	// ID of the sales person who closed this opportunity
	EditSalesPersonId string `protobuf:"bytes,3,opt,name=edit_sales_person_id,json=editSalesPersonId" json:"edit_sales_person_id,omitempty"`
}

func (m *CloseAsWonOpportunityRequest) Reset()                    { *m = CloseAsWonOpportunityRequest{} }
func (m *CloseAsWonOpportunityRequest) String() string            { return proto.CompactTextString(m) }
func (*CloseAsWonOpportunityRequest) ProtoMessage()               {}
func (*CloseAsWonOpportunityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *CloseAsWonOpportunityRequest) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *CloseAsWonOpportunityRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *CloseAsWonOpportunityRequest) GetEditSalesPersonId() string {
	if m != nil {
		return m.EditSalesPersonId
	}
	return ""
}

// Move an opportunity into a closed lost stage in the pipeline
type CloseAsLostOpportunityRequest struct {
	// ID of the opportunity to close
	OpportunityId string `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	// ID of the account group the opportunity belongs to
	AccountGroupId string `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	// ID of the sales person who closed this opportunity
	EditSalesPersonId string `protobuf:"bytes,3,opt,name=edit_sales_person_id,json=editSalesPersonId" json:"edit_sales_person_id,omitempty"`
	// Reason why this opportunity was lost
	Reason ClosedLostReasonOption `protobuf:"varint,4,opt,name=reason,enum=salesopportunities.v1.ClosedLostReasonOption" json:"reason,omitempty"`
}

func (m *CloseAsLostOpportunityRequest) Reset()                    { *m = CloseAsLostOpportunityRequest{} }
func (m *CloseAsLostOpportunityRequest) String() string            { return proto.CompactTextString(m) }
func (*CloseAsLostOpportunityRequest) ProtoMessage()               {}
func (*CloseAsLostOpportunityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *CloseAsLostOpportunityRequest) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *CloseAsLostOpportunityRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *CloseAsLostOpportunityRequest) GetEditSalesPersonId() string {
	if m != nil {
		return m.EditSalesPersonId
	}
	return ""
}

func (m *CloseAsLostOpportunityRequest) GetReason() ClosedLostReasonOption {
	if m != nil {
		return m.Reason
	}
	return ClosedLostReasonOption_PRICE
}

type UpdateLastConnectedDateRequest struct {
	// ID of the opportunity to update
	OpportunityId string `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	// ID of the account group the opportunity belongs to
	AccountGroupId string `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	// ID of the sales person who updated this opportunity
	EditSalesPersonId string `protobuf:"bytes,3,opt,name=edit_sales_person_id,json=editSalesPersonId" json:"edit_sales_person_id,omitempty"`
	// The last connected date
	LastConnectedDate *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=last_connected_date,json=lastConnectedDate" json:"last_connected_date,omitempty"`
}

func (m *UpdateLastConnectedDateRequest) Reset()                    { *m = UpdateLastConnectedDateRequest{} }
func (m *UpdateLastConnectedDateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateLastConnectedDateRequest) ProtoMessage()               {}
func (*UpdateLastConnectedDateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *UpdateLastConnectedDateRequest) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *UpdateLastConnectedDateRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *UpdateLastConnectedDateRequest) GetEditSalesPersonId() string {
	if m != nil {
		return m.EditSalesPersonId
	}
	return ""
}

func (m *UpdateLastConnectedDateRequest) GetLastConnectedDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.LastConnectedDate
	}
	return nil
}

type UpdateLastActivityDateRequest struct {
	// ID of the opportunity to update
	OpportunityId string `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	// ID of the account group the opportunity belongs to
	AccountGroupId string `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	// ID of the sales person who updated this opportunity
	EditSalesPersonId string `protobuf:"bytes,3,opt,name=edit_sales_person_id,json=editSalesPersonId" json:"edit_sales_person_id,omitempty"`
	// The last activity date
	LastActivityDate *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=last_activity_date,json=lastActivityDate" json:"last_activity_date,omitempty"`
	// Flag to indicate that this activity resulted in a connection
	Connected bool `protobuf:"varint,5,opt,name=connected" json:"connected,omitempty"`
}

func (m *UpdateLastActivityDateRequest) Reset()                    { *m = UpdateLastActivityDateRequest{} }
func (m *UpdateLastActivityDateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateLastActivityDateRequest) ProtoMessage()               {}
func (*UpdateLastActivityDateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *UpdateLastActivityDateRequest) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *UpdateLastActivityDateRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *UpdateLastActivityDateRequest) GetEditSalesPersonId() string {
	if m != nil {
		return m.EditSalesPersonId
	}
	return ""
}

func (m *UpdateLastActivityDateRequest) GetLastActivityDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.LastActivityDate
	}
	return nil
}

func (m *UpdateLastActivityDateRequest) GetConnected() bool {
	if m != nil {
		return m.Connected
	}
	return false
}

type DeleteOpportunityRequest struct {
	// ID of the opportunity to delete
	OpportunityId string `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	// ID of the account group the opportunity belongs to
	AccountGroupId string `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	// ID of the sales person who deleted this opportunity
	EditSalesPersonId string `protobuf:"bytes,3,opt,name=edit_sales_person_id,json=editSalesPersonId" json:"edit_sales_person_id,omitempty"`
}

func (m *DeleteOpportunityRequest) Reset()                    { *m = DeleteOpportunityRequest{} }
func (m *DeleteOpportunityRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteOpportunityRequest) ProtoMessage()               {}
func (*DeleteOpportunityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *DeleteOpportunityRequest) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *DeleteOpportunityRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *DeleteOpportunityRequest) GetEditSalesPersonId() string {
	if m != nil {
		return m.EditSalesPersonId
	}
	return ""
}

type ReopenClosedOpportunityRequest struct {
	// ID of the opportunity to reopen
	OpportunityId string `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	// ID of the account group the opportunity belongs to
	AccountGroupId string `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	// ID of the sales person who reopened the opportunity
	EditSalesPersonId string `protobuf:"bytes,3,opt,name=edit_sales_person_id,json=editSalesPersonId" json:"edit_sales_person_id,omitempty"`
	// Reason for reopening the opportunity
	Reason string `protobuf:"bytes,4,opt,name=reason" json:"reason,omitempty"`
}

func (m *ReopenClosedOpportunityRequest) Reset()                    { *m = ReopenClosedOpportunityRequest{} }
func (m *ReopenClosedOpportunityRequest) String() string            { return proto.CompactTextString(m) }
func (*ReopenClosedOpportunityRequest) ProtoMessage()               {}
func (*ReopenClosedOpportunityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *ReopenClosedOpportunityRequest) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *ReopenClosedOpportunityRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *ReopenClosedOpportunityRequest) GetEditSalesPersonId() string {
	if m != nil {
		return m.EditSalesPersonId
	}
	return ""
}

func (m *ReopenClosedOpportunityRequest) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type UpdateOpportunityMarketRequest struct {
	// ID of the opportunity to update
	OpportunityId string `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	// ID of the account group the opportunity belongs to
	AccountGroupId string `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	// ID of the sales person who updated this opportunity
	EditSalesPersonId string `protobuf:"bytes,3,opt,name=edit_sales_person_id,json=editSalesPersonId" json:"edit_sales_person_id,omitempty"`
	// The market id for the opportunity
	MarketId string `protobuf:"bytes,4,opt,name=market_id,json=marketId" json:"market_id,omitempty"`
}

func (m *UpdateOpportunityMarketRequest) Reset()                    { *m = UpdateOpportunityMarketRequest{} }
func (m *UpdateOpportunityMarketRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateOpportunityMarketRequest) ProtoMessage()               {}
func (*UpdateOpportunityMarketRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *UpdateOpportunityMarketRequest) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *UpdateOpportunityMarketRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *UpdateOpportunityMarketRequest) GetEditSalesPersonId() string {
	if m != nil {
		return m.EditSalesPersonId
	}
	return ""
}

func (m *UpdateOpportunityMarketRequest) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

// *******************
// Responses
// *******************
type CreateOpportunityResponse struct {
	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity" json:"opportunity,omitempty"`
}

func (m *CreateOpportunityResponse) Reset()                    { *m = CreateOpportunityResponse{} }
func (m *CreateOpportunityResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateOpportunityResponse) ProtoMessage()               {}
func (*CreateOpportunityResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *CreateOpportunityResponse) GetOpportunity() *Opportunity {
	if m != nil {
		return m.Opportunity
	}
	return nil
}

type GetOpportunityResponse struct {
	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity" json:"opportunity,omitempty"`
}

func (m *GetOpportunityResponse) Reset()                    { *m = GetOpportunityResponse{} }
func (m *GetOpportunityResponse) String() string            { return proto.CompactTextString(m) }
func (*GetOpportunityResponse) ProtoMessage()               {}
func (*GetOpportunityResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *GetOpportunityResponse) GetOpportunity() *Opportunity {
	if m != nil {
		return m.Opportunity
	}
	return nil
}

type ListOpportunitiesResponse struct {
	// List of opportunities
	Results []*Opportunity `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
	// A cursor that can be provided to retrieve the next page of results
	NextCursor string `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor" json:"next_cursor,omitempty"`
	// Whether or not more results exist
	HasMore bool `protobuf:"varint,3,opt,name=has_more,json=hasMore" json:"has_more,omitempty"`
	// The total number of results for this query across all pages
	TotalResults int64 `protobuf:"varint,4,opt,name=total_results,json=totalResults" json:"total_results,omitempty"`
	// The sum total number of projected first year values for this query across all pages
	TotalProjectedFirstYearValue int64 `protobuf:"varint,5,opt,name=total_projected_first_year_value,json=totalProjectedFirstYearValue" json:"total_projected_first_year_value,omitempty"`
}

func (m *ListOpportunitiesResponse) Reset()                    { *m = ListOpportunitiesResponse{} }
func (m *ListOpportunitiesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListOpportunitiesResponse) ProtoMessage()               {}
func (*ListOpportunitiesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *ListOpportunitiesResponse) GetResults() []*Opportunity {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *ListOpportunitiesResponse) GetNextCursor() string {
	if m != nil {
		return m.NextCursor
	}
	return ""
}

func (m *ListOpportunitiesResponse) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *ListOpportunitiesResponse) GetTotalResults() int64 {
	if m != nil {
		return m.TotalResults
	}
	return 0
}

func (m *ListOpportunitiesResponse) GetTotalProjectedFirstYearValue() int64 {
	if m != nil {
		return m.TotalProjectedFirstYearValue
	}
	return 0
}

type OpportunityCount struct {
	AccountGroupId string `protobuf:"bytes,1,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	Count          int64  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *OpportunityCount) Reset()                    { *m = OpportunityCount{} }
func (m *OpportunityCount) String() string            { return proto.CompactTextString(m) }
func (*OpportunityCount) ProtoMessage()               {}
func (*OpportunityCount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *OpportunityCount) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *OpportunityCount) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetOpportunityCountByAccountGroupsResponse struct {
	Results []*OpportunityCount `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (m *GetOpportunityCountByAccountGroupsResponse) Reset() {
	*m = GetOpportunityCountByAccountGroupsResponse{}
}
func (m *GetOpportunityCountByAccountGroupsResponse) String() string {
	return proto.CompactTextString(m)
}
func (*GetOpportunityCountByAccountGroupsResponse) ProtoMessage() {}
func (*GetOpportunityCountByAccountGroupsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{31}
}

func (m *GetOpportunityCountByAccountGroupsResponse) GetResults() []*OpportunityCount {
	if m != nil {
		return m.Results
	}
	return nil
}

type UpdateOpportunityNameResponse struct {
	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity" json:"opportunity,omitempty"`
}

func (m *UpdateOpportunityNameResponse) Reset()                    { *m = UpdateOpportunityNameResponse{} }
func (m *UpdateOpportunityNameResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateOpportunityNameResponse) ProtoMessage()               {}
func (*UpdateOpportunityNameResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *UpdateOpportunityNameResponse) GetOpportunity() *Opportunity {
	if m != nil {
		return m.Opportunity
	}
	return nil
}

type UpdateOpportunityProbabilityResponse struct {
	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity" json:"opportunity,omitempty"`
}

func (m *UpdateOpportunityProbabilityResponse) Reset()         { *m = UpdateOpportunityProbabilityResponse{} }
func (m *UpdateOpportunityProbabilityResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateOpportunityProbabilityResponse) ProtoMessage()    {}
func (*UpdateOpportunityProbabilityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{33}
}

func (m *UpdateOpportunityProbabilityResponse) GetOpportunity() *Opportunity {
	if m != nil {
		return m.Opportunity
	}
	return nil
}

type UpdateOpportunitySalespersonResponse struct {
	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity" json:"opportunity,omitempty"`
}

func (m *UpdateOpportunitySalespersonResponse) Reset()         { *m = UpdateOpportunitySalespersonResponse{} }
func (m *UpdateOpportunitySalespersonResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateOpportunitySalespersonResponse) ProtoMessage()    {}
func (*UpdateOpportunitySalespersonResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{34}
}

func (m *UpdateOpportunitySalespersonResponse) GetOpportunity() *Opportunity {
	if m != nil {
		return m.Opportunity
	}
	return nil
}

type UpdateOpportunityExpectedCloseDateResponse struct {
	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity" json:"opportunity,omitempty"`
}

func (m *UpdateOpportunityExpectedCloseDateResponse) Reset() {
	*m = UpdateOpportunityExpectedCloseDateResponse{}
}
func (m *UpdateOpportunityExpectedCloseDateResponse) String() string {
	return proto.CompactTextString(m)
}
func (*UpdateOpportunityExpectedCloseDateResponse) ProtoMessage() {}
func (*UpdateOpportunityExpectedCloseDateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{35}
}

func (m *UpdateOpportunityExpectedCloseDateResponse) GetOpportunity() *Opportunity {
	if m != nil {
		return m.Opportunity
	}
	return nil
}

type UpdateOpportunityNotesResponse struct {
	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity" json:"opportunity,omitempty"`
}

func (m *UpdateOpportunityNotesResponse) Reset()                    { *m = UpdateOpportunityNotesResponse{} }
func (m *UpdateOpportunityNotesResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateOpportunityNotesResponse) ProtoMessage()               {}
func (*UpdateOpportunityNotesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *UpdateOpportunityNotesResponse) GetOpportunity() *Opportunity {
	if m != nil {
		return m.Opportunity
	}
	return nil
}

type AddOpportunityPackagesResponse struct {
	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity" json:"opportunity,omitempty"`
}

func (m *AddOpportunityPackagesResponse) Reset()                    { *m = AddOpportunityPackagesResponse{} }
func (m *AddOpportunityPackagesResponse) String() string            { return proto.CompactTextString(m) }
func (*AddOpportunityPackagesResponse) ProtoMessage()               {}
func (*AddOpportunityPackagesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *AddOpportunityPackagesResponse) GetOpportunity() *Opportunity {
	if m != nil {
		return m.Opportunity
	}
	return nil
}

type RemoveOpportunityPackagesResponse struct {
	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity" json:"opportunity,omitempty"`
}

func (m *RemoveOpportunityPackagesResponse) Reset()         { *m = RemoveOpportunityPackagesResponse{} }
func (m *RemoveOpportunityPackagesResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveOpportunityPackagesResponse) ProtoMessage()    {}
func (*RemoveOpportunityPackagesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{38}
}

func (m *RemoveOpportunityPackagesResponse) GetOpportunity() *Opportunity {
	if m != nil {
		return m.Opportunity
	}
	return nil
}

type UpdateOpportunityPackageRevenueResponse struct {
	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity" json:"opportunity,omitempty"`
}

func (m *UpdateOpportunityPackageRevenueResponse) Reset() {
	*m = UpdateOpportunityPackageRevenueResponse{}
}
func (m *UpdateOpportunityPackageRevenueResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateOpportunityPackageRevenueResponse) ProtoMessage()    {}
func (*UpdateOpportunityPackageRevenueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{39}
}

func (m *UpdateOpportunityPackageRevenueResponse) GetOpportunity() *Opportunity {
	if m != nil {
		return m.Opportunity
	}
	return nil
}

type UpdateOpportunityPackageResponse struct {
	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity" json:"opportunity,omitempty"`
}

func (m *UpdateOpportunityPackageResponse) Reset()         { *m = UpdateOpportunityPackageResponse{} }
func (m *UpdateOpportunityPackageResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateOpportunityPackageResponse) ProtoMessage()    {}
func (*UpdateOpportunityPackageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{40}
}

func (m *UpdateOpportunityPackageResponse) GetOpportunity() *Opportunity {
	if m != nil {
		return m.Opportunity
	}
	return nil
}

type UpdateLastConnectedDateResponse struct {
	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity" json:"opportunity,omitempty"`
}

func (m *UpdateLastConnectedDateResponse) Reset()         { *m = UpdateLastConnectedDateResponse{} }
func (m *UpdateLastConnectedDateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateLastConnectedDateResponse) ProtoMessage()    {}
func (*UpdateLastConnectedDateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{41}
}

func (m *UpdateLastConnectedDateResponse) GetOpportunity() *Opportunity {
	if m != nil {
		return m.Opportunity
	}
	return nil
}

type UpdateLastActivityDateResponse struct {
	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity" json:"opportunity,omitempty"`
}

func (m *UpdateLastActivityDateResponse) Reset()                    { *m = UpdateLastActivityDateResponse{} }
func (m *UpdateLastActivityDateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateLastActivityDateResponse) ProtoMessage()               {}
func (*UpdateLastActivityDateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *UpdateLastActivityDateResponse) GetOpportunity() *Opportunity {
	if m != nil {
		return m.Opportunity
	}
	return nil
}

// Response to a request to close an opportunity which has been won
type CloseAsWonOpportunityResponse struct {
	// The opportunity's new state
	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity" json:"opportunity,omitempty"`
}

func (m *CloseAsWonOpportunityResponse) Reset()                    { *m = CloseAsWonOpportunityResponse{} }
func (m *CloseAsWonOpportunityResponse) String() string            { return proto.CompactTextString(m) }
func (*CloseAsWonOpportunityResponse) ProtoMessage()               {}
func (*CloseAsWonOpportunityResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *CloseAsWonOpportunityResponse) GetOpportunity() *Opportunity {
	if m != nil {
		return m.Opportunity
	}
	return nil
}

// Response to a request to close an opportunity which has been lost
type CloseAsLostOpportunityResponse struct {
	// The opportunity's new state
	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity" json:"opportunity,omitempty"`
}

func (m *CloseAsLostOpportunityResponse) Reset()                    { *m = CloseAsLostOpportunityResponse{} }
func (m *CloseAsLostOpportunityResponse) String() string            { return proto.CompactTextString(m) }
func (*CloseAsLostOpportunityResponse) ProtoMessage()               {}
func (*CloseAsLostOpportunityResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *CloseAsLostOpportunityResponse) GetOpportunity() *Opportunity {
	if m != nil {
		return m.Opportunity
	}
	return nil
}

type UpdateOpportunityMarketResponse struct {
	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity" json:"opportunity,omitempty"`
}

func (m *UpdateOpportunityMarketResponse) Reset()         { *m = UpdateOpportunityMarketResponse{} }
func (m *UpdateOpportunityMarketResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateOpportunityMarketResponse) ProtoMessage()    {}
func (*UpdateOpportunityMarketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{45}
}

func (m *UpdateOpportunityMarketResponse) GetOpportunity() *Opportunity {
	if m != nil {
		return m.Opportunity
	}
	return nil
}

func init() {
	proto.RegisterType((*Package)(nil), "salesopportunities.v1.Package")
	proto.RegisterType((*RevenueComponent)(nil), "salesopportunities.v1.RevenueComponent")
	proto.RegisterType((*Revenue)(nil), "salesopportunities.v1.Revenue")
	proto.RegisterType((*ClosedLostReason)(nil), "salesopportunities.v1.ClosedLostReason")
	proto.RegisterType((*Opportunity)(nil), "salesopportunities.v1.Opportunity")
	proto.RegisterType((*CreateOpportunityRequest)(nil), "salesopportunities.v1.CreateOpportunityRequest")
	proto.RegisterType((*CreateOpportunityRequest_CreateOpportunityPackage)(nil), "salesopportunities.v1.CreateOpportunityRequest.CreateOpportunityPackage")
	proto.RegisterType((*GetOpportunityRequest)(nil), "salesopportunities.v1.GetOpportunityRequest")
	proto.RegisterType((*DateRangeFilter)(nil), "salesopportunities.v1.DateRangeFilter")
	proto.RegisterType((*ProbabilityRangeFilter)(nil), "salesopportunities.v1.ProbabilityRangeFilter")
	proto.RegisterType((*ListOpportunitiesRequest)(nil), "salesopportunities.v1.ListOpportunitiesRequest")
	proto.RegisterType((*ListOpportunitiesRequest_Filters)(nil), "salesopportunities.v1.ListOpportunitiesRequest.Filters")
	proto.RegisterType((*ListOpportunitiesRequest_SortOption)(nil), "salesopportunities.v1.ListOpportunitiesRequest.SortOption")
	proto.RegisterType((*GetOpportunityCountByAccountGroupsRequest)(nil), "salesopportunities.v1.GetOpportunityCountByAccountGroupsRequest")
	proto.RegisterType((*UpdateOpportunityNameRequest)(nil), "salesopportunities.v1.UpdateOpportunityNameRequest")
	proto.RegisterType((*UpdateOpportunityProbabilityRequest)(nil), "salesopportunities.v1.UpdateOpportunityProbabilityRequest")
	proto.RegisterType((*UpdateOpportunitySalespersonRequest)(nil), "salesopportunities.v1.UpdateOpportunitySalespersonRequest")
	proto.RegisterType((*UpdateOpportunityExpectedCloseDateRequest)(nil), "salesopportunities.v1.UpdateOpportunityExpectedCloseDateRequest")
	proto.RegisterType((*UpdateOpportunityNotesRequest)(nil), "salesopportunities.v1.UpdateOpportunityNotesRequest")
	proto.RegisterType((*AddOpportunityPackagesRequest)(nil), "salesopportunities.v1.AddOpportunityPackagesRequest")
	proto.RegisterType((*RemoveOpportunityPackagesRequest)(nil), "salesopportunities.v1.RemoveOpportunityPackagesRequest")
	proto.RegisterType((*UpdateOpportunityPackageRevenueRequest)(nil), "salesopportunities.v1.UpdateOpportunityPackageRevenueRequest")
	proto.RegisterType((*UpdateOpportunityPackageRequest)(nil), "salesopportunities.v1.UpdateOpportunityPackageRequest")
	proto.RegisterType((*CloseAsWonOpportunityRequest)(nil), "salesopportunities.v1.CloseAsWonOpportunityRequest")
	proto.RegisterType((*CloseAsLostOpportunityRequest)(nil), "salesopportunities.v1.CloseAsLostOpportunityRequest")
	proto.RegisterType((*UpdateLastConnectedDateRequest)(nil), "salesopportunities.v1.UpdateLastConnectedDateRequest")
	proto.RegisterType((*UpdateLastActivityDateRequest)(nil), "salesopportunities.v1.UpdateLastActivityDateRequest")
	proto.RegisterType((*DeleteOpportunityRequest)(nil), "salesopportunities.v1.DeleteOpportunityRequest")
	proto.RegisterType((*ReopenClosedOpportunityRequest)(nil), "salesopportunities.v1.ReopenClosedOpportunityRequest")
	proto.RegisterType((*UpdateOpportunityMarketRequest)(nil), "salesopportunities.v1.UpdateOpportunityMarketRequest")
	proto.RegisterType((*CreateOpportunityResponse)(nil), "salesopportunities.v1.CreateOpportunityResponse")
	proto.RegisterType((*GetOpportunityResponse)(nil), "salesopportunities.v1.GetOpportunityResponse")
	proto.RegisterType((*ListOpportunitiesResponse)(nil), "salesopportunities.v1.ListOpportunitiesResponse")
	proto.RegisterType((*OpportunityCount)(nil), "salesopportunities.v1.OpportunityCount")
	proto.RegisterType((*GetOpportunityCountByAccountGroupsResponse)(nil), "salesopportunities.v1.GetOpportunityCountByAccountGroupsResponse")
	proto.RegisterType((*UpdateOpportunityNameResponse)(nil), "salesopportunities.v1.UpdateOpportunityNameResponse")
	proto.RegisterType((*UpdateOpportunityProbabilityResponse)(nil), "salesopportunities.v1.UpdateOpportunityProbabilityResponse")
	proto.RegisterType((*UpdateOpportunitySalespersonResponse)(nil), "salesopportunities.v1.UpdateOpportunitySalespersonResponse")
	proto.RegisterType((*UpdateOpportunityExpectedCloseDateResponse)(nil), "salesopportunities.v1.UpdateOpportunityExpectedCloseDateResponse")
	proto.RegisterType((*UpdateOpportunityNotesResponse)(nil), "salesopportunities.v1.UpdateOpportunityNotesResponse")
	proto.RegisterType((*AddOpportunityPackagesResponse)(nil), "salesopportunities.v1.AddOpportunityPackagesResponse")
	proto.RegisterType((*RemoveOpportunityPackagesResponse)(nil), "salesopportunities.v1.RemoveOpportunityPackagesResponse")
	proto.RegisterType((*UpdateOpportunityPackageRevenueResponse)(nil), "salesopportunities.v1.UpdateOpportunityPackageRevenueResponse")
	proto.RegisterType((*UpdateOpportunityPackageResponse)(nil), "salesopportunities.v1.UpdateOpportunityPackageResponse")
	proto.RegisterType((*UpdateLastConnectedDateResponse)(nil), "salesopportunities.v1.UpdateLastConnectedDateResponse")
	proto.RegisterType((*UpdateLastActivityDateResponse)(nil), "salesopportunities.v1.UpdateLastActivityDateResponse")
	proto.RegisterType((*CloseAsWonOpportunityResponse)(nil), "salesopportunities.v1.CloseAsWonOpportunityResponse")
	proto.RegisterType((*CloseAsLostOpportunityResponse)(nil), "salesopportunities.v1.CloseAsLostOpportunityResponse")
	proto.RegisterType((*UpdateOpportunityMarketResponse)(nil), "salesopportunities.v1.UpdateOpportunityMarketResponse")
	proto.RegisterEnum("salesopportunities.v1.RevenuePeriod", RevenuePeriod_name, RevenuePeriod_value)
	proto.RegisterEnum("salesopportunities.v1.Currency", Currency_name, Currency_value)
	proto.RegisterEnum("salesopportunities.v1.ClosedLostReasonOption", ClosedLostReasonOption_name, ClosedLostReasonOption_value)
	proto.RegisterEnum("salesopportunities.v1.SortDirection", SortDirection_name, SortDirection_value)
	proto.RegisterEnum("salesopportunities.v1.ListOpportunitiesRequest_SortField", ListOpportunitiesRequest_SortField_name, ListOpportunitiesRequest_SortField_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SalesOpportunities service

type SalesOpportunitiesClient interface {
	CreateOpportunity(ctx context.Context, in *CreateOpportunityRequest, opts ...grpc.CallOption) (*CreateOpportunityResponse, error)
	GetOpportunity(ctx context.Context, in *GetOpportunityRequest, opts ...grpc.CallOption) (*GetOpportunityResponse, error)
	ListOpportunities(ctx context.Context, in *ListOpportunitiesRequest, opts ...grpc.CallOption) (*ListOpportunitiesResponse, error)
	GetOpportunityCountByAccountGroups(ctx context.Context, in *GetOpportunityCountByAccountGroupsRequest, opts ...grpc.CallOption) (*GetOpportunityCountByAccountGroupsResponse, error)
	UpdateOpportunityName(ctx context.Context, in *UpdateOpportunityNameRequest, opts ...grpc.CallOption) (*UpdateOpportunityNameResponse, error)
	UpdateOpportunityProbability(ctx context.Context, in *UpdateOpportunityProbabilityRequest, opts ...grpc.CallOption) (*UpdateOpportunityProbabilityResponse, error)
	UpdateOpportunitySalesperson(ctx context.Context, in *UpdateOpportunitySalespersonRequest, opts ...grpc.CallOption) (*UpdateOpportunitySalespersonResponse, error)
	UpdateOpportunityExpectedCloseDate(ctx context.Context, in *UpdateOpportunityExpectedCloseDateRequest, opts ...grpc.CallOption) (*UpdateOpportunityExpectedCloseDateResponse, error)
	UpdateOpportunityNotes(ctx context.Context, in *UpdateOpportunityNotesRequest, opts ...grpc.CallOption) (*UpdateOpportunityNotesResponse, error)
	AddOpportunityPackages(ctx context.Context, in *AddOpportunityPackagesRequest, opts ...grpc.CallOption) (*AddOpportunityPackagesResponse, error)
	RemoveOpportunityPackages(ctx context.Context, in *RemoveOpportunityPackagesRequest, opts ...grpc.CallOption) (*RemoveOpportunityPackagesResponse, error)
	UpdateOpportunityPackageRevenue(ctx context.Context, in *UpdateOpportunityPackageRevenueRequest, opts ...grpc.CallOption) (*UpdateOpportunityPackageRevenueResponse, error)
	UpdateOpportunityPackage(ctx context.Context, in *UpdateOpportunityPackageRequest, opts ...grpc.CallOption) (*UpdateOpportunityPackageResponse, error)
	CloseAsWonOpportunity(ctx context.Context, in *CloseAsWonOpportunityRequest, opts ...grpc.CallOption) (*CloseAsWonOpportunityResponse, error)
	CloseAsLostOpportunity(ctx context.Context, in *CloseAsLostOpportunityRequest, opts ...grpc.CallOption) (*CloseAsLostOpportunityResponse, error)
	UpdateLastConnectedDate(ctx context.Context, in *UpdateLastConnectedDateRequest, opts ...grpc.CallOption) (*UpdateLastConnectedDateResponse, error)
	UpdateLastActivityDate(ctx context.Context, in *UpdateLastActivityDateRequest, opts ...grpc.CallOption) (*UpdateLastActivityDateResponse, error)
	DeleteOpportunity(ctx context.Context, in *DeleteOpportunityRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	ReopenClosedOpportunity(ctx context.Context, in *ReopenClosedOpportunityRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	UpdateOpportunityMarket(ctx context.Context, in *UpdateOpportunityMarketRequest, opts ...grpc.CallOption) (*UpdateOpportunityMarketResponse, error)
}

type salesOpportunitiesClient struct {
	cc *grpc.ClientConn
}

func NewSalesOpportunitiesClient(cc *grpc.ClientConn) SalesOpportunitiesClient {
	return &salesOpportunitiesClient{cc}
}

func (c *salesOpportunitiesClient) CreateOpportunity(ctx context.Context, in *CreateOpportunityRequest, opts ...grpc.CallOption) (*CreateOpportunityResponse, error) {
	out := new(CreateOpportunityResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/CreateOpportunity", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) GetOpportunity(ctx context.Context, in *GetOpportunityRequest, opts ...grpc.CallOption) (*GetOpportunityResponse, error) {
	out := new(GetOpportunityResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/GetOpportunity", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) ListOpportunities(ctx context.Context, in *ListOpportunitiesRequest, opts ...grpc.CallOption) (*ListOpportunitiesResponse, error) {
	out := new(ListOpportunitiesResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/ListOpportunities", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) GetOpportunityCountByAccountGroups(ctx context.Context, in *GetOpportunityCountByAccountGroupsRequest, opts ...grpc.CallOption) (*GetOpportunityCountByAccountGroupsResponse, error) {
	out := new(GetOpportunityCountByAccountGroupsResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/GetOpportunityCountByAccountGroups", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) UpdateOpportunityName(ctx context.Context, in *UpdateOpportunityNameRequest, opts ...grpc.CallOption) (*UpdateOpportunityNameResponse, error) {
	out := new(UpdateOpportunityNameResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityName", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) UpdateOpportunityProbability(ctx context.Context, in *UpdateOpportunityProbabilityRequest, opts ...grpc.CallOption) (*UpdateOpportunityProbabilityResponse, error) {
	out := new(UpdateOpportunityProbabilityResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityProbability", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) UpdateOpportunitySalesperson(ctx context.Context, in *UpdateOpportunitySalespersonRequest, opts ...grpc.CallOption) (*UpdateOpportunitySalespersonResponse, error) {
	out := new(UpdateOpportunitySalespersonResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/UpdateOpportunitySalesperson", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) UpdateOpportunityExpectedCloseDate(ctx context.Context, in *UpdateOpportunityExpectedCloseDateRequest, opts ...grpc.CallOption) (*UpdateOpportunityExpectedCloseDateResponse, error) {
	out := new(UpdateOpportunityExpectedCloseDateResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityExpectedCloseDate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) UpdateOpportunityNotes(ctx context.Context, in *UpdateOpportunityNotesRequest, opts ...grpc.CallOption) (*UpdateOpportunityNotesResponse, error) {
	out := new(UpdateOpportunityNotesResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityNotes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) AddOpportunityPackages(ctx context.Context, in *AddOpportunityPackagesRequest, opts ...grpc.CallOption) (*AddOpportunityPackagesResponse, error) {
	out := new(AddOpportunityPackagesResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/AddOpportunityPackages", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) RemoveOpportunityPackages(ctx context.Context, in *RemoveOpportunityPackagesRequest, opts ...grpc.CallOption) (*RemoveOpportunityPackagesResponse, error) {
	out := new(RemoveOpportunityPackagesResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/RemoveOpportunityPackages", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) UpdateOpportunityPackageRevenue(ctx context.Context, in *UpdateOpportunityPackageRevenueRequest, opts ...grpc.CallOption) (*UpdateOpportunityPackageRevenueResponse, error) {
	out := new(UpdateOpportunityPackageRevenueResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityPackageRevenue", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) UpdateOpportunityPackage(ctx context.Context, in *UpdateOpportunityPackageRequest, opts ...grpc.CallOption) (*UpdateOpportunityPackageResponse, error) {
	out := new(UpdateOpportunityPackageResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityPackage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) CloseAsWonOpportunity(ctx context.Context, in *CloseAsWonOpportunityRequest, opts ...grpc.CallOption) (*CloseAsWonOpportunityResponse, error) {
	out := new(CloseAsWonOpportunityResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/CloseAsWonOpportunity", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) CloseAsLostOpportunity(ctx context.Context, in *CloseAsLostOpportunityRequest, opts ...grpc.CallOption) (*CloseAsLostOpportunityResponse, error) {
	out := new(CloseAsLostOpportunityResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/CloseAsLostOpportunity", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) UpdateLastConnectedDate(ctx context.Context, in *UpdateLastConnectedDateRequest, opts ...grpc.CallOption) (*UpdateLastConnectedDateResponse, error) {
	out := new(UpdateLastConnectedDateResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/UpdateLastConnectedDate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) UpdateLastActivityDate(ctx context.Context, in *UpdateLastActivityDateRequest, opts ...grpc.CallOption) (*UpdateLastActivityDateResponse, error) {
	out := new(UpdateLastActivityDateResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/UpdateLastActivityDate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) DeleteOpportunity(ctx context.Context, in *DeleteOpportunityRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/DeleteOpportunity", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) ReopenClosedOpportunity(ctx context.Context, in *ReopenClosedOpportunityRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/ReopenClosedOpportunity", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) UpdateOpportunityMarket(ctx context.Context, in *UpdateOpportunityMarketRequest, opts ...grpc.CallOption) (*UpdateOpportunityMarketResponse, error) {
	out := new(UpdateOpportunityMarketResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityMarket", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SalesOpportunities service

type SalesOpportunitiesServer interface {
	CreateOpportunity(context.Context, *CreateOpportunityRequest) (*CreateOpportunityResponse, error)
	GetOpportunity(context.Context, *GetOpportunityRequest) (*GetOpportunityResponse, error)
	ListOpportunities(context.Context, *ListOpportunitiesRequest) (*ListOpportunitiesResponse, error)
	GetOpportunityCountByAccountGroups(context.Context, *GetOpportunityCountByAccountGroupsRequest) (*GetOpportunityCountByAccountGroupsResponse, error)
	UpdateOpportunityName(context.Context, *UpdateOpportunityNameRequest) (*UpdateOpportunityNameResponse, error)
	UpdateOpportunityProbability(context.Context, *UpdateOpportunityProbabilityRequest) (*UpdateOpportunityProbabilityResponse, error)
	UpdateOpportunitySalesperson(context.Context, *UpdateOpportunitySalespersonRequest) (*UpdateOpportunitySalespersonResponse, error)
	UpdateOpportunityExpectedCloseDate(context.Context, *UpdateOpportunityExpectedCloseDateRequest) (*UpdateOpportunityExpectedCloseDateResponse, error)
	UpdateOpportunityNotes(context.Context, *UpdateOpportunityNotesRequest) (*UpdateOpportunityNotesResponse, error)
	AddOpportunityPackages(context.Context, *AddOpportunityPackagesRequest) (*AddOpportunityPackagesResponse, error)
	RemoveOpportunityPackages(context.Context, *RemoveOpportunityPackagesRequest) (*RemoveOpportunityPackagesResponse, error)
	UpdateOpportunityPackageRevenue(context.Context, *UpdateOpportunityPackageRevenueRequest) (*UpdateOpportunityPackageRevenueResponse, error)
	UpdateOpportunityPackage(context.Context, *UpdateOpportunityPackageRequest) (*UpdateOpportunityPackageResponse, error)
	CloseAsWonOpportunity(context.Context, *CloseAsWonOpportunityRequest) (*CloseAsWonOpportunityResponse, error)
	CloseAsLostOpportunity(context.Context, *CloseAsLostOpportunityRequest) (*CloseAsLostOpportunityResponse, error)
	UpdateLastConnectedDate(context.Context, *UpdateLastConnectedDateRequest) (*UpdateLastConnectedDateResponse, error)
	UpdateLastActivityDate(context.Context, *UpdateLastActivityDateRequest) (*UpdateLastActivityDateResponse, error)
	DeleteOpportunity(context.Context, *DeleteOpportunityRequest) (*google_protobuf1.Empty, error)
	ReopenClosedOpportunity(context.Context, *ReopenClosedOpportunityRequest) (*google_protobuf1.Empty, error)
	UpdateOpportunityMarket(context.Context, *UpdateOpportunityMarketRequest) (*UpdateOpportunityMarketResponse, error)
}

func RegisterSalesOpportunitiesServer(s *grpc.Server, srv SalesOpportunitiesServer) {
	s.RegisterService(&_SalesOpportunities_serviceDesc, srv)
}

func _SalesOpportunities_CreateOpportunity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOpportunityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).CreateOpportunity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/CreateOpportunity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).CreateOpportunity(ctx, req.(*CreateOpportunityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_GetOpportunity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOpportunityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).GetOpportunity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/GetOpportunity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).GetOpportunity(ctx, req.(*GetOpportunityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_ListOpportunities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOpportunitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).ListOpportunities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/ListOpportunities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).ListOpportunities(ctx, req.(*ListOpportunitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_GetOpportunityCountByAccountGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOpportunityCountByAccountGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).GetOpportunityCountByAccountGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/GetOpportunityCountByAccountGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).GetOpportunityCountByAccountGroups(ctx, req.(*GetOpportunityCountByAccountGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_UpdateOpportunityName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOpportunityNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).UpdateOpportunityName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).UpdateOpportunityName(ctx, req.(*UpdateOpportunityNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_UpdateOpportunityProbability_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOpportunityProbabilityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).UpdateOpportunityProbability(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityProbability",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).UpdateOpportunityProbability(ctx, req.(*UpdateOpportunityProbabilityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_UpdateOpportunitySalesperson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOpportunitySalespersonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).UpdateOpportunitySalesperson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/UpdateOpportunitySalesperson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).UpdateOpportunitySalesperson(ctx, req.(*UpdateOpportunitySalespersonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_UpdateOpportunityExpectedCloseDate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOpportunityExpectedCloseDateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).UpdateOpportunityExpectedCloseDate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityExpectedCloseDate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).UpdateOpportunityExpectedCloseDate(ctx, req.(*UpdateOpportunityExpectedCloseDateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_UpdateOpportunityNotes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOpportunityNotesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).UpdateOpportunityNotes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityNotes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).UpdateOpportunityNotes(ctx, req.(*UpdateOpportunityNotesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_AddOpportunityPackages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddOpportunityPackagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).AddOpportunityPackages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/AddOpportunityPackages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).AddOpportunityPackages(ctx, req.(*AddOpportunityPackagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_RemoveOpportunityPackages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveOpportunityPackagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).RemoveOpportunityPackages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/RemoveOpportunityPackages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).RemoveOpportunityPackages(ctx, req.(*RemoveOpportunityPackagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_UpdateOpportunityPackageRevenue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOpportunityPackageRevenueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).UpdateOpportunityPackageRevenue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityPackageRevenue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).UpdateOpportunityPackageRevenue(ctx, req.(*UpdateOpportunityPackageRevenueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_UpdateOpportunityPackage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOpportunityPackageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).UpdateOpportunityPackage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityPackage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).UpdateOpportunityPackage(ctx, req.(*UpdateOpportunityPackageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_CloseAsWonOpportunity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseAsWonOpportunityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).CloseAsWonOpportunity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/CloseAsWonOpportunity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).CloseAsWonOpportunity(ctx, req.(*CloseAsWonOpportunityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_CloseAsLostOpportunity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseAsLostOpportunityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).CloseAsLostOpportunity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/CloseAsLostOpportunity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).CloseAsLostOpportunity(ctx, req.(*CloseAsLostOpportunityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_UpdateLastConnectedDate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLastConnectedDateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).UpdateLastConnectedDate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/UpdateLastConnectedDate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).UpdateLastConnectedDate(ctx, req.(*UpdateLastConnectedDateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_UpdateLastActivityDate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLastActivityDateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).UpdateLastActivityDate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/UpdateLastActivityDate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).UpdateLastActivityDate(ctx, req.(*UpdateLastActivityDateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_DeleteOpportunity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOpportunityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).DeleteOpportunity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/DeleteOpportunity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).DeleteOpportunity(ctx, req.(*DeleteOpportunityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_ReopenClosedOpportunity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReopenClosedOpportunityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).ReopenClosedOpportunity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/ReopenClosedOpportunity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).ReopenClosedOpportunity(ctx, req.(*ReopenClosedOpportunityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_UpdateOpportunityMarket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOpportunityMarketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).UpdateOpportunityMarket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/UpdateOpportunityMarket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).UpdateOpportunityMarket(ctx, req.(*UpdateOpportunityMarketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SalesOpportunities_serviceDesc = grpc.ServiceDesc{
	ServiceName: "salesopportunities.v1.SalesOpportunities",
	HandlerType: (*SalesOpportunitiesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOpportunity",
			Handler:    _SalesOpportunities_CreateOpportunity_Handler,
		},
		{
			MethodName: "GetOpportunity",
			Handler:    _SalesOpportunities_GetOpportunity_Handler,
		},
		{
			MethodName: "ListOpportunities",
			Handler:    _SalesOpportunities_ListOpportunities_Handler,
		},
		{
			MethodName: "GetOpportunityCountByAccountGroups",
			Handler:    _SalesOpportunities_GetOpportunityCountByAccountGroups_Handler,
		},
		{
			MethodName: "UpdateOpportunityName",
			Handler:    _SalesOpportunities_UpdateOpportunityName_Handler,
		},
		{
			MethodName: "UpdateOpportunityProbability",
			Handler:    _SalesOpportunities_UpdateOpportunityProbability_Handler,
		},
		{
			MethodName: "UpdateOpportunitySalesperson",
			Handler:    _SalesOpportunities_UpdateOpportunitySalesperson_Handler,
		},
		{
			MethodName: "UpdateOpportunityExpectedCloseDate",
			Handler:    _SalesOpportunities_UpdateOpportunityExpectedCloseDate_Handler,
		},
		{
			MethodName: "UpdateOpportunityNotes",
			Handler:    _SalesOpportunities_UpdateOpportunityNotes_Handler,
		},
		{
			MethodName: "AddOpportunityPackages",
			Handler:    _SalesOpportunities_AddOpportunityPackages_Handler,
		},
		{
			MethodName: "RemoveOpportunityPackages",
			Handler:    _SalesOpportunities_RemoveOpportunityPackages_Handler,
		},
		{
			MethodName: "UpdateOpportunityPackageRevenue",
			Handler:    _SalesOpportunities_UpdateOpportunityPackageRevenue_Handler,
		},
		{
			MethodName: "UpdateOpportunityPackage",
			Handler:    _SalesOpportunities_UpdateOpportunityPackage_Handler,
		},
		{
			MethodName: "CloseAsWonOpportunity",
			Handler:    _SalesOpportunities_CloseAsWonOpportunity_Handler,
		},
		{
			MethodName: "CloseAsLostOpportunity",
			Handler:    _SalesOpportunities_CloseAsLostOpportunity_Handler,
		},
		{
			MethodName: "UpdateLastConnectedDate",
			Handler:    _SalesOpportunities_UpdateLastConnectedDate_Handler,
		},
		{
			MethodName: "UpdateLastActivityDate",
			Handler:    _SalesOpportunities_UpdateLastActivityDate_Handler,
		},
		{
			MethodName: "DeleteOpportunity",
			Handler:    _SalesOpportunities_DeleteOpportunity_Handler,
		},
		{
			MethodName: "ReopenClosedOpportunity",
			Handler:    _SalesOpportunities_ReopenClosedOpportunity_Handler,
		},
		{
			MethodName: "UpdateOpportunityMarket",
			Handler:    _SalesOpportunities_UpdateOpportunityMarket_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sales_opportunities/v1/opportunity.proto",
}

func init() { proto.RegisterFile("sales_opportunities/v1/opportunity.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2584 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xd4, 0x1a, 0xcb, 0x6f, 0xdb, 0xe6,
	0xdd, 0xd4, 0xc3, 0x92, 0x7e, 0x8a, 0x6d, 0xfa, 0x4b, 0xe2, 0x28, 0xca, 0x4b, 0x63, 0xdb, 0xd8,
	0x35, 0x56, 0x7b, 0x4d, 0xdb, 0xa4, 0x4d, 0xba, 0xa1, 0xb2, 0xc4, 0x38, 0xca, 0x64, 0xcb, 0xa3,
	0xe5, 0x64, 0xee, 0x80, 0x12, 0x8c, 0xf8, 0xd9, 0x61, 0x2b, 0x91, 0x2a, 0x49, 0x19, 0x71, 0x8f,
	0xdb, 0x80, 0x60, 0x03, 0x06, 0x0c, 0xd8, 0x65, 0x03, 0x86, 0xa1, 0xdb, 0x65, 0x87, 0x01, 0x3b,
	0x0d, 0x18, 0xb0, 0xcb, 0x80, 0x01, 0x3b, 0xec, 0xb4, 0x7f, 0x63, 0xa7, 0x01, 0x3b, 0xee, 0x36,
	0x7c, 0x0f, 0xd2, 0x94, 0x44, 0x52, 0x92, 0xab, 0x0c, 0xea, 0x8d, 0xfc, 0xf4, 0x7b, 0xf3, 0xf7,
	0xfe, 0x04, 0x6b, 0x8e, 0xd6, 0xc6, 0x8e, 0x6a, 0x75, 0xbb, 0x96, 0xed, 0xf6, 0x4c, 0xc3, 0x35,
	0xb0, 0xb3, 0x79, 0xf2, 0xf6, 0xe6, 0xd9, 0xc1, 0xe9, 0x46, 0xd7, 0xb6, 0x5c, 0x0b, 0x5d, 0xa6,
	0x90, 0x7d, 0x80, 0x1b, 0x27, 0x6f, 0x17, 0x6f, 0x1d, 0x5b, 0xd6, 0x71, 0x1b, 0x6f, 0x52, 0xa0,
	0x67, 0xbd, 0xa3, 0x4d, 0xd7, 0xe8, 0x60, 0xc7, 0xd5, 0x3a, 0x5d, 0x86, 0x57, 0xbc, 0x36, 0x08,
	0x80, 0x3b, 0x5d, 0x8f, 0xa8, 0xf4, 0x8b, 0x04, 0x64, 0xf6, 0xb4, 0xd6, 0x67, 0xda, 0x31, 0x46,
	0x37, 0x00, 0xba, 0xec, 0x51, 0x35, 0xf4, 0x82, 0x50, 0x12, 0xd6, 0x72, 0x4a, 0x8e, 0x9f, 0xd4,
	0x74, 0xf4, 0x00, 0xb2, 0xad, 0x9e, 0x6d, 0x63, 0xb3, 0x75, 0x5a, 0x48, 0x94, 0x84, 0xb5, 0xc5,
	0x3b, 0xb7, 0x36, 0x42, 0x45, 0xda, 0xa8, 0x70, 0x30, 0xc5, 0x47, 0x40, 0xdb, 0xb0, 0x64, 0x10,
	0x00, 0xad, 0xad, 0xda, 0xf8, 0x04, 0x9b, 0x3d, 0x5c, 0x48, 0x96, 0x84, 0xb5, 0xfc, 0x9d, 0x9b,
	0x11, 0x34, 0x14, 0x06, 0xa5, 0x2c, 0x72, 0x34, 0xfe, 0x4e, 0x08, 0x31, 0xa2, 0xae, 0x4f, 0x28,
	0x35, 0x1e, 0x21, 0x8e, 0xe6, 0x11, 0x2a, 0x42, 0xf6, 0xf3, 0x9e, 0x66, 0xba, 0x86, 0x7b, 0x5a,
	0x48, 0x97, 0x84, 0xb5, 0xa4, 0xe2, 0xbf, 0x4b, 0x47, 0x20, 0x72, 0xb0, 0x8a, 0xd5, 0xe9, 0x5a,
	0x26, 0x36, 0x5d, 0x74, 0x09, 0xd2, 0x27, 0x5a, 0xbb, 0x87, 0xa9, 0x61, 0x92, 0x0a, 0x7b, 0x41,
	0x1f, 0xc2, 0x7c, 0x17, 0xdb, 0x86, 0xa5, 0x73, 0x93, 0xbc, 0x1e, 0x2f, 0xc5, 0x1e, 0x85, 0x55,
	0x38, 0x8e, 0xa4, 0x41, 0xc6, 0x13, 0xe7, 0x09, 0x20, 0xae, 0x8f, 0xda, 0xf2, 0x78, 0x3a, 0x05,
	0xa1, 0x94, 0x5c, 0xcb, 0xdf, 0x59, 0x8d, 0x27, 0xea, 0xcb, 0xa8, 0x2c, 0xdb, 0x03, 0x27, 0x8e,
	0xf4, 0x14, 0xc4, 0x4a, 0xdb, 0x72, 0xb0, 0x5e, 0xb7, 0x1c, 0x57, 0xc1, 0x9a, 0x63, 0x99, 0xa8,
	0x12, 0x54, 0x65, 0xf1, 0xce, 0x5b, 0x51, 0x9f, 0x71, 0x00, 0xaf, 0xd1, 0x75, 0x0d, 0xcb, 0xe4,
	0x9a, 0x4b, 0xbf, 0xcc, 0x42, 0xbe, 0x71, 0xe6, 0xa4, 0xe8, 0x0d, 0x58, 0x0c, 0xf8, 0xec, 0x99,
	0x07, 0x2d, 0x04, 0x4e, 0x6b, 0x3a, 0x5a, 0x03, 0x51, 0x6b, 0xb5, 0xac, 0x9e, 0xe9, 0xaa, 0xc7,
	0xb6, 0xd5, 0xeb, 0x12, 0xc0, 0x04, 0x05, 0x5c, 0xe4, 0xe7, 0xdb, 0xe4, 0xb8, 0xa6, 0xa3, 0xdb,
	0xb0, 0xc4, 0x62, 0xa3, 0x8b, 0x6d, 0xc7, 0x32, 0x09, 0x60, 0x92, 0x51, 0xa4, 0xc7, 0x7b, 0xf4,
	0xb4, 0xa6, 0x23, 0x04, 0x29, 0x53, 0xeb, 0x30, 0x37, 0xc8, 0x29, 0xf4, 0x19, 0xdd, 0x87, 0x2c,
	0x77, 0x5c, 0xa7, 0x90, 0xa6, 0x36, 0x8c, 0x72, 0x0f, 0xee, 0xfc, 0x8a, 0x0f, 0x8f, 0x1e, 0xc3,
	0x45, 0xfc, 0xa2, 0x8b, 0x5b, 0x2e, 0xd6, 0xd5, 0x16, 0x31, 0x81, 0xaa, 0x6b, 0x2e, 0x2e, 0xcc,
	0x53, 0x2f, 0x2b, 0x6e, 0xb0, 0x68, 0xda, 0xf0, 0xa2, 0x69, 0xa3, 0xe9, 0x85, 0x9b, 0xb2, 0xec,
	0xa1, 0x51, 0xc3, 0x55, 0x35, 0x17, 0xa3, 0x12, 0xe4, 0xbb, 0xb6, 0xf5, 0x4c, 0x7b, 0x66, 0xb4,
	0x89, 0x9f, 0x65, 0x4a, 0xc2, 0x9a, 0xa0, 0x04, 0x8f, 0x88, 0x5b, 0x99, 0x96, 0x8b, 0x9d, 0x42,
	0x96, 0x8a, 0xcf, 0x5e, 0xd0, 0xbb, 0x90, 0xd1, 0x71, 0x1b, 0xbb, 0x58, 0x2f, 0xe4, 0x46, 0xf2,
	0xf5, 0x40, 0x09, 0x56, 0xcb, 0xc6, 0x1a, 0xc1, 0x82, 0xd1, 0x58, 0x1c, 0x94, 0x60, 0xf5, 0xba,
	0x3a, 0xc5, 0xca, 0x8f, 0xc6, 0xe2, 0xa0, 0xe8, 0x01, 0x14, 0xbb, 0xb6, 0xf5, 0x29, 0x33, 0xd3,
	0x91, 0x61, 0x3b, 0xae, 0x7a, 0x8a, 0x35, 0x5b, 0x65, 0x8e, 0x75, 0x81, 0xc6, 0xc8, 0x15, 0x1f,
	0xe2, 0x21, 0x01, 0x38, 0xc4, 0x9a, 0xfd, 0x84, 0x46, 0xcd, 0x07, 0x70, 0x95, 0xd9, 0xa0, 0x8d,
	0x87, 0x71, 0x17, 0x28, 0xee, 0x8a, 0x07, 0x30, 0x80, 0xfa, 0x06, 0x2c, 0x76, 0x8d, 0x2e, 0x6e,
	0x1b, 0x26, 0x56, 0x1d, 0x57, 0x3b, 0xc6, 0x85, 0x45, 0xe6, 0x14, 0xde, 0xe9, 0x3e, 0x39, 0x44,
	0xd7, 0x20, 0x67, 0x38, 0xec, 0xf3, 0xe9, 0x85, 0xa5, 0x92, 0xb0, 0x96, 0x55, 0xb2, 0x86, 0xc3,
	0x3c, 0x1a, 0x1d, 0x00, 0x62, 0xbf, 0xa8, 0x6d, 0xcb, 0x21, 0x79, 0x84, 0x78, 0x77, 0x41, 0xa4,
	0xca, 0xaf, 0x8e, 0x19, 0x0c, 0x8a, 0xd8, 0x1a, 0x0c, 0xab, 0x47, 0x80, 0xb4, 0x96, 0xdb, 0xd3,
	0xda, 0x9c, 0x2f, 0xf3, 0x9b, 0xe5, 0x91, 0x36, 0x15, 0x19, 0x16, 0xe3, 0x40, 0xdd, 0xe6, 0x31,
	0x5c, 0x6c, 0x6b, 0x8e, 0xab, 0xb6, 0x2c, 0xd3, 0x64, 0x16, 0xa6, 0xa4, 0xd0, 0x68, 0x17, 0x24,
	0x68, 0x15, 0x0f, 0x8b, 0xd2, 0x7a, 0x04, 0x88, 0xd2, 0xd2, 0x5a, 0xae, 0x71, 0x42, 0x22, 0x93,
	0x92, 0xba, 0x38, 0x5a, 0x2a, 0x82, 0x55, 0xe6, 0x48, 0x94, 0xd2, 0x2a, 0x2c, 0xd9, 0xd8, 0xea,
	0x62, 0x13, 0xeb, 0x9e, 0xcd, 0x2e, 0xb1, 0xc8, 0xf5, 0x8e, 0x99, 0x21, 0xa4, 0xdf, 0xa4, 0xa0,
	0x50, 0xa1, 0xde, 0x15, 0x48, 0x10, 0x0a, 0xfe, 0xbc, 0x87, 0x1d, 0x37, 0x34, 0x01, 0x08, 0xe3,
	0x26, 0x80, 0x44, 0x5c, 0x02, 0x48, 0x06, 0x12, 0xc0, 0x2d, 0xc8, 0x9f, 0xd5, 0x32, 0xa7, 0x90,
	0x2a, 0x25, 0xd7, 0x72, 0x0a, 0xf8, 0xc5, 0x2c, 0x32, 0xca, 0xd3, 0x53, 0x88, 0xf2, 0xf9, 0x98,
	0x28, 0xcf, 0x04, 0xa3, 0xfc, 0x1a, 0xe4, 0x3a, 0x9a, 0xfd, 0x19, 0x76, 0x89, 0x6a, 0x2c, 0xfe,
	0xb3, 0xec, 0xa0, 0xa6, 0xb3, 0x6a, 0x6c, 0xbb, 0x26, 0xb6, 0xc9, 0xaf, 0x39, 0xaf, 0x1a, 0xd3,
	0x93, 0x9a, 0x8e, 0xf4, 0x40, 0x86, 0x03, 0x9a, 0xe1, 0x1e, 0x45, 0x79, 0x6e, 0xc4, 0x97, 0x18,
	0xfe, 0x61, 0x28, 0x17, 0x16, 0x0f, 0x42, 0x3e, 0xe4, 0x98, 0xed, 0x42, 0xb0, 0xbe, 0x26, 0x06,
	0xea, 0xeb, 0x73, 0xb8, 0xbc, 0x8d, 0xdd, 0x10, 0xe7, 0x98, 0x76, 0x11, 0x91, 0x5e, 0x0a, 0xb0,
	0x44, 0xbe, 0x91, 0xa2, 0x99, 0xc7, 0xf8, 0xa1, 0xd1, 0x76, 0xb1, 0x8d, 0x1e, 0x40, 0xfe, 0x19,
	0x3e, 0x36, 0x4c, 0xd5, 0x26, 0x87, 0x94, 0x43, 0xfc, 0x27, 0x07, 0x0a, 0x4e, 0x49, 0xa0, 0x7b,
	0x90, 0xc3, 0xa6, 0xce, 0x51, 0x13, 0x23, 0x51, 0xb3, 0xd8, 0xd4, 0x29, 0xa2, 0x54, 0x87, 0x95,
	0xbd, 0x33, 0x8f, 0x08, 0xca, 0x53, 0x80, 0x4c, 0xc7, 0x30, 0x8d, 0x4e, 0xaf, 0x43, 0x65, 0x11,
	0x14, 0xef, 0x95, 0xfe, 0xa2, 0xbd, 0xa0, 0xbf, 0x24, 0xf8, 0x2f, 0xec, 0x55, 0x7a, 0x09, 0x50,
	0xa8, 0x1b, 0x4e, 0xc0, 0x86, 0x06, 0x76, 0x26, 0x0f, 0xb1, 0x15, 0x98, 0x6f, 0xf5, 0x6c, 0xc7,
	0xb2, 0xb9, 0xf9, 0xf8, 0x1b, 0xf1, 0xcc, 0x2e, 0xf9, 0xb0, 0x8e, 0xf1, 0x05, 0x8b, 0xab, 0x24,
	0x71, 0x8a, 0x63, 0xbc, 0x6f, 0x7c, 0x81, 0x09, 0xf9, 0x81, 0xb8, 0xf4, 0x02, 0x6c, 0xb1, 0x2f,
	0x30, 0x1d, 0xf4, 0x3d, 0xc8, 0x1c, 0x51, 0x1d, 0x1d, 0x1e, 0x58, 0xf7, 0x22, 0x7c, 0x34, 0x4a,
	0x95, 0x0d, 0x66, 0x22, 0x47, 0xf1, 0xe8, 0xa0, 0x1f, 0x40, 0xde, 0xb1, 0x6c, 0x57, 0xb5, 0x68,
	0x33, 0xc2, 0xab, 0xf2, 0xfd, 0x49, 0xc9, 0xee, 0x5b, 0xb6, 0xcb, 0xdb, 0x19, 0x70, 0xfc, 0xe7,
	0x81, 0x98, 0xcb, 0x0c, 0xc6, 0x5c, 0x5c, 0xbc, 0x16, 0xff, 0x98, 0x82, 0x0c, 0x97, 0x76, 0x82,
	0x0f, 0x10, 0x66, 0xcb, 0x44, 0xa8, 0x2d, 0x57, 0x61, 0xa9, 0xbf, 0xf0, 0x39, 0x85, 0x24, 0x03,
	0xec, 0xab, 0x7c, 0x0e, 0x7a, 0x02, 0x17, 0x79, 0x69, 0xa7, 0x29, 0x4d, 0x65, 0x96, 0xe3, 0x5d,
	0xf2, 0xed, 0x08, 0x4b, 0x0d, 0xc4, 0x88, 0xb2, 0xcc, 0x49, 0x90, 0x73, 0xee, 0xa6, 0x2d, 0x28,
	0x86, 0x64, 0x4c, 0x8f, 0x7c, 0x7a, 0x22, 0xf2, 0x57, 0x86, 0x92, 0x28, 0x67, 0x72, 0x0c, 0x85,
	0x40, 0xde, 0x64, 0x61, 0xe6, 0xb1, 0x60, 0xdf, 0x3a, 0xaa, 0x5b, 0x0d, 0x0f, 0x2e, 0xaf, 0x8f,
	0x18, 0x0a, 0xba, 0x81, 0x02, 0x91, 0x19, 0x2a, 0x10, 0x2a, 0x14, 0x82, 0xd5, 0xbc, 0x4f, 0xd9,
	0xec, 0x44, 0xca, 0x5e, 0x0e, 0xd4, 0xf7, 0x33, 0x55, 0x8b, 0xbf, 0x15, 0x00, 0xce, 0xfc, 0x10,
	0x6d, 0x41, 0x4e, 0x37, 0x6c, 0xdc, 0xa2, 0x6e, 0x2d, 0xc4, 0x0e, 0x13, 0x04, 0xab, 0xea, 0xc1,
	0x2a, 0x67, 0x68, 0xa8, 0x01, 0xe9, 0x23, 0x03, 0xb7, 0xbd, 0x61, 0xe4, 0x83, 0xf3, 0x84, 0xc5,
	0x43, 0x42, 0x40, 0x61, 0x74, 0xa4, 0x2f, 0x05, 0xc8, 0xf9, 0x87, 0xe8, 0x26, 0x14, 0xf7, 0x94,
	0xc6, 0x63, 0xb9, 0xd2, 0x94, 0xab, 0xea, 0xc3, 0x9a, 0xb2, 0xdf, 0x54, 0x0f, 0xe5, 0xb2, 0xa2,
	0x3e, 0x29, 0xd7, 0x0f, 0x64, 0x71, 0x0e, 0x2d, 0x41, 0x7e, 0x4f, 0x69, 0x6c, 0x95, 0xb7, 0x6a,
	0xf5, 0x5a, 0xf3, 0x50, 0x14, 0x50, 0x1e, 0x32, 0x15, 0x45, 0x2e, 0x37, 0xe5, 0xaa, 0x98, 0x40,
	0x08, 0x16, 0xe5, 0xef, 0xef, 0x31, 0xe4, 0x4a, 0xbd, 0xb1, 0x2f, 0x8b, 0x49, 0x94, 0x85, 0xd4,
	0x6e, 0x79, 0x47, 0x16, 0x53, 0x68, 0x19, 0x16, 0xea, 0xe5, 0xfd, 0xa6, 0x5a, 0xae, 0x34, 0x6b,
	0x4f, 0x08, 0x76, 0x9a, 0x20, 0xd0, 0xa3, 0x4a, 0x63, 0x77, 0x97, 0xa2, 0x89, 0xf3, 0x48, 0x84,
	0x0b, 0xe5, 0x4a, 0xf3, 0xa0, 0x5c, 0xe7, 0x24, 0x32, 0xd2, 0x53, 0x78, 0xb3, 0xbf, 0x96, 0x54,
	0x48, 0x7c, 0x6d, 0x9d, 0x96, 0x03, 0x81, 0xe6, 0x67, 0xc6, 0x75, 0x58, 0x1e, 0x0c, 0x4c, 0x36,
	0x64, 0xe5, 0x94, 0xa5, 0xfe, 0xc8, 0x74, 0xa4, 0x3f, 0x09, 0x70, 0xfd, 0x80, 0x76, 0xbb, 0x01,
	0xe2, 0xbb, 0x5a, 0x07, 0xbf, 0xaa, 0x62, 0x85, 0x36, 0xe1, 0x12, 0xd6, 0x0d, 0x57, 0x0d, 0x1f,
	0x7b, 0x96, 0xc9, 0x6f, 0xfb, 0xa3, 0x46, 0x1f, 0xe9, 0x1f, 0x02, 0xbc, 0x36, 0x24, 0x76, 0x30,
	0x38, 0x66, 0x46, 0xfa, 0x81, 0xb6, 0x29, 0x35, 0xd4, 0x36, 0x49, 0xff, 0x0c, 0xd3, 0x85, 0x12,
	0x61, 0xe4, 0x67, 0x47, 0x97, 0x90, 0x5e, 0x35, 0x15, 0xd2, 0xab, 0x4a, 0xff, 0x15, 0xe0, 0xcd,
	0x21, 0x8d, 0xe4, 0xc1, 0x64, 0x38, 0x3b, 0x7a, 0x45, 0xb4, 0xc9, 0xa9, 0x73, 0xb4, 0xc9, 0xd2,
	0x9f, 0x05, 0xb8, 0x31, 0x1c, 0x50, 0xa4, 0x13, 0x9e, 0x1d, 0x7d, 0xfd, 0x46, 0x3d, 0x15, 0x68,
	0xd4, 0xa5, 0xbf, 0x09, 0x70, 0xa3, 0xac, 0xeb, 0xc3, 0x4d, 0xf0, 0x0c, 0x49, 0x3e, 0x6a, 0xe2,
	0x91, 0xfe, 0x2e, 0x40, 0x49, 0xc1, 0x1d, 0xeb, 0x04, 0x7f, 0xbd, 0xf5, 0xf8, 0x51, 0x02, 0x6e,
	0x0f, 0x27, 0x38, 0x3e, 0xba, 0xf0, 0x65, 0xdf, 0xcc, 0x68, 0xd3, 0x3f, 0x24, 0xa5, 0x06, 0x87,
	0xa4, 0xf7, 0x21, 0xe3, 0x6d, 0x31, 0xd3, 0x63, 0x6d, 0x31, 0x3d, 0x70, 0xe9, 0xf7, 0x09, 0xb8,
	0x15, 0x6d, 0x85, 0xaf, 0x89, 0xfa, 0x21, 0xcb, 0xdc, 0xf4, 0x57, 0x5e, 0xe6, 0xce, 0x0f, 0x0c,
	0x9b, 0x5f, 0x0a, 0x70, 0x9d, 0x26, 0xa1, 0xb2, 0xf3, 0xd4, 0x32, 0xff, 0x0f, 0x43, 0xe7, 0xc4,
	0x66, 0x92, 0xfe, 0x25, 0xc0, 0x0d, 0x2e, 0x62, 0xdd, 0x72, 0xdc, 0x59, 0x94, 0x11, 0xc9, 0x30,
	0xcf, 0x97, 0x3e, 0xa9, 0xf3, 0x6c, 0x8d, 0x39, 0xb2, 0xf4, 0x6f, 0x01, 0x6e, 0x32, 0xbf, 0xad,
	0x0f, 0xae, 0xaa, 0x66, 0xaa, 0xea, 0x85, 0xed, 0xdf, 0x52, 0xe7, 0xd8, 0xbf, 0x49, 0x3f, 0x49,
	0x78, 0x55, 0xaf, 0x3e, 0xb0, 0x50, 0x9b, 0x1d, 0x7d, 0xc3, 0x77, 0x84, 0xa9, 0x73, 0xec, 0x08,
	0xaf, 0x43, 0xce, 0x37, 0x1a, 0x8d, 0xe5, 0xac, 0x72, 0x76, 0x20, 0xfd, 0x5a, 0x80, 0x42, 0x95,
	0x2e, 0xab, 0x67, 0x32, 0x0c, 0xff, 0x22, 0xc0, 0x4d, 0x85, 0xae, 0x32, 0x99, 0x13, 0xcf, 0x64,
	0x1c, 0xae, 0xf4, 0xc5, 0x61, 0xce, 0x0f, 0xac, 0xbf, 0xfa, 0x81, 0x15, 0x10, 0x7b, 0x87, 0x6e,
	0x27, 0x66, 0x47, 0xf8, 0xbe, 0x0d, 0x4a, 0xaa, 0x7f, 0x83, 0x22, 0x69, 0x70, 0x35, 0x64, 0x57,
	0xe9, 0x74, 0x2d, 0xd3, 0xc1, 0xa8, 0x0a, 0xf9, 0x80, 0x94, 0x7c, 0x69, 0x27, 0x45, 0xe4, 0xa0,
	0x20, 0x81, 0x20, 0x9a, 0xf4, 0x09, 0xac, 0x0c, 0x2e, 0x1e, 0xa7, 0x4a, 0xff, 0x87, 0x09, 0xb8,
	0x1a, 0x32, 0x5d, 0x73, 0x1e, 0x1f, 0x92, 0x6a, 0xef, 0xf4, 0xda, 0xfe, 0xc5, 0xde, 0x38, 0xf4,
	0x3d, 0x14, 0xd2, 0x18, 0x99, 0xf8, 0x85, 0xab, 0xf6, 0x2d, 0xec, 0x80, 0x1c, 0x55, 0xd8, 0xd2,
	0xee, 0x2a, 0x64, 0x9f, 0x6b, 0x8e, 0xda, 0xb1, 0x6c, 0xb6, 0xb3, 0xcb, 0x2a, 0x99, 0xe7, 0x9a,
	0xb3, 0x63, 0xd9, 0x18, 0xbd, 0x06, 0x0b, 0xae, 0xe5, 0xd2, 0xcb, 0x57, 0xc6, 0x3f, 0x45, 0x8b,
	0xe4, 0x05, 0x7a, 0xa8, 0x70, 0x06, 0x0f, 0xa1, 0xc4, 0x80, 0x62, 0x2e, 0x76, 0xd8, 0x4d, 0xe9,
	0x75, 0x0a, 0xb7, 0x17, 0x7e, 0xbb, 0x23, 0x29, 0x20, 0x0e, 0x8e, 0xe3, 0x13, 0x6c, 0xc4, 0x2e,
	0x41, 0x9a, 0xbe, 0xf3, 0xa5, 0x31, 0x7b, 0x91, 0x2c, 0x58, 0x1f, 0x67, 0xca, 0xe7, 0x86, 0x2e,
	0x0f, 0x1a, 0x7a, 0x75, 0xb4, 0xa1, 0x29, 0x41, 0xdf, 0xda, 0x12, 0x0e, 0x9b, 0x55, 0xe8, 0xf0,
	0x3f, 0x55, 0x87, 0x69, 0xc3, 0xeb, 0xf1, 0xc3, 0xfa, 0x2b, 0xe7, 0xd6, 0x37, 0x4e, 0x4f, 0x95,
	0x9b, 0x0d, 0xeb, 0xe3, 0x8c, 0xba, 0x53, 0xe5, 0x79, 0x14, 0x92, 0x04, 0xf9, 0x88, 0x39, 0x6d,
	0x3e, 0x51, 0x03, 0xe1, 0x54, 0xf9, 0x18, 0xf0, 0x8d, 0x98, 0x99, 0x6d, 0xaa, 0xac, 0x2c, 0x58,
	0x1d, 0x39, 0x56, 0x4d, 0x95, 0xe1, 0x73, 0x28, 0x45, 0x33, 0x9c, 0x2a, 0xa7, 0x63, 0x6f, 0x56,
	0x0a, 0xe9, 0x39, 0x5f, 0x8d, 0xfb, 0x0d, 0xf7, 0x7a, 0x53, 0xe5, 0x83, 0xfd, 0x79, 0x61, 0x70,
	0xa4, 0x99, 0xb6, 0x3a, 0x51, 0x63, 0xc9, 0xab, 0xf9, 0x3e, 0x21, 0xad, 0xcb, 0x34, 0x19, 0xad,
	0x7f, 0x0c, 0x0b, 0x7d, 0xff, 0xc4, 0x41, 0x79, 0xc8, 0x34, 0x76, 0xe5, 0x66, 0x6d, 0x47, 0x16,
	0xe7, 0x50, 0x0e, 0xd2, 0xd5, 0x72, 0xad, 0x7e, 0x28, 0x0a, 0x08, 0x60, 0xfe, 0xa9, 0x2c, 0x7f,
	0xb7, 0x7e, 0x28, 0x26, 0xd0, 0x05, 0xc8, 0x6e, 0xd5, 0xf8, 0x5b, 0x92, 0x60, 0xec, 0x34, 0x76,
	0x9b, 0x8f, 0xea, 0x87, 0x62, 0x8a, 0x80, 0x1d, 0xca, 0x65, 0xa5, 0x7e, 0x28, 0xa6, 0xd7, 0x3f,
	0x82, 0xac, 0xf7, 0xc7, 0x27, 0x94, 0x81, 0xe4, 0xc1, 0x7e, 0x55, 0x9c, 0x23, 0x0f, 0x95, 0x72,
	0x55, 0x14, 0xc8, 0x83, 0x7c, 0xa0, 0x88, 0x09, 0xf2, 0x50, 0x3e, 0xa8, 0x8a, 0x49, 0xf2, 0xb0,
	0xbd, 0xb5, 0x27, 0xa6, 0xc8, 0xc3, 0xee, 0xc7, 0x55, 0x31, 0xbd, 0xae, 0xc3, 0x4a, 0xf8, 0xf4,
	0x44, 0x24, 0xdb, 0x53, 0x6a, 0x15, 0x22, 0xe4, 0x02, 0xe4, 0x76, 0x1b, 0xea, 0xd6, 0x41, 0x75,
	0x5b, 0x6e, 0x8a, 0x02, 0x5a, 0x01, 0x54, 0x6f, 0xec, 0x37, 0xd5, 0x66, 0x43, 0xad, 0x34, 0x76,
	0xf6, 0xe4, 0x66, 0xad, 0xd9, 0x20, 0x6c, 0x28, 0x58, 0x53, 0x55, 0xe4, 0x72, 0x95, 0x48, 0x9d,
	0x83, 0x74, 0xa3, 0xf9, 0x48, 0x56, 0xc4, 0xd4, 0xfa, 0x06, 0x2c, 0xf4, 0x5d, 0x20, 0x10, 0xd0,
	0xf2, 0x7e, 0x45, 0xde, 0xad, 0xd6, 0x76, 0xb7, 0xc5, 0x39, 0xb4, 0x08, 0x50, 0x95, 0xfd, 0x77,
	0xe1, 0xce, 0x7f, 0x2e, 0x03, 0xa2, 0x45, 0xa2, 0xaf, 0xa9, 0x41, 0x2f, 0x60, 0x79, 0xa8, 0x5b,
	0x43, 0x9b, 0x13, 0xde, 0x41, 0x17, 0xbf, 0x35, 0x3e, 0x02, 0x73, 0x04, 0x69, 0x0e, 0x59, 0xb0,
	0xd8, 0xdf, 0x0b, 0xa0, 0x6f, 0x46, 0x50, 0x09, 0xbd, 0x64, 0x2e, 0xbe, 0x35, 0x26, 0xb4, 0xcf,
	0xf0, 0x05, 0x2c, 0x0f, 0x35, 0x75, 0x91, 0xaa, 0x46, 0x5d, 0xae, 0x44, 0xaa, 0x1a, 0xd9, 0x2f,
	0x4a, 0x73, 0xe8, 0x0f, 0x02, 0x48, 0xa3, 0xfb, 0x1e, 0xf4, 0xd1, 0x58, 0x1a, 0xc5, 0x5c, 0x8c,
	0x14, 0xcb, 0x5f, 0x81, 0x82, 0x2f, 0xed, 0x8f, 0x05, 0xb8, 0x1c, 0xda, 0x34, 0xa1, 0x77, 0x22,
	0xc8, 0xc7, 0xdd, 0xaf, 0x14, 0xdf, 0x9d, 0x0c, 0xc9, 0x17, 0xe3, 0x57, 0x61, 0x17, 0x37, 0x81,
	0xa6, 0x0a, 0xdd, 0x1f, 0x97, 0xf0, 0xf0, 0xb5, 0x49, 0xf1, 0xc1, 0xb9, 0x70, 0xe3, 0x65, 0x0b,
	0xb4, 0x60, 0xe3, 0xcb, 0x36, 0x7c, 0x0d, 0x32, 0xbe, 0x6c, 0x21, 0x3d, 0x1f, 0x77, 0xb6, 0xd1,
	0x0d, 0x5b, 0xa4, 0xb3, 0x8d, 0x7d, 0xad, 0x11, 0xe9, 0x6c, 0xe3, 0x77, 0x8b, 0xd2, 0x1c, 0x7a,
	0x29, 0xc0, 0x4a, 0x78, 0xab, 0x87, 0xc6, 0x77, 0x9c, 0xc0, 0xe5, 0x43, 0xf1, 0xbd, 0x09, 0xb1,
	0xfa, 0x24, 0x09, 0x6f, 0x06, 0x23, 0x25, 0x89, 0xbd, 0x4c, 0x88, 0x94, 0x24, 0xbe, 0xe3, 0x94,
	0xe6, 0xd0, 0xcf, 0x05, 0xb8, 0x1a, 0xd9, 0x2e, 0xa2, 0x7b, 0x91, 0x4b, 0xd5, 0xf8, 0x4b, 0x81,
	0xe2, 0xfb, 0x93, 0x23, 0xfa, 0x22, 0xfd, 0x4e, 0x88, 0xdb, 0x53, 0xb3, 0xed, 0xed, 0xb7, 0xc7,
	0x8e, 0xa9, 0xb0, 0x2d, 0x7f, 0xf1, 0x3b, 0xe7, 0x45, 0xf7, 0x85, 0xfc, 0x99, 0x00, 0x85, 0x28,
	0x68, 0x74, 0x77, 0x62, 0xf2, 0x4c, 0xac, 0x7b, 0x13, 0xe3, 0xf5, 0x25, 0xd2, 0xd0, 0xfe, 0x2e,
	0x32, 0x91, 0xc6, 0x2d, 0xb8, 0x23, 0x13, 0x69, 0x6c, 0x0b, 0xc9, 0x1d, 0x3b, 0xbc, 0xff, 0x43,
	0x23, 0x48, 0x86, 0x6f, 0xb1, 0x23, 0x1d, 0x3b, 0xbe, 0xc9, 0x94, 0xe6, 0xd0, 0x4f, 0x05, 0xb8,
	0x12, 0xd1, 0xc1, 0xa3, 0xf8, 0xb8, 0x8d, 0xda, 0x32, 0x17, 0xef, 0x4e, 0x8a, 0x16, 0x92, 0x79,
	0x06, 0xbb, 0xfc, 0x11, 0x99, 0x27, 0x62, 0x01, 0x5c, 0x7c, 0x6f, 0x42, 0x2c, 0x5f, 0x92, 0x4f,
	0x60, 0x79, 0x68, 0x9d, 0x1a, 0xd9, 0x98, 0x44, 0x2d, 0x5e, 0x8b, 0x2b, 0x43, 0x1b, 0x5e, 0xb9,
	0xd3, 0x75, 0x4f, 0xa5, 0x39, 0xf4, 0x29, 0x5c, 0x89, 0xd8, 0x87, 0x46, 0x5a, 0x3d, 0x7e, 0x7f,
	0x1a, 0xc3, 0xeb, 0xec, 0x13, 0x0f, 0x0d, 0x01, 0x68, 0xec, 0xd4, 0xdc, 0xb7, 0xef, 0x2c, 0xde,
	0x9d, 0x14, 0xcd, 0x33, 0xec, 0xb3, 0x79, 0x2a, 0xde, 0x3b, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff,
	0xc6, 0xdc, 0x5b, 0x46, 0x9e, 0x31, 0x00, 0x00,
}
