// Code generated by protoc-gen-go. DO NOT EDIT.
// source: marketplace_packages/v1/product.proto

package marketplace_packages_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Lmi_Categories int32

const (
	Lmi_NOT_SET                Lmi_Categories = 0
	Lmi_WEBSITE                Lmi_Categories = 1
	Lmi_CONTENT_AND_EXPERIENCE Lmi_Categories = 2
	Lmi_LISTINGS               Lmi_Categories = 3
	Lmi_REPUTATION             Lmi_Categories = 4
	Lmi_SEO                    Lmi_Categories = 5
	Lmi_SOCIAL                 Lmi_Categories = 6
	Lmi_ADVERTISING            Lmi_Categories = 7
)

var Lmi_Categories_name = map[int32]string{
	0: "NOT_SET",
	1: "WEBSITE",
	2: "CONTENT_AND_EXPERIENCE",
	3: "LISTINGS",
	4: "REPUTATION",
	5: "SEO",
	6: "SOCIAL",
	7: "ADVERTISING",
}
var Lmi_Categories_value = map[string]int32{
	"NOT_SET":                0,
	"WEBSITE":                1,
	"CONTENT_AND_EXPERIENCE": 2,
	"LISTINGS":               3,
	"REPUTATION":             4,
	"SEO":                    5,
	"SOCIAL":                 6,
	"ADVERTISING":            7,
}

func (x Lmi_Categories) String() string {
	return proto.EnumName(Lmi_Categories_name, int32(x))
}
func (Lmi_Categories) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0, 0} }

type ServiceModel_Type int32

const (
	ServiceModel_DIY  ServiceModel_Type = 0
	ServiceModel_DIWM ServiceModel_Type = 1
	ServiceModel_DIFM ServiceModel_Type = 2
)

var ServiceModel_Type_name = map[int32]string{
	0: "DIY",
	1: "DIWM",
	2: "DIFM",
}
var ServiceModel_Type_value = map[string]int32{
	"DIY":  0,
	"DIWM": 1,
	"DIFM": 2,
}

func (x ServiceModel_Type) String() string {
	return proto.EnumName(ServiceModel_Type_name, int32(x))
}
func (ServiceModel_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{1, 0} }

// Local marketing index categories
type Lmi struct {
}

func (m *Lmi) Reset()                    { *m = Lmi{} }
func (m *Lmi) String() string            { return proto.CompactTextString(m) }
func (*Lmi) ProtoMessage()               {}
func (*Lmi) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

type ServiceModel struct {
}

func (m *ServiceModel) Reset()                    { *m = ServiceModel{} }
func (m *ServiceModel) String() string            { return proto.CompactTextString(m) }
func (*ServiceModel) ProtoMessage()               {}
func (*ServiceModel) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

type FrequentlyAskedQuestions struct {
	// Question part of the faq
	Question string `protobuf:"bytes,1,opt,name=question" json:"question,omitempty"`
	// Answer part of the faq
	Answer string `protobuf:"bytes,2,opt,name=answer" json:"answer,omitempty"`
}

func (m *FrequentlyAskedQuestions) Reset()                    { *m = FrequentlyAskedQuestions{} }
func (m *FrequentlyAskedQuestions) String() string            { return proto.CompactTextString(m) }
func (*FrequentlyAskedQuestions) ProtoMessage()               {}
func (*FrequentlyAskedQuestions) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *FrequentlyAskedQuestions) GetQuestion() string {
	if m != nil {
		return m.Question
	}
	return ""
}

func (m *FrequentlyAskedQuestions) GetAnswer() string {
	if m != nil {
		return m.Answer
	}
	return ""
}

type Product struct {
	// ID of the product
	ProductId string `protobuf:"bytes,1,opt,name=product_id,json=productId" json:"product_id,omitempty"`
	// ID of the partner
	PartnerId string `protobuf:"bytes,2,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// Name of the product
	Name string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	// The slogan for the package
	Tagline string `protobuf:"bytes,4,opt,name=tagline" json:"tagline,omitempty"`
	// Description of the product
	Description string `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	// Repersentation of the values of the product
	KeySellingPoints []string `protobuf:"bytes,6,rep,name=key_selling_points,json=keySellingPoints" json:"key_selling_points,omitempty"`
	// Icon url
	IconUrl string `protobuf:"bytes,7,opt,name=icon_url,json=iconUrl" json:"icon_url,omitempty"`
	// Header image url
	HeaderImageUrl string `protobuf:"bytes,8,opt,name=header_image_url,json=headerImageUrl" json:"header_image_url,omitempty"`
	// Screen shot url
	ScreenshotUrls []string `protobuf:"bytes,9,rep,name=screenshot_urls,json=screenshotUrls" json:"screenshot_urls,omitempty"`
	// PDF url
	PdfUploadUrls []string `protobuf:"bytes,10,rep,name=pdf_upload_urls,json=pdfUploadUrls" json:"pdf_upload_urls,omitempty"`
	// Currency for the product to be sold in
	Currency Currencies_Currency `protobuf:"varint,11,opt,name=currency,enum=marketplace_packages.v1.Currencies_Currency" json:"currency,omitempty"`
	// Whole sale price of the product
	WholesalePrice string `protobuf:"bytes,12,opt,name=wholesale_price,json=wholesalePrice" json:"wholesale_price,omitempty"`
	// Recommended selling price of the product
	RecommendedSellPrice string `protobuf:"bytes,13,opt,name=recommended_sell_price,json=recommendedSellPrice" json:"recommended_sell_price,omitempty"`
	// How often it is billed
	BillingFrequency string `protobuf:"bytes,14,opt,name=billing_frequency,json=billingFrequency" json:"billing_frequency,omitempty"`
	// DIY, DIFM. DIWM, etc
	ServiceModel []ServiceModel_Type `protobuf:"varint,16,rep,packed,name=service_model,json=serviceModel,enum=marketplace_packages.v1.ServiceModel_Type" json:"service_model,omitempty"`
	// Category for the product
	Category string `protobuf:"bytes,17,opt,name=category" json:"category,omitempty"`
	// LMI categories this product helps solve
	LmiCategories []Lmi_Categories `protobuf:"varint,18,rep,packed,name=lmi_categories,json=lmiCategories,enum=marketplace_packages.v1.Lmi_Categories" json:"lmi_categories,omitempty"`
	// Indicates if a vendor or partner created
	Origin string `protobuf:"bytes,19,opt,name=origin" json:"origin,omitempty"`
	// Order form for the product activation
	UsesCustomizationForm bool `protobuf:"varint,20,opt,name=uses_customization_form,json=usesCustomizationForm" json:"uses_customization_form,omitempty"`
	// Click in url
	EntryUrl string `protobuf:"bytes,21,opt,name=entry_url,json=entryUrl" json:"entry_url,omitempty"`
	// Used to maintian session
	SessionUrl string `protobuf:"bytes,22,opt,name=session_url,json=sessionUrl" json:"session_url,omitempty"`
	// External marketing url
	WebsiteUrl string `protobuf:"bytes,23,opt,name=website_url,json=websiteUrl" json:"website_url,omitempty"`
	// User that updated the product
	UpdatedBy string `protobuf:"bytes,24,opt,name=updated_by,json=updatedBy" json:"updated_by,omitempty"`
	// Expiry date for products
	EndDate *google_protobuf.Timestamp `protobuf:"bytes,25,opt,name=end_date,json=endDate" json:"end_date,omitempty"`
	// FAQs about products
	Faqs []*FrequentlyAskedQuestions `protobuf:"bytes,26,rep,name=faqs" json:"faqs,omitempty"`
	// Time it was created
	Created *google_protobuf.Timestamp `protobuf:"bytes,27,opt,name=created" json:"created,omitempty"`
	// Time it was updated last
	Updated *google_protobuf.Timestamp `protobuf:"bytes,28,opt,name=updated" json:"updated,omitempty"`
	// Is the product archived
	IsArchived bool `protobuf:"varint,29,opt,name=is_archived,json=isArchived" json:"is_archived,omitempty"`
	// List of restrictions for the product
	Restrictions *Restrictions `protobuf:"bytes,30,opt,name=restrictions" json:"restrictions,omitempty"`
}

func (m *Product) Reset()                    { *m = Product{} }
func (m *Product) String() string            { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()               {}
func (*Product) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *Product) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *Product) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetTagline() string {
	if m != nil {
		return m.Tagline
	}
	return ""
}

func (m *Product) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Product) GetKeySellingPoints() []string {
	if m != nil {
		return m.KeySellingPoints
	}
	return nil
}

func (m *Product) GetIconUrl() string {
	if m != nil {
		return m.IconUrl
	}
	return ""
}

func (m *Product) GetHeaderImageUrl() string {
	if m != nil {
		return m.HeaderImageUrl
	}
	return ""
}

func (m *Product) GetScreenshotUrls() []string {
	if m != nil {
		return m.ScreenshotUrls
	}
	return nil
}

func (m *Product) GetPdfUploadUrls() []string {
	if m != nil {
		return m.PdfUploadUrls
	}
	return nil
}

func (m *Product) GetCurrency() Currencies_Currency {
	if m != nil {
		return m.Currency
	}
	return Currencies_USD
}

func (m *Product) GetWholesalePrice() string {
	if m != nil {
		return m.WholesalePrice
	}
	return ""
}

func (m *Product) GetRecommendedSellPrice() string {
	if m != nil {
		return m.RecommendedSellPrice
	}
	return ""
}

func (m *Product) GetBillingFrequency() string {
	if m != nil {
		return m.BillingFrequency
	}
	return ""
}

func (m *Product) GetServiceModel() []ServiceModel_Type {
	if m != nil {
		return m.ServiceModel
	}
	return nil
}

func (m *Product) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Product) GetLmiCategories() []Lmi_Categories {
	if m != nil {
		return m.LmiCategories
	}
	return nil
}

func (m *Product) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *Product) GetUsesCustomizationForm() bool {
	if m != nil {
		return m.UsesCustomizationForm
	}
	return false
}

func (m *Product) GetEntryUrl() string {
	if m != nil {
		return m.EntryUrl
	}
	return ""
}

func (m *Product) GetSessionUrl() string {
	if m != nil {
		return m.SessionUrl
	}
	return ""
}

func (m *Product) GetWebsiteUrl() string {
	if m != nil {
		return m.WebsiteUrl
	}
	return ""
}

func (m *Product) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

func (m *Product) GetEndDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.EndDate
	}
	return nil
}

func (m *Product) GetFaqs() []*FrequentlyAskedQuestions {
	if m != nil {
		return m.Faqs
	}
	return nil
}

func (m *Product) GetCreated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Product) GetUpdated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *Product) GetIsArchived() bool {
	if m != nil {
		return m.IsArchived
	}
	return false
}

func (m *Product) GetRestrictions() *Restrictions {
	if m != nil {
		return m.Restrictions
	}
	return nil
}

func init() {
	proto.RegisterType((*Lmi)(nil), "marketplace_packages.v1.Lmi")
	proto.RegisterType((*ServiceModel)(nil), "marketplace_packages.v1.ServiceModel")
	proto.RegisterType((*FrequentlyAskedQuestions)(nil), "marketplace_packages.v1.FrequentlyAskedQuestions")
	proto.RegisterType((*Product)(nil), "marketplace_packages.v1.Product")
	proto.RegisterEnum("marketplace_packages.v1.Lmi_Categories", Lmi_Categories_name, Lmi_Categories_value)
	proto.RegisterEnum("marketplace_packages.v1.ServiceModel_Type", ServiceModel_Type_name, ServiceModel_Type_value)
}

func init() { proto.RegisterFile("marketplace_packages/v1/product.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 921 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x54, 0x4d, 0x6f, 0xdb, 0x46,
	0x10, 0x8d, 0x2c, 0x45, 0x92, 0x47, 0xb6, 0xc2, 0x6c, 0x13, 0x7b, 0xa3, 0xd4, 0x8d, 0xa0, 0x22,
	0x8d, 0x90, 0x06, 0x32, 0xec, 0xa4, 0xbd, 0x2b, 0x32, 0x9d, 0x12, 0xb0, 0x29, 0x97, 0xa2, 0x9b,
	0xf6, 0x44, 0x50, 0xe4, 0x48, 0x5e, 0x88, 0x5f, 0xde, 0x25, 0x6d, 0xb0, 0x3f, 0xa0, 0xc7, 0x1e,
	0xfa, 0x8b, 0x8b, 0xdd, 0xa5, 0x1c, 0x15, 0xa8, 0x90, 0xdb, 0xce, 0x7b, 0x6f, 0x38, 0xb3, 0xcb,
	0x37, 0x03, 0xaf, 0x63, 0x9f, 0xaf, 0x30, 0xcf, 0x22, 0x3f, 0x40, 0x2f, 0xf3, 0x83, 0x95, 0xbf,
	0x44, 0x71, 0x7c, 0x77, 0x72, 0x9c, 0xf1, 0x34, 0x2c, 0x82, 0x7c, 0x94, 0xf1, 0x34, 0x4f, 0xc9,
	0xe1, 0xff, 0xc9, 0x46, 0x77, 0x27, 0xbd, 0x57, 0xcb, 0x34, 0x5d, 0x46, 0x78, 0xac, 0x64, 0xf3,
	0x62, 0x71, 0x9c, 0xb3, 0x18, 0x45, 0xee, 0xc7, 0x99, 0xce, 0xec, 0x6d, 0x2f, 0xa0, 0xcf, 0x95,
	0xec, 0xed, 0x36, 0x19, 0x47, 0x91, 0x73, 0x16, 0xe4, 0x2c, 0x4d, 0x84, 0xd6, 0x0e, 0xfe, 0xae,
	0x41, 0xfd, 0x22, 0x66, 0x83, 0xbf, 0x6a, 0x00, 0x13, 0x3f, 0xc7, 0x65, 0xca, 0x19, 0x0a, 0xd2,
	0x81, 0x96, 0x3d, 0x75, 0xbd, 0x99, 0xe9, 0x1a, 0x8f, 0x64, 0xf0, 0xd9, 0xfc, 0x38, 0xb3, 0x5c,
	0xd3, 0xa8, 0x91, 0x1e, 0x1c, 0x4c, 0xa6, 0xb6, 0x6b, 0xda, 0xae, 0x37, 0xb6, 0xcf, 0x3c, 0xf3,
	0xf7, 0x2b, 0xd3, 0xb1, 0x4c, 0x7b, 0x62, 0x1a, 0x3b, 0x64, 0x0f, 0xda, 0x17, 0xd6, 0xcc, 0xb5,
	0xec, 0x4f, 0x33, 0xa3, 0x4e, 0xba, 0x00, 0x8e, 0x79, 0x75, 0xed, 0x8e, 0x5d, 0x6b, 0x6a, 0x1b,
	0x0d, 0xd2, 0x82, 0xfa, 0xcc, 0x9c, 0x1a, 0x8f, 0x09, 0x40, 0x73, 0x36, 0x9d, 0x58, 0xe3, 0x0b,
	0xa3, 0x49, 0x9e, 0x40, 0x67, 0x7c, 0xf6, 0x9b, 0xe9, 0xb8, 0xd6, 0xcc, 0xb2, 0x3f, 0x19, 0xad,
	0xc1, 0x7b, 0xd8, 0x9b, 0x21, 0xbf, 0x63, 0x01, 0x5e, 0xa6, 0x21, 0x46, 0x83, 0xef, 0xa1, 0xe1,
	0x96, 0x19, 0xca, 0xec, 0x33, 0xeb, 0x0f, 0xe3, 0x11, 0x69, 0x43, 0xe3, 0xcc, 0xfa, 0x7c, 0x69,
	0xd4, 0xf4, 0xe9, 0xfc, 0xd2, 0xd8, 0x19, 0xd8, 0x40, 0xcf, 0x39, 0xde, 0x16, 0x98, 0xe4, 0x51,
	0x39, 0x16, 0x2b, 0x0c, 0x7f, 0x2d, 0x50, 0xa8, 0x7b, 0x92, 0x1e, 0xb4, 0x6f, 0xab, 0x80, 0xd6,
	0xfa, 0xb5, 0xe1, 0xae, 0xf3, 0x10, 0x93, 0x03, 0x68, 0xfa, 0x89, 0xb8, 0x47, 0x4e, 0x77, 0x14,
	0x53, 0x45, 0x83, 0x7f, 0x00, 0x5a, 0x57, 0xfa, 0xa7, 0x91, 0x23, 0x80, 0xea, 0xff, 0x79, 0x2c,
	0xac, 0xbe, 0xb0, 0x5b, 0x21, 0x56, 0xa8, 0x68, 0x9f, 0xe7, 0x09, 0x72, 0x49, 0xef, 0x54, 0xb4,
	0x46, 0xac, 0x90, 0x10, 0x68, 0x24, 0x7e, 0x8c, 0xb4, 0xae, 0x08, 0x75, 0x26, 0x14, 0x5a, 0xb9,
	0xbf, 0x8c, 0x58, 0x82, 0xb4, 0xa1, 0xe0, 0x75, 0x48, 0xfa, 0xd0, 0x09, 0x51, 0x04, 0x9c, 0x65,
	0xaa, 0xdd, 0xc7, 0x8a, 0xdd, 0x84, 0xc8, 0x3b, 0x20, 0x2b, 0x2c, 0x3d, 0x81, 0x51, 0xc4, 0x92,
	0xa5, 0x97, 0xa5, 0x2c, 0xc9, 0x05, 0x6d, 0xf6, 0xeb, 0xc3, 0x5d, 0xc7, 0x58, 0x61, 0x39, 0xd3,
	0xc4, 0x95, 0xc2, 0xc9, 0x0b, 0x68, 0xb3, 0x20, 0x4d, 0xbc, 0x82, 0x47, 0xb4, 0xa5, 0x4b, 0xc9,
	0xf8, 0x9a, 0x47, 0x64, 0x08, 0xc6, 0x0d, 0xfa, 0xa1, 0x6c, 0x3b, 0xf6, 0x97, 0xa8, 0x24, 0x6d,
	0x25, 0xe9, 0x6a, 0xdc, 0x92, 0xb0, 0x54, 0xbe, 0x81, 0x27, 0x22, 0xe0, 0x88, 0x89, 0xb8, 0x49,
	0x73, 0xa9, 0x13, 0x74, 0x57, 0xd5, 0xeb, 0x7e, 0x81, 0xaf, 0x79, 0x24, 0xc8, 0x0f, 0xf0, 0x24,
	0x0b, 0x17, 0x5e, 0x91, 0x45, 0xa9, 0x1f, 0x6a, 0x21, 0x28, 0xe1, 0x7e, 0x16, 0x2e, 0xae, 0x15,
	0xaa, 0x74, 0xbf, 0x40, 0x3b, 0x28, 0x38, 0xc7, 0x24, 0x28, 0x69, 0xa7, 0x5f, 0x1b, 0x76, 0x4f,
	0xdf, 0x8d, 0xb6, 0xcc, 0xc4, 0x68, 0xa2, 0x85, 0x0c, 0xc5, 0xfa, 0x58, 0x3a, 0x0f, 0xd9, 0xb2,
	0xb5, 0xfb, 0x9b, 0x34, 0x42, 0xe1, 0x47, 0xe8, 0x65, 0x9c, 0x05, 0x48, 0xf7, 0xf4, 0x1d, 0x1e,
	0xe0, 0x2b, 0x89, 0x92, 0x0f, 0x70, 0xc0, 0x31, 0x48, 0xe3, 0x18, 0x93, 0x10, 0x43, 0xf5, 0x7c,
	0x95, 0x7e, 0x5f, 0xe9, 0x9f, 0x6d, 0xb0, 0xf2, 0x09, 0x75, 0xd6, 0x8f, 0xf0, 0x74, 0xce, 0xf4,
	0x43, 0x2f, 0xb4, 0xbd, 0x82, 0x92, 0x76, 0x55, 0x82, 0x51, 0x11, 0xe7, 0x6b, 0x9c, 0x4c, 0x61,
	0x5f, 0x68, 0xe3, 0x7a, 0xb1, 0x74, 0x2e, 0x35, 0xfa, 0xf5, 0x61, 0xf7, 0xf4, 0xed, 0xd6, 0xab,
	0x6d, 0xda, 0x7c, 0x24, 0x3d, 0xee, 0xec, 0x89, 0x0d, 0x48, 0x1a, 0x37, 0xd0, 0x13, 0x59, 0xd2,
	0xa7, 0xda, 0xb8, 0xeb, 0x98, 0xd8, 0xd0, 0x8d, 0x62, 0xe6, 0x05, 0x0f, 0x13, 0x4b, 0x89, 0xaa,
	0xf6, 0x66, 0x6b, 0xb5, 0x8b, 0x98, 0x8d, 0xbe, 0x0c, 0xb8, 0xb3, 0x1f, 0xc5, 0x6c, 0x63, 0xde,
	0x0f, 0xa0, 0x99, 0x72, 0xb6, 0x64, 0x09, 0xfd, 0x46, 0x0f, 0x82, 0x8e, 0xc8, 0xcf, 0x70, 0x58,
	0x08, 0x14, 0x5e, 0x50, 0x88, 0x3c, 0x8d, 0xd9, 0x9f, 0xbe, 0x34, 0xa1, 0xb7, 0x48, 0x79, 0x4c,
	0x9f, 0xf5, 0x6b, 0xc3, 0xb6, 0xf3, 0x5c, 0xd2, 0x93, 0x4d, 0xf6, 0x3c, 0xe5, 0x31, 0x79, 0x09,
	0xbb, 0x98, 0xe4, 0xbc, 0x54, 0xb6, 0x7a, 0xae, 0x9b, 0x57, 0x80, 0x34, 0xd4, 0x2b, 0xe8, 0x08,
	0x14, 0x82, 0x55, 0xc6, 0x3c, 0x50, 0x34, 0x54, 0x50, 0x25, 0xb8, 0xc7, 0xb9, 0x60, 0xb9, 0xb6,
	0xe5, 0xa1, 0x16, 0x54, 0x90, 0x14, 0x1c, 0x01, 0x14, 0x59, 0xe8, 0xe7, 0x18, 0x7a, 0xf3, 0x92,
	0x52, 0x3d, 0x74, 0x15, 0xf2, 0xb1, 0x24, 0x3f, 0x41, 0x1b, 0x93, 0xd0, 0x93, 0x21, 0x7d, 0xd1,
	0xaf, 0x0d, 0x3b, 0xa7, 0xbd, 0x91, 0xde, 0xad, 0xa3, 0xf5, 0x6e, 0x1d, 0xb9, 0xeb, 0xdd, 0xea,
	0xb4, 0x30, 0x09, 0xcf, 0xfc, 0x1c, 0x89, 0x09, 0x8d, 0x85, 0x7f, 0x2b, 0x68, 0xaf, 0x5f, 0x1f,
	0x76, 0x4e, 0x4f, 0xb6, 0x3e, 0xe5, 0xb6, 0x55, 0xe3, 0xa8, 0x74, 0xf2, 0x01, 0x5a, 0x01, 0x47,
	0xd9, 0x0a, 0x7d, 0xf9, 0xf5, 0xe2, 0x95, 0x54, 0x66, 0x55, 0x17, 0xa0, 0xdf, 0x7e, 0x3d, 0xab,
	0x92, 0xca, 0x97, 0x62, 0xc2, 0xf3, 0x79, 0x70, 0xc3, 0xee, 0x30, 0xa4, 0x47, 0xea, 0x9f, 0x00,
	0x13, 0xe3, 0x0a, 0x21, 0x16, 0xec, 0x6d, 0x6e, 0x7d, 0xfa, 0x9d, 0xfa, 0xf6, 0xeb, 0xad, 0x77,
	0x73, 0x36, 0xc4, 0xce, 0x7f, 0x52, 0xe7, 0x4d, 0xd5, 0xc8, 0xfb, 0x7f, 0x03, 0x00, 0x00, 0xff,
	0xff, 0xcb, 0xcd, 0xbf, 0x01, 0xe7, 0x06, 0x00, 0x00,
}
