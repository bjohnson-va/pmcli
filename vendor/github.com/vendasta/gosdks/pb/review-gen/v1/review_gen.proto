syntax="proto3";

package review_gen.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

//A customer that can be asked to review the business
message Contact {
    //The customer's email (used to send email review requests)
    string email = 1;
    //The customer's first name (used in review request templates)
    string first_name = 2;
    //The customer's last name (used in review request templates)
    string last_name = 3;
    //The customer's mobile number (used to send SMS review requests)
    string mobile_number = 4;
}

//Creates a new Contact, and optionally request a review from them via email or SMS
message CreateContactRequest {
    //The contact to create
    Contact contact = 1;
    //Request a review via the default email template?
    bool request_review_by_email = 2;
    //Request a review via the default SMS template?
    bool request_review_by_SMS = 3;
    //The AccountGroupId to create the contact under
    string account = 4;
}

// Stores the data about a single review, on a single business listing, on a single
// review source.
message Review {
    // The ID of the review
    string review_id = 1;
    // The ID of the listing the review is associated with
    string listing_id = 2;
    // The ID of the business the listing is associated with
    string business_id = 3;
    // The ID of the review source
    string source_id = 4;
    // The title of the review (not all sites have a title)
    string title = 5;
    // Indicates whether a star rating is included with the review
    bool has_rating = 6;
    // The number of stars (1-5), only valid if has_rating is true
    int32 stars = 7;
    // A snippet of the text of the review (not all sites require a reviewer to 
    // write anything to accompany their star rating).  
    string snippet = 8;
    // A direct link to the review (or listing, if the source does not support
    // direct links to individual reviews).
    string link = 9;
    // The time when review was retrieved.  Some sources have push-APIs so the
    // reviews will be available almost immediately, others only after they are
    // periodically fetch.
    google.protobuf.Timestamp retrieved = 10;
    // The time when review was created (many sites quarantine reviews, so this 
    // often is not when the review first appeared on the site)
    google.protobuf.Timestamp created = 11;
}

// Requests a set of reviews for a business within a specific timeframe
message ListReviewRequest {
    // The ID of the business to gather reviews for
    string business_id = 1;
    // The start of the window in time to gather reviews 
    google.protobuf.Timestamp from = 2;
    // The end of the window in time to gather reviews
    google.protobuf.Timestamp to = 3;
    // A cursor is provided to allow the client to gather reviews beyond the
    // first page of results.
    string cursor = 4;
}

message ListReviewResponse {
    // A list of reviews matching the requested time interval
    repeated Review reviews = 1;
    // Indicates that more reviews were avaialable, but not returned due
    // to the page size limit.
    bool more = 2;
    // A cursor that can be passed to subsequent GetReview requests to
    // page through the results.
    string cursor = 3;
}


message GetMultiReviewRequest {
    // The business the reviews are associated with
    string business_id = 1;
    // A list of review IDs to retrieve
    repeated string review_id = 3; 
}

message GetMultiReviewResponse {
    // A list of reviews matching the requested IDs, null if they can't be found
    repeated Review reviews = 1;
}

service CRM {
    //Adds a contact to the CRM and optionally requests a review from them
    rpc CreateContact(CreateContactRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { 
            post: "/v1/contact/create" 
            body: "*"
        };
    }
}

service Reviews {
    rpc GetMulti(GetMultiReviewRequest) returns (GetMultiReviewResponse) {
        option (google.api.http) = {
            post: "/v1/review/get"
            body: "*"
        };
    }

    rpc List(ListReviewRequest) returns (ListReviewResponse) {
        option (google.api.http) = {
            post: "/v1/review/list"
            body: "*"
        };
    }
}
