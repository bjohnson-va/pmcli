// Code generated by mockery v1.0.0
package iam

import context "golang.org/x/net/context"
import mock "github.com/stretchr/testify/mock"

// MockResourceAPI is an autogenerated mock type for the ResourceAPI type
type MockResourceAPI struct {
	mock.Mock
}

// RegisterPolicy provides a mock function with given fields: _a0, _a1
func (_m *MockResourceAPI) RegisterPolicy(_a0 context.Context, _a1 *Policy) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *Policy) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RegisterResource provides a mock function with given fields: _a0, _a1
func (_m *MockResourceAPI) RegisterResource(_a0 context.Context, _a1 *Resource) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *Resource) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RegisterResourceOwner provides a mock function with given fields: _a0, _a1
func (_m *MockResourceAPI) RegisterResourceOwner(_a0 context.Context, _a1 *ResourceOwner) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *ResourceOwner) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
