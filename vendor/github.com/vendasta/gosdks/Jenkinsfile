#!groovy
@Library('shared-libraries') _

properties ([
    buildDiscarder(logRotator(artifactNumToKeepStr: '5', daysToKeepStr: '15')),
    disableConcurrentBuilds()
])

def label = "gosdks.${env.BRANCH_NAME}.${env.BUILD_NUMBER}".replace('-', '_').replace('/', '_')

podTemplate(label: label, containers: [
    containerTemplate(
            name: 'jnlp',
            image: 'jenkinsci/jnlp-slave:3.14-1',
            alwaysPullImage: false,
            args: '${computer.jnlpmac} ${computer.name}',
            command: '',
            workingDir: '/home/jenkins',
            resourceRequestCpu: '.5',
            resourceLimitCpu: '1',
            resourceRequestMemory: '1Gi',
            resourceLimitMemory: '2Gi',
    ),
    containerTemplate(
            name: 'build',
            image: 'gcr.io/repcore-prod/gosdks_ci:v6',
            ttyEnabled: true,
            args: '',
            command: 'cat',
            alwaysPullImage: false,
            workingDir: '/home/jenkins',
            resourceRequestCpu: '2',
            resourceLimitCpu: '2',
            resourceRequestMemory: '4Gi',
            resourceLimitMemory: '4Gi',
            envVars: [
                containerEnvVar(key: 'GOOGLE_APPLICATION_CREDENTIALS', value: '/etc/hal9000/hal9000.json'),
            ]
    )],
    volumes: [
        secretVolume(mountPath: '/etc/hal9000', secretName: 'hal9000'),
        emptyDirVolume(mountPath: '/home/jenkins'),
    ]) {
    node(label) {
        def buildCommands = ["inv test", "inv vet", "inv lint"]
        def builders = generateBuildCommands(buildCommands, 'gosdks')

        stage("Checkout") {
            checkout scm
        }

        container("build") {
            sh("mkdir -p /go/src/github.com/vendasta")		                 
            sh("ln -s `pwd` /go/src/github.com/vendasta/gosdks")
            stageTestsAndLints(builders)
        }
    }
}
